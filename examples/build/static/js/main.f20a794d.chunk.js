(this["webpackJsonpts-previewer-demo"]=this["webpackJsonpts-previewer-demo"]||[]).push([[1],{12:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o={PreviewerProvider:!0,PreviewerEditor:!0,PreviewerError:!0,Previewer:!0,ProviderContext:!0,defineTheme:!0,setTheme:!0};Object.defineProperty(n,"PreviewerProvider",{enumerable:!0,get:function(){return r.PreviewerProvider}}),Object.defineProperty(n,"PreviewerEditor",{enumerable:!0,get:function(){return i.PreviewerEditor}}),Object.defineProperty(n,"PreviewerError",{enumerable:!0,get:function(){return a.PreviewerError}}),Object.defineProperty(n,"Previewer",{enumerable:!0,get:function(){return l.Previewer}}),Object.defineProperty(n,"ProviderContext",{enumerable:!0,get:function(){return p.ProviderContext}}),Object.defineProperty(n,"defineTheme",{enumerable:!0,get:function(){return s.defineTheme}}),Object.defineProperty(n,"setTheme",{enumerable:!0,get:function(){return s.setTheme}});var r=t(151),i=t(227),a=t(228),l=t(229),p=t(48),s=t(75),c=t(46);Object.keys(c).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(o,e)||Object.defineProperty(n,e,{enumerable:!0,get:function(){return c[e]}}))}))},141:function(e){e.exports=JSON.parse('[{"code":"\\n declare module \\"csstype\\" { \\n export interface StandardLonghandProperties<TLength = string | 0> {\\n  \\n  alignContent?: AlignContentProperty;\\n  \\n  alignItems?: AlignItemsProperty;\\n  \\n  alignSelf?: AlignSelfProperty;\\n  \\n  animationDelay?: GlobalsString;\\n  \\n  animationDirection?: AnimationDirectionProperty;\\n  \\n  animationDuration?: GlobalsString;\\n  \\n  animationFillMode?: AnimationFillModeProperty;\\n  \\n  animationIterationCount?: AnimationIterationCountProperty;\\n  \\n  animationName?: AnimationNameProperty;\\n  \\n  animationPlayState?: AnimationPlayStateProperty;\\n  \\n  animationTimingFunction?: AnimationTimingFunctionProperty;\\n  \\n  appearance?: AppearanceProperty;\\n  \\n  aspectRatio?: AspectRatioProperty;\\n  \\n  backdropFilter?: BackdropFilterProperty;\\n  \\n  backfaceVisibility?: BackfaceVisibilityProperty;\\n  \\n  backgroundAttachment?: BackgroundAttachmentProperty;\\n  \\n  backgroundBlendMode?: BackgroundBlendModeProperty;\\n  \\n  backgroundClip?: BackgroundClipProperty;\\n  \\n  backgroundColor?: BackgroundColorProperty;\\n  \\n  backgroundImage?: BackgroundImageProperty;\\n  \\n  backgroundOrigin?: BackgroundOriginProperty;\\n  \\n  backgroundPosition?: BackgroundPositionProperty<TLength>;\\n  \\n  backgroundPositionX?: BackgroundPositionXProperty<TLength>;\\n  \\n  backgroundPositionY?: BackgroundPositionYProperty<TLength>;\\n  \\n  backgroundRepeat?: BackgroundRepeatProperty;\\n  \\n  backgroundSize?: BackgroundSizeProperty<TLength>;\\n  \\n  blockOverflow?: BlockOverflowProperty;\\n  \\n  blockSize?: BlockSizeProperty<TLength>;\\n  \\n  borderBlockColor?: BorderBlockColorProperty;\\n  \\n  borderBlockEndColor?: BorderBlockEndColorProperty;\\n  \\n  borderBlockEndStyle?: BorderBlockEndStyleProperty;\\n  \\n  borderBlockEndWidth?: BorderBlockEndWidthProperty<TLength>;\\n  \\n  borderBlockStartColor?: BorderBlockStartColorProperty;\\n  \\n  borderBlockStartStyle?: BorderBlockStartStyleProperty;\\n  \\n  borderBlockStartWidth?: BorderBlockStartWidthProperty<TLength>;\\n  \\n  borderBlockStyle?: BorderBlockStyleProperty;\\n  \\n  borderBlockWidth?: BorderBlockWidthProperty<TLength>;\\n  \\n  borderBottomColor?: BorderBottomColorProperty;\\n  \\n  borderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength>;\\n  \\n  borderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength>;\\n  \\n  borderBottomStyle?: BorderBottomStyleProperty;\\n  \\n  borderBottomWidth?: BorderBottomWidthProperty<TLength>;\\n  \\n  borderCollapse?: BorderCollapseProperty;\\n  \\n  borderEndEndRadius?: BorderEndEndRadiusProperty<TLength>;\\n  \\n  borderEndStartRadius?: BorderEndStartRadiusProperty<TLength>;\\n  \\n  borderImageOutset?: BorderImageOutsetProperty<TLength>;\\n  \\n  borderImageRepeat?: BorderImageRepeatProperty;\\n  \\n  borderImageSlice?: BorderImageSliceProperty;\\n  \\n  borderImageSource?: BorderImageSourceProperty;\\n  \\n  borderImageWidth?: BorderImageWidthProperty<TLength>;\\n  \\n  borderInlineColor?: BorderInlineColorProperty;\\n  \\n  borderInlineEndColor?: BorderInlineEndColorProperty;\\n  \\n  borderInlineEndStyle?: BorderInlineEndStyleProperty;\\n  \\n  borderInlineEndWidth?: BorderInlineEndWidthProperty<TLength>;\\n  \\n  borderInlineStartColor?: BorderInlineStartColorProperty;\\n  \\n  borderInlineStartStyle?: BorderInlineStartStyleProperty;\\n  \\n  borderInlineStartWidth?: BorderInlineStartWidthProperty<TLength>;\\n  \\n  borderInlineStyle?: BorderInlineStyleProperty;\\n  \\n  borderInlineWidth?: BorderInlineWidthProperty<TLength>;\\n  \\n  borderLeftColor?: BorderLeftColorProperty;\\n  \\n  borderLeftStyle?: BorderLeftStyleProperty;\\n  \\n  borderLeftWidth?: BorderLeftWidthProperty<TLength>;\\n  \\n  borderRightColor?: BorderRightColorProperty;\\n  \\n  borderRightStyle?: BorderRightStyleProperty;\\n  \\n  borderRightWidth?: BorderRightWidthProperty<TLength>;\\n  \\n  borderSpacing?: BorderSpacingProperty<TLength>;\\n  \\n  borderStartEndRadius?: BorderStartEndRadiusProperty<TLength>;\\n  \\n  borderStartStartRadius?: BorderStartStartRadiusProperty<TLength>;\\n  \\n  borderTopColor?: BorderTopColorProperty;\\n  \\n  borderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength>;\\n  \\n  borderTopRightRadius?: BorderTopRightRadiusProperty<TLength>;\\n  \\n  borderTopStyle?: BorderTopStyleProperty;\\n  \\n  borderTopWidth?: BorderTopWidthProperty<TLength>;\\n  \\n  bottom?: BottomProperty<TLength>;\\n  \\n  boxDecorationBreak?: BoxDecorationBreakProperty;\\n  \\n  boxShadow?: BoxShadowProperty;\\n  \\n  boxSizing?: BoxSizingProperty;\\n  \\n  breakAfter?: BreakAfterProperty;\\n  \\n  breakBefore?: BreakBeforeProperty;\\n  \\n  breakInside?: BreakInsideProperty;\\n  \\n  captionSide?: CaptionSideProperty;\\n  \\n  caretColor?: CaretColorProperty;\\n  \\n  clear?: ClearProperty;\\n  \\n  clipPath?: ClipPathProperty;\\n  \\n  color?: ColorProperty;\\n  \\n  colorAdjust?: ColorAdjustProperty;\\n  \\n  columnCount?: ColumnCountProperty;\\n  \\n  columnFill?: ColumnFillProperty;\\n  \\n  columnGap?: ColumnGapProperty<TLength>;\\n  \\n  columnRuleColor?: ColumnRuleColorProperty;\\n  \\n  columnRuleStyle?: ColumnRuleStyleProperty;\\n  \\n  columnRuleWidth?: ColumnRuleWidthProperty<TLength>;\\n  \\n  columnSpan?: ColumnSpanProperty;\\n  \\n  columnWidth?: ColumnWidthProperty<TLength>;\\n  \\n  contain?: ContainProperty;\\n  \\n  content?: ContentProperty;\\n  \\n  counterIncrement?: CounterIncrementProperty;\\n  \\n  counterReset?: CounterResetProperty;\\n  \\n  counterSet?: CounterSetProperty;\\n  \\n  cursor?: CursorProperty;\\n  \\n  direction?: DirectionProperty;\\n  \\n  display?: DisplayProperty;\\n  \\n  emptyCells?: EmptyCellsProperty;\\n  \\n  filter?: FilterProperty;\\n  \\n  flexBasis?: FlexBasisProperty<TLength>;\\n  \\n  flexDirection?: FlexDirectionProperty;\\n  \\n  flexGrow?: GlobalsNumber;\\n  \\n  flexShrink?: GlobalsNumber;\\n  \\n  flexWrap?: FlexWrapProperty;\\n  \\n  float?: FloatProperty;\\n  \\n  fontFamily?: FontFamilyProperty;\\n  \\n  fontFeatureSettings?: FontFeatureSettingsProperty;\\n  \\n  fontKerning?: FontKerningProperty;\\n  \\n  fontLanguageOverride?: FontLanguageOverrideProperty;\\n  \\n  fontOpticalSizing?: FontOpticalSizingProperty;\\n  \\n  fontSize?: FontSizeProperty<TLength>;\\n  \\n  fontSizeAdjust?: FontSizeAdjustProperty;\\n  \\n  fontStretch?: FontStretchProperty;\\n  \\n  fontStyle?: FontStyleProperty;\\n  \\n  fontSynthesis?: FontSynthesisProperty;\\n  \\n  fontVariant?: FontVariantProperty;\\n  \\n  fontVariantCaps?: FontVariantCapsProperty;\\n  \\n  fontVariantEastAsian?: FontVariantEastAsianProperty;\\n  \\n  fontVariantLigatures?: FontVariantLigaturesProperty;\\n  \\n  fontVariantNumeric?: FontVariantNumericProperty;\\n  \\n  fontVariantPosition?: FontVariantPositionProperty;\\n  \\n  fontVariationSettings?: FontVariationSettingsProperty;\\n  \\n  fontWeight?: FontWeightProperty;\\n  \\n  gridAutoColumns?: GridAutoColumnsProperty<TLength>;\\n  \\n  gridAutoFlow?: GridAutoFlowProperty;\\n  \\n  gridAutoRows?: GridAutoRowsProperty<TLength>;\\n  \\n  gridColumnEnd?: GridColumnEndProperty;\\n  \\n  gridColumnStart?: GridColumnStartProperty;\\n  \\n  gridRowEnd?: GridRowEndProperty;\\n  \\n  gridRowStart?: GridRowStartProperty;\\n  \\n  gridTemplateAreas?: GridTemplateAreasProperty;\\n  \\n  gridTemplateColumns?: GridTemplateColumnsProperty<TLength>;\\n  \\n  gridTemplateRows?: GridTemplateRowsProperty<TLength>;\\n  \\n  hangingPunctuation?: HangingPunctuationProperty;\\n  \\n  height?: HeightProperty<TLength>;\\n  \\n  hyphens?: HyphensProperty;\\n  \\n  imageOrientation?: ImageOrientationProperty;\\n  \\n  imageRendering?: ImageRenderingProperty;\\n  \\n  imageResolution?: ImageResolutionProperty;\\n  \\n  initialLetter?: InitialLetterProperty;\\n  \\n  inlineSize?: InlineSizeProperty<TLength>;\\n  \\n  inset?: InsetProperty<TLength>;\\n  \\n  insetBlock?: InsetBlockProperty<TLength>;\\n  \\n  insetBlockEnd?: InsetBlockEndProperty<TLength>;\\n  \\n  insetBlockStart?: InsetBlockStartProperty<TLength>;\\n  \\n  insetInline?: InsetInlineProperty<TLength>;\\n  \\n  insetInlineEnd?: InsetInlineEndProperty<TLength>;\\n  \\n  insetInlineStart?: InsetInlineStartProperty<TLength>;\\n  \\n  isolation?: IsolationProperty;\\n  \\n  justifyContent?: JustifyContentProperty;\\n  \\n  justifyItems?: JustifyItemsProperty;\\n  \\n  justifySelf?: JustifySelfProperty;\\n  \\n  left?: LeftProperty<TLength>;\\n  \\n  letterSpacing?: LetterSpacingProperty<TLength>;\\n  \\n  lineBreak?: LineBreakProperty;\\n  \\n  lineHeight?: LineHeightProperty<TLength>;\\n  \\n  lineHeightStep?: LineHeightStepProperty<TLength>;\\n  \\n  listStyleImage?: ListStyleImageProperty;\\n  \\n  listStylePosition?: ListStylePositionProperty;\\n  \\n  listStyleType?: ListStyleTypeProperty;\\n  \\n  marginBlock?: MarginBlockProperty<TLength>;\\n  \\n  marginBlockEnd?: MarginBlockEndProperty<TLength>;\\n  \\n  marginBlockStart?: MarginBlockStartProperty<TLength>;\\n  \\n  marginBottom?: MarginBottomProperty<TLength>;\\n  \\n  marginInline?: MarginInlineProperty<TLength>;\\n  \\n  marginInlineEnd?: MarginInlineEndProperty<TLength>;\\n  \\n  marginInlineStart?: MarginInlineStartProperty<TLength>;\\n  \\n  marginLeft?: MarginLeftProperty<TLength>;\\n  \\n  marginRight?: MarginRightProperty<TLength>;\\n  \\n  marginTop?: MarginTopProperty<TLength>;\\n  \\n  maskBorderMode?: MaskBorderModeProperty;\\n  \\n  maskBorderOutset?: MaskBorderOutsetProperty<TLength>;\\n  \\n  maskBorderRepeat?: MaskBorderRepeatProperty;\\n  \\n  maskBorderSlice?: MaskBorderSliceProperty;\\n  \\n  maskBorderSource?: MaskBorderSourceProperty;\\n  \\n  maskBorderWidth?: MaskBorderWidthProperty<TLength>;\\n  \\n  maskClip?: MaskClipProperty;\\n  \\n  maskComposite?: MaskCompositeProperty;\\n  \\n  maskImage?: MaskImageProperty;\\n  \\n  maskMode?: MaskModeProperty;\\n  \\n  maskOrigin?: MaskOriginProperty;\\n  \\n  maskPosition?: MaskPositionProperty<TLength>;\\n  \\n  maskRepeat?: MaskRepeatProperty;\\n  \\n  maskSize?: MaskSizeProperty<TLength>;\\n  \\n  maskType?: MaskTypeProperty;\\n  \\n  maxBlockSize?: MaxBlockSizeProperty<TLength>;\\n  \\n  maxHeight?: MaxHeightProperty<TLength>;\\n  \\n  maxInlineSize?: MaxInlineSizeProperty<TLength>;\\n  \\n  maxLines?: MaxLinesProperty;\\n  \\n  maxWidth?: MaxWidthProperty<TLength>;\\n  \\n  minBlockSize?: MinBlockSizeProperty<TLength>;\\n  \\n  minHeight?: MinHeightProperty<TLength>;\\n  \\n  minInlineSize?: MinInlineSizeProperty<TLength>;\\n  \\n  minWidth?: MinWidthProperty<TLength>;\\n  \\n  mixBlendMode?: MixBlendModeProperty;\\n  \\n  motionDistance?: OffsetDistanceProperty<TLength>;\\n  \\n  motionPath?: OffsetPathProperty;\\n  \\n  motionRotation?: OffsetRotateProperty;\\n  \\n  objectFit?: ObjectFitProperty;\\n  \\n  objectPosition?: ObjectPositionProperty<TLength>;\\n  \\n  offsetAnchor?: OffsetAnchorProperty<TLength>;\\n  \\n  offsetDistance?: OffsetDistanceProperty<TLength>;\\n  \\n  offsetPath?: OffsetPathProperty;\\n  \\n  offsetRotate?: OffsetRotateProperty;\\n  \\n  offsetRotation?: OffsetRotateProperty;\\n  \\n  opacity?: OpacityProperty;\\n  \\n  order?: GlobalsNumber;\\n  \\n  orphans?: GlobalsNumber;\\n  \\n  outlineColor?: OutlineColorProperty;\\n  \\n  outlineOffset?: OutlineOffsetProperty<TLength>;\\n  \\n  outlineStyle?: OutlineStyleProperty;\\n  \\n  outlineWidth?: OutlineWidthProperty<TLength>;\\n  \\n  overflowAnchor?: OverflowAnchorProperty;\\n  \\n  overflowBlock?: OverflowBlockProperty;\\n  \\n  overflowClipBox?: OverflowClipBoxProperty;\\n  \\n  overflowInline?: OverflowInlineProperty;\\n  \\n  overflowWrap?: OverflowWrapProperty;\\n  \\n  overflowX?: OverflowXProperty;\\n  \\n  overflowY?: OverflowYProperty;\\n  \\n  overscrollBehavior?: OverscrollBehaviorProperty;\\n  \\n  overscrollBehaviorBlock?: OverscrollBehaviorBlockProperty;\\n  \\n  overscrollBehaviorInline?: OverscrollBehaviorInlineProperty;\\n  \\n  overscrollBehaviorX?: OverscrollBehaviorXProperty;\\n  \\n  overscrollBehaviorY?: OverscrollBehaviorYProperty;\\n  \\n  paddingBlock?: PaddingBlockProperty<TLength>;\\n  \\n  paddingBlockEnd?: PaddingBlockEndProperty<TLength>;\\n  \\n  paddingBlockStart?: PaddingBlockStartProperty<TLength>;\\n  \\n  paddingBottom?: PaddingBottomProperty<TLength>;\\n  \\n  paddingInline?: PaddingInlineProperty<TLength>;\\n  \\n  paddingInlineEnd?: PaddingInlineEndProperty<TLength>;\\n  \\n  paddingInlineStart?: PaddingInlineStartProperty<TLength>;\\n  \\n  paddingLeft?: PaddingLeftProperty<TLength>;\\n  \\n  paddingRight?: PaddingRightProperty<TLength>;\\n  \\n  paddingTop?: PaddingTopProperty<TLength>;\\n  \\n  pageBreakAfter?: PageBreakAfterProperty;\\n  \\n  pageBreakBefore?: PageBreakBeforeProperty;\\n  \\n  pageBreakInside?: PageBreakInsideProperty;\\n  \\n  paintOrder?: PaintOrderProperty;\\n  \\n  perspective?: PerspectiveProperty<TLength>;\\n  \\n  perspectiveOrigin?: PerspectiveOriginProperty<TLength>;\\n  \\n  placeContent?: PlaceContentProperty;\\n  \\n  pointerEvents?: PointerEventsProperty;\\n  \\n  position?: PositionProperty;\\n  \\n  quotes?: QuotesProperty;\\n  \\n  resize?: ResizeProperty;\\n  \\n  right?: RightProperty<TLength>;\\n  \\n  rotate?: RotateProperty;\\n  \\n  rowGap?: RowGapProperty<TLength>;\\n  \\n  rubyAlign?: RubyAlignProperty;\\n  \\n  rubyMerge?: RubyMergeProperty;\\n  \\n  rubyPosition?: RubyPositionProperty;\\n  \\n  scale?: ScaleProperty;\\n  \\n  scrollBehavior?: ScrollBehaviorProperty;\\n  \\n  scrollMargin?: ScrollMarginProperty<TLength>;\\n  \\n  scrollMarginBlock?: ScrollMarginBlockProperty<TLength>;\\n  \\n  scrollMarginBlockEnd?: ScrollMarginBlockEndProperty<TLength>;\\n  \\n  scrollMarginBlockStart?: ScrollMarginBlockStartProperty<TLength>;\\n  \\n  scrollMarginBottom?: ScrollMarginBottomProperty<TLength>;\\n  \\n  scrollMarginInline?: ScrollMarginInlineProperty<TLength>;\\n  \\n  scrollMarginInlineEnd?: ScrollMarginInlineEndProperty<TLength>;\\n  \\n  scrollMarginInlineStart?: ScrollMarginInlineStartProperty<TLength>;\\n  \\n  scrollMarginLeft?: ScrollMarginLeftProperty<TLength>;\\n  \\n  scrollMarginRight?: ScrollMarginRightProperty<TLength>;\\n  \\n  scrollMarginTop?: ScrollMarginTopProperty<TLength>;\\n  \\n  scrollPadding?: ScrollPaddingProperty<TLength>;\\n  \\n  scrollPaddingBlock?: ScrollPaddingBlockProperty<TLength>;\\n  \\n  scrollPaddingBlockEnd?: ScrollPaddingBlockEndProperty<TLength>;\\n  \\n  scrollPaddingBlockStart?: ScrollPaddingBlockStartProperty<TLength>;\\n  \\n  scrollPaddingBottom?: ScrollPaddingBottomProperty<TLength>;\\n  \\n  scrollPaddingInline?: ScrollPaddingInlineProperty<TLength>;\\n  \\n  scrollPaddingInlineEnd?: ScrollPaddingInlineEndProperty<TLength>;\\n  \\n  scrollPaddingInlineStart?: ScrollPaddingInlineStartProperty<TLength>;\\n  \\n  scrollPaddingLeft?: ScrollPaddingLeftProperty<TLength>;\\n  \\n  scrollPaddingRight?: ScrollPaddingRightProperty<TLength>;\\n  \\n  scrollPaddingTop?: ScrollPaddingTopProperty<TLength>;\\n  \\n  scrollSnapAlign?: ScrollSnapAlignProperty;\\n  \\n  scrollSnapMargin?: ScrollMarginProperty<TLength>;\\n  \\n  scrollSnapMarginBottom?: ScrollMarginBottomProperty<TLength>;\\n  \\n  scrollSnapMarginLeft?: ScrollMarginLeftProperty<TLength>;\\n  \\n  scrollSnapMarginRight?: ScrollMarginRightProperty<TLength>;\\n  \\n  scrollSnapMarginTop?: ScrollMarginTopProperty<TLength>;\\n  \\n  scrollSnapStop?: ScrollSnapStopProperty;\\n  \\n  scrollSnapType?: ScrollSnapTypeProperty;\\n  \\n  scrollbarColor?: ScrollbarColorProperty;\\n  \\n  scrollbarWidth?: ScrollbarWidthProperty;\\n  \\n  shapeImageThreshold?: ShapeImageThresholdProperty;\\n  \\n  shapeMargin?: ShapeMarginProperty<TLength>;\\n  \\n  shapeOutside?: ShapeOutsideProperty;\\n  \\n  tabSize?: TabSizeProperty<TLength>;\\n  \\n  tableLayout?: TableLayoutProperty;\\n  \\n  textAlign?: TextAlignProperty;\\n  \\n  textAlignLast?: TextAlignLastProperty;\\n  \\n  textCombineUpright?: TextCombineUprightProperty;\\n  \\n  textDecorationColor?: TextDecorationColorProperty;\\n  \\n  textDecorationLine?: TextDecorationLineProperty;\\n  \\n  textDecorationSkip?: TextDecorationSkipProperty;\\n  \\n  textDecorationSkipInk?: TextDecorationSkipInkProperty;\\n  \\n  textDecorationStyle?: TextDecorationStyleProperty;\\n  \\n  textDecorationThickness?: TextDecorationThicknessProperty<TLength>;\\n  \\n  textDecorationWidth?: TextDecorationThicknessProperty<TLength>;\\n  \\n  textEmphasisColor?: TextEmphasisColorProperty;\\n  \\n  textEmphasisPosition?: GlobalsString;\\n  \\n  textEmphasisStyle?: TextEmphasisStyleProperty;\\n  \\n  textIndent?: TextIndentProperty<TLength>;\\n  \\n  textJustify?: TextJustifyProperty;\\n  \\n  textOrientation?: TextOrientationProperty;\\n  \\n  textOverflow?: TextOverflowProperty;\\n  \\n  textRendering?: TextRenderingProperty;\\n  \\n  textShadow?: TextShadowProperty;\\n  \\n  textSizeAdjust?: TextSizeAdjustProperty;\\n  \\n  textTransform?: TextTransformProperty;\\n  \\n  textUnderlineOffset?: TextUnderlineOffsetProperty<TLength>;\\n  \\n  textUnderlinePosition?: TextUnderlinePositionProperty;\\n  \\n  top?: TopProperty<TLength>;\\n  \\n  touchAction?: TouchActionProperty;\\n  \\n  transform?: TransformProperty;\\n  \\n  transformBox?: TransformBoxProperty;\\n  \\n  transformOrigin?: TransformOriginProperty<TLength>;\\n  \\n  transformStyle?: TransformStyleProperty;\\n  \\n  transitionDelay?: GlobalsString;\\n  \\n  transitionDuration?: GlobalsString;\\n  \\n  transitionProperty?: TransitionPropertyProperty;\\n  \\n  transitionTimingFunction?: TransitionTimingFunctionProperty;\\n  \\n  translate?: TranslateProperty<TLength>;\\n  \\n  unicodeBidi?: UnicodeBidiProperty;\\n  \\n  userSelect?: UserSelectProperty;\\n  \\n  verticalAlign?: VerticalAlignProperty<TLength>;\\n  \\n  visibility?: VisibilityProperty;\\n  \\n  whiteSpace?: WhiteSpaceProperty;\\n  \\n  widows?: GlobalsNumber;\\n  \\n  width?: WidthProperty<TLength>;\\n  \\n  willChange?: WillChangeProperty;\\n  \\n  wordBreak?: WordBreakProperty;\\n  \\n  wordSpacing?: WordSpacingProperty<TLength>;\\n  \\n  wordWrap?: WordWrapProperty;\\n  \\n  writingMode?: WritingModeProperty;\\n  \\n  zIndex?: ZIndexProperty;\\n  \\n  zoom?: ZoomProperty;\\n}\\n\\nexport interface StandardShorthandProperties<TLength = string | 0> {\\n  \\n  all?: Globals;\\n  \\n  animation?: AnimationProperty;\\n  \\n  background?: BackgroundProperty<TLength>;\\n  \\n  border?: BorderProperty<TLength>;\\n  \\n  borderBlock?: BorderBlockProperty<TLength>;\\n  \\n  borderBlockEnd?: BorderBlockEndProperty<TLength>;\\n  \\n  borderBlockStart?: BorderBlockStartProperty<TLength>;\\n  \\n  borderBottom?: BorderBottomProperty<TLength>;\\n  \\n  borderColor?: BorderColorProperty;\\n  \\n  borderImage?: BorderImageProperty;\\n  \\n  borderInline?: BorderInlineProperty<TLength>;\\n  \\n  borderInlineEnd?: BorderInlineEndProperty<TLength>;\\n  \\n  borderInlineStart?: BorderInlineStartProperty<TLength>;\\n  \\n  borderLeft?: BorderLeftProperty<TLength>;\\n  \\n  borderRadius?: BorderRadiusProperty<TLength>;\\n  \\n  borderRight?: BorderRightProperty<TLength>;\\n  \\n  borderStyle?: BorderStyleProperty;\\n  \\n  borderTop?: BorderTopProperty<TLength>;\\n  \\n  borderWidth?: BorderWidthProperty<TLength>;\\n  \\n  columnRule?: ColumnRuleProperty<TLength>;\\n  \\n  columns?: ColumnsProperty<TLength>;\\n  \\n  flex?: FlexProperty<TLength>;\\n  \\n  flexFlow?: FlexFlowProperty;\\n  \\n  font?: FontProperty;\\n  \\n  gap?: GapProperty<TLength>;\\n  \\n  grid?: GridProperty;\\n  \\n  gridArea?: GridAreaProperty;\\n  \\n  gridColumn?: GridColumnProperty;\\n  \\n  gridRow?: GridRowProperty;\\n  \\n  gridTemplate?: GridTemplateProperty;\\n  \\n  lineClamp?: LineClampProperty;\\n  \\n  listStyle?: ListStyleProperty;\\n  \\n  margin?: MarginProperty<TLength>;\\n  \\n  mask?: MaskProperty<TLength>;\\n  \\n  maskBorder?: MaskBorderProperty;\\n  \\n  motion?: OffsetProperty<TLength>;\\n  \\n  offset?: OffsetProperty<TLength>;\\n  \\n  outline?: OutlineProperty<TLength>;\\n  \\n  overflow?: OverflowProperty;\\n  \\n  padding?: PaddingProperty<TLength>;\\n  \\n  placeItems?: PlaceItemsProperty;\\n  \\n  placeSelf?: PlaceSelfProperty;\\n  \\n  textDecoration?: TextDecorationProperty<TLength>;\\n  \\n  textEmphasis?: TextEmphasisProperty;\\n  \\n  transition?: TransitionProperty;\\n}\\n\\nexport interface StandardProperties<TLength = string | 0> extends StandardLonghandProperties<TLength>, StandardShorthandProperties<TLength> {}\\n\\nexport interface VendorLonghandProperties<TLength = string | 0> {\\n  \\n  MozAnimationDelay?: GlobalsString;\\n  \\n  MozAnimationDirection?: AnimationDirectionProperty;\\n  \\n  MozAnimationDuration?: GlobalsString;\\n  \\n  MozAnimationFillMode?: AnimationFillModeProperty;\\n  \\n  MozAnimationIterationCount?: AnimationIterationCountProperty;\\n  \\n  MozAnimationName?: AnimationNameProperty;\\n  \\n  MozAnimationPlayState?: AnimationPlayStateProperty;\\n  \\n  MozAnimationTimingFunction?: AnimationTimingFunctionProperty;\\n  \\n  MozAppearance?: MozAppearanceProperty;\\n  \\n  MozBackfaceVisibility?: BackfaceVisibilityProperty;\\n  \\n  MozBorderEndColor?: BorderInlineEndColorProperty;\\n  \\n  MozBorderEndStyle?: BorderInlineEndStyleProperty;\\n  \\n  MozBorderEndWidth?: BorderInlineEndWidthProperty<TLength>;\\n  \\n  MozBorderStartColor?: BorderInlineStartColorProperty;\\n  \\n  MozBorderStartStyle?: BorderInlineStartStyleProperty;\\n  \\n  MozBoxSizing?: BoxSizingProperty;\\n  \\n  MozColumnCount?: ColumnCountProperty;\\n  \\n  MozColumnFill?: ColumnFillProperty;\\n  \\n  MozColumnGap?: ColumnGapProperty<TLength>;\\n  \\n  MozColumnRuleColor?: ColumnRuleColorProperty;\\n  \\n  MozColumnRuleStyle?: ColumnRuleStyleProperty;\\n  \\n  MozColumnRuleWidth?: ColumnRuleWidthProperty<TLength>;\\n  \\n  MozColumnWidth?: ColumnWidthProperty<TLength>;\\n  \\n  MozContextProperties?: MozContextPropertiesProperty;\\n  \\n  MozFloatEdge?: MozFloatEdgeProperty;\\n  \\n  MozFontFeatureSettings?: FontFeatureSettingsProperty;\\n  \\n  MozFontLanguageOverride?: FontLanguageOverrideProperty;\\n  \\n  MozForceBrokenImageIcon?: GlobalsNumber;\\n  \\n  MozHyphens?: HyphensProperty;\\n  \\n  MozImageRegion?: MozImageRegionProperty;\\n  \\n  MozMarginEnd?: MarginInlineEndProperty<TLength>;\\n  \\n  MozMarginStart?: MarginInlineStartProperty<TLength>;\\n  \\n  MozOrient?: MozOrientProperty;\\n  \\n  MozOutlineRadiusBottomleft?: MozOutlineRadiusBottomleftProperty<TLength>;\\n  \\n  MozOutlineRadiusBottomright?: MozOutlineRadiusBottomrightProperty<TLength>;\\n  \\n  MozOutlineRadiusTopleft?: MozOutlineRadiusTopleftProperty<TLength>;\\n  \\n  MozOutlineRadiusTopright?: MozOutlineRadiusToprightProperty<TLength>;\\n  \\n  MozPaddingEnd?: PaddingInlineEndProperty<TLength>;\\n  \\n  MozPaddingStart?: PaddingInlineStartProperty<TLength>;\\n  \\n  MozPerspective?: PerspectiveProperty<TLength>;\\n  \\n  MozPerspectiveOrigin?: PerspectiveOriginProperty<TLength>;\\n  \\n  MozStackSizing?: MozStackSizingProperty;\\n  \\n  MozTabSize?: TabSizeProperty<TLength>;\\n  \\n  MozTextSizeAdjust?: TextSizeAdjustProperty;\\n  \\n  MozTransformOrigin?: TransformOriginProperty<TLength>;\\n  \\n  MozTransformStyle?: TransformStyleProperty;\\n  \\n  MozTransitionDelay?: GlobalsString;\\n  \\n  MozTransitionDuration?: GlobalsString;\\n  \\n  MozTransitionProperty?: TransitionPropertyProperty;\\n  \\n  MozTransitionTimingFunction?: TransitionTimingFunctionProperty;\\n  \\n  MozUserFocus?: MozUserFocusProperty;\\n  \\n  MozUserModify?: MozUserModifyProperty;\\n  \\n  MozUserSelect?: UserSelectProperty;\\n  \\n  MozWindowDragging?: MozWindowDraggingProperty;\\n  \\n  msAccelerator?: MsAcceleratorProperty;\\n  \\n  msAlignSelf?: AlignSelfProperty;\\n  \\n  msBlockProgression?: MsBlockProgressionProperty;\\n  \\n  msContentZoomChaining?: MsContentZoomChainingProperty;\\n  \\n  msContentZoomLimitMax?: GlobalsString;\\n  \\n  msContentZoomLimitMin?: GlobalsString;\\n  \\n  msContentZoomSnapPoints?: GlobalsString;\\n  \\n  msContentZoomSnapType?: MsContentZoomSnapTypeProperty;\\n  \\n  msContentZooming?: MsContentZoomingProperty;\\n  \\n  msFilter?: GlobalsString;\\n  \\n  msFlexDirection?: FlexDirectionProperty;\\n  \\n  msFlexPositive?: GlobalsNumber;\\n  \\n  msFlowFrom?: MsFlowFromProperty;\\n  \\n  msFlowInto?: MsFlowIntoProperty;\\n  \\n  msGridColumns?: GridAutoColumnsProperty<TLength>;\\n  \\n  msGridRows?: GridAutoRowsProperty<TLength>;\\n  \\n  msHighContrastAdjust?: MsHighContrastAdjustProperty;\\n  \\n  msHyphenateLimitChars?: MsHyphenateLimitCharsProperty;\\n  \\n  msHyphenateLimitLines?: MsHyphenateLimitLinesProperty;\\n  \\n  msHyphenateLimitZone?: MsHyphenateLimitZoneProperty<TLength>;\\n  \\n  msHyphens?: HyphensProperty;\\n  \\n  msImeAlign?: MsImeAlignProperty;\\n  \\n  msLineBreak?: LineBreakProperty;\\n  \\n  msOrder?: GlobalsNumber;\\n  \\n  msOverflowStyle?: MsOverflowStyleProperty;\\n  \\n  msOverflowX?: OverflowXProperty;\\n  \\n  msOverflowY?: OverflowYProperty;\\n  \\n  msScrollChaining?: MsScrollChainingProperty;\\n  \\n  msScrollLimitXMax?: MsScrollLimitXMaxProperty<TLength>;\\n  \\n  msScrollLimitXMin?: MsScrollLimitXMinProperty<TLength>;\\n  \\n  msScrollLimitYMax?: MsScrollLimitYMaxProperty<TLength>;\\n  \\n  msScrollLimitYMin?: MsScrollLimitYMinProperty<TLength>;\\n  \\n  msScrollRails?: MsScrollRailsProperty;\\n  \\n  msScrollSnapPointsX?: GlobalsString;\\n  \\n  msScrollSnapPointsY?: GlobalsString;\\n  \\n  msScrollSnapType?: MsScrollSnapTypeProperty;\\n  \\n  msScrollTranslation?: MsScrollTranslationProperty;\\n  \\n  msScrollbar3dlightColor?: MsScrollbar3dlightColorProperty;\\n  \\n  msScrollbarArrowColor?: MsScrollbarArrowColorProperty;\\n  \\n  msScrollbarBaseColor?: MsScrollbarBaseColorProperty;\\n  \\n  msScrollbarDarkshadowColor?: MsScrollbarDarkshadowColorProperty;\\n  \\n  msScrollbarFaceColor?: MsScrollbarFaceColorProperty;\\n  \\n  msScrollbarHighlightColor?: MsScrollbarHighlightColorProperty;\\n  \\n  msScrollbarShadowColor?: MsScrollbarShadowColorProperty;\\n  \\n  msTextAutospace?: MsTextAutospaceProperty;\\n  \\n  msTextCombineHorizontal?: TextCombineUprightProperty;\\n  \\n  msTextOverflow?: TextOverflowProperty;\\n  \\n  msTouchAction?: TouchActionProperty;\\n  \\n  msTouchSelect?: MsTouchSelectProperty;\\n  \\n  msTransform?: TransformProperty;\\n  \\n  msTransformOrigin?: TransformOriginProperty<TLength>;\\n  \\n  msTransitionDelay?: GlobalsString;\\n  \\n  msTransitionDuration?: GlobalsString;\\n  \\n  msTransitionProperty?: TransitionPropertyProperty;\\n  \\n  msTransitionTimingFunction?: TransitionTimingFunctionProperty;\\n  \\n  msUserSelect?: MsUserSelectProperty;\\n  \\n  msWordBreak?: WordBreakProperty;\\n  \\n  msWrapFlow?: MsWrapFlowProperty;\\n  \\n  msWrapMargin?: MsWrapMarginProperty<TLength>;\\n  \\n  msWrapThrough?: MsWrapThroughProperty;\\n  \\n  msWritingMode?: WritingModeProperty;\\n  \\n  OObjectFit?: ObjectFitProperty;\\n  \\n  OObjectPosition?: ObjectPositionProperty<TLength>;\\n  \\n  OTabSize?: TabSizeProperty<TLength>;\\n  \\n  OTextOverflow?: TextOverflowProperty;\\n  \\n  OTransformOrigin?: TransformOriginProperty<TLength>;\\n  \\n  WebkitAlignContent?: AlignContentProperty;\\n  \\n  WebkitAlignItems?: AlignItemsProperty;\\n  \\n  WebkitAlignSelf?: AlignSelfProperty;\\n  \\n  WebkitAnimationDelay?: GlobalsString;\\n  \\n  WebkitAnimationDirection?: AnimationDirectionProperty;\\n  \\n  WebkitAnimationDuration?: GlobalsString;\\n  \\n  WebkitAnimationFillMode?: AnimationFillModeProperty;\\n  \\n  WebkitAnimationIterationCount?: AnimationIterationCountProperty;\\n  \\n  WebkitAnimationName?: AnimationNameProperty;\\n  \\n  WebkitAnimationPlayState?: AnimationPlayStateProperty;\\n  \\n  WebkitAnimationTimingFunction?: AnimationTimingFunctionProperty;\\n  \\n  WebkitAppearance?: WebkitAppearanceProperty;\\n  \\n  WebkitBackdropFilter?: BackdropFilterProperty;\\n  \\n  WebkitBackfaceVisibility?: BackfaceVisibilityProperty;\\n  \\n  WebkitBackgroundClip?: BackgroundClipProperty;\\n  \\n  WebkitBackgroundOrigin?: BackgroundOriginProperty;\\n  \\n  WebkitBackgroundSize?: BackgroundSizeProperty<TLength>;\\n  \\n  WebkitBorderBeforeColor?: WebkitBorderBeforeColorProperty;\\n  \\n  WebkitBorderBeforeStyle?: WebkitBorderBeforeStyleProperty;\\n  \\n  WebkitBorderBeforeWidth?: WebkitBorderBeforeWidthProperty<TLength>;\\n  \\n  WebkitBorderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength>;\\n  \\n  WebkitBorderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength>;\\n  \\n  WebkitBorderImageSlice?: BorderImageSliceProperty;\\n  \\n  WebkitBorderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength>;\\n  \\n  WebkitBorderTopRightRadius?: BorderTopRightRadiusProperty<TLength>;\\n  \\n  WebkitBoxDecorationBreak?: BoxDecorationBreakProperty;\\n  \\n  WebkitBoxReflect?: WebkitBoxReflectProperty<TLength>;\\n  \\n  WebkitBoxShadow?: BoxShadowProperty;\\n  \\n  WebkitBoxSizing?: BoxSizingProperty;\\n  \\n  WebkitClipPath?: ClipPathProperty;\\n  \\n  WebkitColorAdjust?: ColorAdjustProperty;\\n  \\n  WebkitColumnCount?: ColumnCountProperty;\\n  \\n  WebkitColumnFill?: ColumnFillProperty;\\n  \\n  WebkitColumnGap?: ColumnGapProperty<TLength>;\\n  \\n  WebkitColumnRuleColor?: ColumnRuleColorProperty;\\n  \\n  WebkitColumnRuleStyle?: ColumnRuleStyleProperty;\\n  \\n  WebkitColumnRuleWidth?: ColumnRuleWidthProperty<TLength>;\\n  \\n  WebkitColumnSpan?: ColumnSpanProperty;\\n  \\n  WebkitColumnWidth?: ColumnWidthProperty<TLength>;\\n  \\n  WebkitFilter?: FilterProperty;\\n  \\n  WebkitFlexBasis?: FlexBasisProperty<TLength>;\\n  \\n  WebkitFlexDirection?: FlexDirectionProperty;\\n  \\n  WebkitFlexGrow?: GlobalsNumber;\\n  \\n  WebkitFlexShrink?: GlobalsNumber;\\n  \\n  WebkitFlexWrap?: FlexWrapProperty;\\n  \\n  WebkitFontFeatureSettings?: FontFeatureSettingsProperty;\\n  \\n  WebkitFontKerning?: FontKerningProperty;\\n  \\n  WebkitFontVariantLigatures?: FontVariantLigaturesProperty;\\n  \\n  WebkitHyphens?: HyphensProperty;\\n  \\n  WebkitJustifyContent?: JustifyContentProperty;\\n  \\n  WebkitLineBreak?: LineBreakProperty;\\n  \\n  WebkitLineClamp?: WebkitLineClampProperty;\\n  \\n  WebkitMarginEnd?: MarginInlineEndProperty<TLength>;\\n  \\n  WebkitMarginStart?: MarginInlineStartProperty<TLength>;\\n  \\n  WebkitMaskAttachment?: WebkitMaskAttachmentProperty;\\n  \\n  WebkitMaskClip?: WebkitMaskClipProperty;\\n  \\n  WebkitMaskComposite?: WebkitMaskCompositeProperty;\\n  \\n  WebkitMaskImage?: WebkitMaskImageProperty;\\n  \\n  WebkitMaskOrigin?: WebkitMaskOriginProperty;\\n  \\n  WebkitMaskPosition?: WebkitMaskPositionProperty<TLength>;\\n  \\n  WebkitMaskPositionX?: WebkitMaskPositionXProperty<TLength>;\\n  \\n  WebkitMaskPositionY?: WebkitMaskPositionYProperty<TLength>;\\n  \\n  WebkitMaskRepeat?: WebkitMaskRepeatProperty;\\n  \\n  WebkitMaskRepeatX?: WebkitMaskRepeatXProperty;\\n  \\n  WebkitMaskRepeatY?: WebkitMaskRepeatYProperty;\\n  \\n  WebkitMaskSize?: WebkitMaskSizeProperty<TLength>;\\n  \\n  WebkitMaxInlineSize?: MaxInlineSizeProperty<TLength>;\\n  \\n  WebkitOrder?: GlobalsNumber;\\n  \\n  WebkitOverflowScrolling?: WebkitOverflowScrollingProperty;\\n  \\n  WebkitPaddingEnd?: PaddingInlineEndProperty<TLength>;\\n  \\n  WebkitPaddingStart?: PaddingInlineStartProperty<TLength>;\\n  \\n  WebkitPerspective?: PerspectiveProperty<TLength>;\\n  \\n  WebkitPerspectiveOrigin?: PerspectiveOriginProperty<TLength>;\\n  \\n  WebkitScrollSnapType?: ScrollSnapTypeProperty;\\n  \\n  WebkitShapeMargin?: ShapeMarginProperty<TLength>;\\n  \\n  WebkitTapHighlightColor?: WebkitTapHighlightColorProperty;\\n  \\n  WebkitTextCombine?: TextCombineUprightProperty;\\n  \\n  WebkitTextDecorationColor?: TextDecorationColorProperty;\\n  \\n  WebkitTextDecorationLine?: TextDecorationLineProperty;\\n  \\n  WebkitTextDecorationSkip?: TextDecorationSkipProperty;\\n  \\n  WebkitTextDecorationStyle?: TextDecorationStyleProperty;\\n  \\n  WebkitTextEmphasisColor?: TextEmphasisColorProperty;\\n  \\n  WebkitTextEmphasisPosition?: GlobalsString;\\n  \\n  WebkitTextEmphasisStyle?: TextEmphasisStyleProperty;\\n  \\n  WebkitTextFillColor?: WebkitTextFillColorProperty;\\n  \\n  WebkitTextOrientation?: TextOrientationProperty;\\n  \\n  WebkitTextSizeAdjust?: TextSizeAdjustProperty;\\n  \\n  WebkitTextStrokeColor?: WebkitTextStrokeColorProperty;\\n  \\n  WebkitTextStrokeWidth?: WebkitTextStrokeWidthProperty<TLength>;\\n  \\n  WebkitTouchCallout?: WebkitTouchCalloutProperty;\\n  \\n  WebkitTransform?: TransformProperty;\\n  \\n  WebkitTransformOrigin?: TransformOriginProperty<TLength>;\\n  \\n  WebkitTransformStyle?: TransformStyleProperty;\\n  \\n  WebkitTransitionDelay?: GlobalsString;\\n  \\n  WebkitTransitionDuration?: GlobalsString;\\n  \\n  WebkitTransitionProperty?: TransitionPropertyProperty;\\n  \\n  WebkitTransitionTimingFunction?: TransitionTimingFunctionProperty;\\n  \\n  WebkitUserModify?: WebkitUserModifyProperty;\\n  \\n  WebkitUserSelect?: UserSelectProperty;\\n  \\n  WebkitWritingMode?: WritingModeProperty;\\n  \\n  WebkittextUnderlinePosition?: TextUnderlinePositionProperty;\\n}\\n\\nexport interface VendorShorthandProperties<TLength = string | 0> {\\n  \\n  MozAnimation?: AnimationProperty;\\n  \\n  MozBorderImage?: BorderImageProperty;\\n  \\n  MozColumnRule?: ColumnRuleProperty<TLength>;\\n  \\n  MozColumns?: ColumnsProperty<TLength>;\\n  \\n  MozTransition?: TransitionProperty;\\n  \\n  msContentZoomLimit?: GlobalsString;\\n  \\n  msContentZoomSnap?: MsContentZoomSnapProperty;\\n  \\n  msFlex?: FlexProperty<TLength>;\\n  \\n  msScrollLimit?: GlobalsString;\\n  \\n  msScrollSnapX?: GlobalsString;\\n  \\n  msScrollSnapY?: GlobalsString;\\n  \\n  msTransition?: TransitionProperty;\\n  \\n  WebkitAnimation?: AnimationProperty;\\n  \\n  WebkitBorderBefore?: WebkitBorderBeforeProperty<TLength>;\\n  \\n  WebkitBorderImage?: BorderImageProperty;\\n  \\n  WebkitBorderRadius?: BorderRadiusProperty<TLength>;\\n  \\n  WebkitColumnRule?: ColumnRuleProperty<TLength>;\\n  \\n  WebkitColumns?: ColumnsProperty<TLength>;\\n  \\n  WebkitFlex?: FlexProperty<TLength>;\\n  \\n  WebkitFlexFlow?: FlexFlowProperty;\\n  \\n  WebkitMask?: WebkitMaskProperty<TLength>;\\n  \\n  WebkitTextEmphasis?: TextEmphasisProperty;\\n  \\n  WebkitTextStroke?: WebkitTextStrokeProperty<TLength>;\\n  \\n  WebkitTransition?: TransitionProperty;\\n}\\n\\nexport interface VendorProperties<TLength = string | 0> extends VendorLonghandProperties<TLength>, VendorShorthandProperties<TLength> {}\\n\\nexport interface ObsoleteProperties<TLength = string | 0> {\\n  \\n  boxAlign?: BoxAlignProperty;\\n  \\n  boxDirection?: BoxDirectionProperty;\\n  \\n  boxFlex?: GlobalsNumber;\\n  \\n  boxFlexGroup?: GlobalsNumber;\\n  \\n  boxLines?: BoxLinesProperty;\\n  \\n  boxOrdinalGroup?: GlobalsNumber;\\n  \\n  boxOrient?: BoxOrientProperty;\\n  \\n  boxPack?: BoxPackProperty;\\n  \\n  clip?: ClipProperty;\\n  \\n  fontVariantAlternates?: FontVariantAlternatesProperty;\\n  \\n  gridColumnGap?: GridColumnGapProperty<TLength>;\\n  \\n  gridGap?: GridGapProperty<TLength>;\\n  \\n  gridRowGap?: GridRowGapProperty<TLength>;\\n  \\n  imeMode?: ImeModeProperty;\\n  \\n  offsetBlock?: InsetBlockProperty<TLength>;\\n  \\n  offsetBlockEnd?: InsetBlockEndProperty<TLength>;\\n  \\n  offsetBlockStart?: InsetBlockStartProperty<TLength>;\\n  \\n  offsetInline?: InsetInlineProperty<TLength>;\\n  \\n  offsetInlineEnd?: InsetInlineEndProperty<TLength>;\\n  \\n  offsetInlineStart?: InsetInlineStartProperty<TLength>;\\n  \\n  scrollSnapCoordinate?: ScrollSnapCoordinateProperty<TLength>;\\n  \\n  scrollSnapDestination?: ScrollSnapDestinationProperty<TLength>;\\n  \\n  scrollSnapPointsX?: ScrollSnapPointsXProperty;\\n  \\n  scrollSnapPointsY?: ScrollSnapPointsYProperty;\\n  \\n  scrollSnapTypeX?: ScrollSnapTypeXProperty;\\n  \\n  scrollSnapTypeY?: ScrollSnapTypeYProperty;\\n  \\n  scrollbarTrackColor?: MsScrollbarTrackColorProperty;\\n  \\n  textCombineHorizontal?: TextCombineUprightProperty;\\n  \\n  KhtmlBoxAlign?: BoxAlignProperty;\\n  \\n  KhtmlBoxDirection?: BoxDirectionProperty;\\n  \\n  KhtmlBoxFlex?: GlobalsNumber;\\n  \\n  KhtmlBoxFlexGroup?: GlobalsNumber;\\n  \\n  KhtmlBoxLines?: BoxLinesProperty;\\n  \\n  KhtmlBoxOrdinalGroup?: GlobalsNumber;\\n  \\n  KhtmlBoxOrient?: BoxOrientProperty;\\n  \\n  KhtmlBoxPack?: BoxPackProperty;\\n  \\n  KhtmlLineBreak?: LineBreakProperty;\\n  \\n  KhtmlOpacity?: OpacityProperty;\\n  \\n  KhtmlUserSelect?: UserSelectProperty;\\n  \\n  MozBackgroundClip?: BackgroundClipProperty;\\n  \\n  MozBackgroundInlinePolicy?: BoxDecorationBreakProperty;\\n  \\n  MozBackgroundOrigin?: BackgroundOriginProperty;\\n  \\n  MozBackgroundSize?: BackgroundSizeProperty<TLength>;\\n  \\n  MozBinding?: MozBindingProperty;\\n  \\n  MozBorderBottomColors?: MozBorderBottomColorsProperty;\\n  \\n  MozBorderLeftColors?: MozBorderLeftColorsProperty;\\n  \\n  MozBorderRadius?: BorderRadiusProperty<TLength>;\\n  \\n  MozBorderRadiusBottomleft?: BorderBottomLeftRadiusProperty<TLength>;\\n  \\n  MozBorderRadiusBottomright?: BorderBottomRightRadiusProperty<TLength>;\\n  \\n  MozBorderRadiusTopleft?: BorderTopLeftRadiusProperty<TLength>;\\n  \\n  MozBorderRadiusTopright?: BorderTopRightRadiusProperty<TLength>;\\n  \\n  MozBorderRightColors?: MozBorderRightColorsProperty;\\n  \\n  MozBorderTopColors?: MozBorderTopColorsProperty;\\n  \\n  MozBoxAlign?: BoxAlignProperty;\\n  \\n  MozBoxDirection?: BoxDirectionProperty;\\n  \\n  MozBoxFlex?: GlobalsNumber;\\n  \\n  MozBoxOrdinalGroup?: GlobalsNumber;\\n  \\n  MozBoxOrient?: BoxOrientProperty;\\n  \\n  MozBoxPack?: BoxPackProperty;\\n  \\n  MozBoxShadow?: BoxShadowProperty;\\n  \\n  MozOpacity?: OpacityProperty;\\n  \\n  MozOutline?: OutlineProperty<TLength>;\\n  \\n  MozOutlineColor?: OutlineColorProperty;\\n  \\n  MozOutlineRadius?: MozOutlineRadiusProperty<TLength>;\\n  \\n  MozOutlineStyle?: OutlineStyleProperty;\\n  \\n  MozOutlineWidth?: OutlineWidthProperty<TLength>;\\n  \\n  MozTextAlignLast?: TextAlignLastProperty;\\n  \\n  MozTextBlink?: MozTextBlinkProperty;\\n  \\n  MozTextDecorationColor?: TextDecorationColorProperty;\\n  \\n  MozTextDecorationLine?: TextDecorationLineProperty;\\n  \\n  MozTextDecorationStyle?: TextDecorationStyleProperty;\\n  \\n  MozUserInput?: MozUserInputProperty;\\n  \\n  MozWindowShadow?: MozWindowShadowProperty;\\n  \\n  msImeMode?: ImeModeProperty;\\n  \\n  msScrollbarTrackColor?: MsScrollbarTrackColorProperty;\\n  \\n  OAnimation?: AnimationProperty;\\n  \\n  OAnimationDelay?: GlobalsString;\\n  \\n  OAnimationDirection?: AnimationDirectionProperty;\\n  \\n  OAnimationDuration?: GlobalsString;\\n  \\n  OAnimationFillMode?: AnimationFillModeProperty;\\n  \\n  OAnimationIterationCount?: AnimationIterationCountProperty;\\n  \\n  OAnimationName?: AnimationNameProperty;\\n  \\n  OAnimationPlayState?: AnimationPlayStateProperty;\\n  \\n  OAnimationTimingFunction?: AnimationTimingFunctionProperty;\\n  \\n  OBackgroundSize?: BackgroundSizeProperty<TLength>;\\n  \\n  OBorderImage?: BorderImageProperty;\\n  \\n  OTransform?: TransformProperty;\\n  \\n  OTransition?: TransitionProperty;\\n  \\n  OTransitionDelay?: GlobalsString;\\n  \\n  OTransitionDuration?: GlobalsString;\\n  \\n  OTransitionProperty?: TransitionPropertyProperty;\\n  \\n  OTransitionTimingFunction?: TransitionTimingFunctionProperty;\\n  \\n  WebkitBoxAlign?: BoxAlignProperty;\\n  \\n  WebkitBoxDirection?: BoxDirectionProperty;\\n  \\n  WebkitBoxFlex?: GlobalsNumber;\\n  \\n  WebkitBoxFlexGroup?: GlobalsNumber;\\n  \\n  WebkitBoxLines?: BoxLinesProperty;\\n  \\n  WebkitBoxOrdinalGroup?: GlobalsNumber;\\n  \\n  WebkitBoxOrient?: BoxOrientProperty;\\n  \\n  WebkitBoxPack?: BoxPackProperty;\\n  \\n  WebkitScrollSnapPointsX?: ScrollSnapPointsXProperty;\\n  \\n  WebkitScrollSnapPointsY?: ScrollSnapPointsYProperty;\\n}\\n\\nexport interface SvgProperties<TLength = string | 0> {\\n  alignmentBaseline?: AlignmentBaselineProperty;\\n  baselineShift?: BaselineShiftProperty<TLength>;\\n  clip?: ClipProperty;\\n  clipPath?: ClipPathProperty;\\n  clipRule?: ClipRuleProperty;\\n  color?: ColorProperty;\\n  colorInterpolation?: ColorInterpolationProperty;\\n  colorRendering?: ColorRenderingProperty;\\n  cursor?: CursorProperty;\\n  direction?: DirectionProperty;\\n  display?: DisplayProperty;\\n  dominantBaseline?: DominantBaselineProperty;\\n  fill?: FillProperty;\\n  fillOpacity?: GlobalsNumber;\\n  fillRule?: FillRuleProperty;\\n  filter?: FilterProperty;\\n  floodColor?: FloodColorProperty;\\n  floodOpacity?: GlobalsNumber;\\n  font?: FontProperty;\\n  fontFamily?: FontFamilyProperty;\\n  fontSize?: FontSizeProperty<TLength>;\\n  fontSizeAdjust?: FontSizeAdjustProperty;\\n  fontStretch?: FontStretchProperty;\\n  fontStyle?: FontStyleProperty;\\n  fontVariant?: FontVariantProperty;\\n  fontWeight?: FontWeightProperty;\\n  glyphOrientationVertical?: GlyphOrientationVerticalProperty;\\n  imageRendering?: ImageRenderingProperty;\\n  letterSpacing?: LetterSpacingProperty<TLength>;\\n  lightingColor?: LightingColorProperty;\\n  lineHeight?: LineHeightProperty<TLength>;\\n  marker?: MarkerProperty;\\n  markerEnd?: MarkerEndProperty;\\n  markerMid?: MarkerMidProperty;\\n  markerStart?: MarkerStartProperty;\\n  mask?: MaskProperty<TLength>;\\n  opacity?: OpacityProperty;\\n  overflow?: OverflowProperty;\\n  paintOrder?: PaintOrderProperty;\\n  pointerEvents?: PointerEventsProperty;\\n  shapeRendering?: ShapeRenderingProperty;\\n  stopColor?: StopColorProperty;\\n  stopOpacity?: GlobalsNumber;\\n  stroke?: StrokeProperty;\\n  strokeDasharray?: StrokeDasharrayProperty<TLength>;\\n  strokeDashoffset?: StrokeDashoffsetProperty<TLength>;\\n  strokeLinecap?: StrokeLinecapProperty;\\n  strokeLinejoin?: StrokeLinejoinProperty;\\n  strokeMiterlimit?: GlobalsNumber;\\n  strokeOpacity?: GlobalsNumber;\\n  strokeWidth?: StrokeWidthProperty<TLength>;\\n  textAnchor?: TextAnchorProperty;\\n  textDecoration?: TextDecorationProperty<TLength>;\\n  textRendering?: TextRenderingProperty;\\n  unicodeBidi?: UnicodeBidiProperty;\\n  vectorEffect?: VectorEffectProperty;\\n  visibility?: VisibilityProperty;\\n  whiteSpace?: WhiteSpaceProperty;\\n  wordSpacing?: WordSpacingProperty<TLength>;\\n  writingMode?: WritingModeProperty;\\n}\\n\\nexport interface Properties<TLength = string | 0> extends StandardProperties<TLength>, VendorProperties<TLength>, ObsoleteProperties<TLength>, SvgProperties<TLength> {}\\n\\nexport interface StandardLonghandPropertiesHyphen<TLength = string | 0> {\\n  \\n  \\"align-content\\"?: AlignContentProperty;\\n  \\n  \\"align-items\\"?: AlignItemsProperty;\\n  \\n  \\"align-self\\"?: AlignSelfProperty;\\n  \\n  \\"animation-delay\\"?: GlobalsString;\\n  \\n  \\"animation-direction\\"?: AnimationDirectionProperty;\\n  \\n  \\"animation-duration\\"?: GlobalsString;\\n  \\n  \\"animation-fill-mode\\"?: AnimationFillModeProperty;\\n  \\n  \\"animation-iteration-count\\"?: AnimationIterationCountProperty;\\n  \\n  \\"animation-name\\"?: AnimationNameProperty;\\n  \\n  \\"animation-play-state\\"?: AnimationPlayStateProperty;\\n  \\n  \\"animation-timing-function\\"?: AnimationTimingFunctionProperty;\\n  \\n  appearance?: AppearanceProperty;\\n  \\n  \\"aspect-ratio\\"?: AspectRatioProperty;\\n  \\n  \\"backdrop-filter\\"?: BackdropFilterProperty;\\n  \\n  \\"backface-visibility\\"?: BackfaceVisibilityProperty;\\n  \\n  \\"background-attachment\\"?: BackgroundAttachmentProperty;\\n  \\n  \\"background-blend-mode\\"?: BackgroundBlendModeProperty;\\n  \\n  \\"background-clip\\"?: BackgroundClipProperty;\\n  \\n  \\"background-color\\"?: BackgroundColorProperty;\\n  \\n  \\"background-image\\"?: BackgroundImageProperty;\\n  \\n  \\"background-origin\\"?: BackgroundOriginProperty;\\n  \\n  \\"background-position\\"?: BackgroundPositionProperty<TLength>;\\n  \\n  \\"background-position-x\\"?: BackgroundPositionXProperty<TLength>;\\n  \\n  \\"background-position-y\\"?: BackgroundPositionYProperty<TLength>;\\n  \\n  \\"background-repeat\\"?: BackgroundRepeatProperty;\\n  \\n  \\"background-size\\"?: BackgroundSizeProperty<TLength>;\\n  \\n  \\"block-overflow\\"?: BlockOverflowProperty;\\n  \\n  \\"block-size\\"?: BlockSizeProperty<TLength>;\\n  \\n  \\"border-block-color\\"?: BorderBlockColorProperty;\\n  \\n  \\"border-block-end-color\\"?: BorderBlockEndColorProperty;\\n  \\n  \\"border-block-end-style\\"?: BorderBlockEndStyleProperty;\\n  \\n  \\"border-block-end-width\\"?: BorderBlockEndWidthProperty<TLength>;\\n  \\n  \\"border-block-start-color\\"?: BorderBlockStartColorProperty;\\n  \\n  \\"border-block-start-style\\"?: BorderBlockStartStyleProperty;\\n  \\n  \\"border-block-start-width\\"?: BorderBlockStartWidthProperty<TLength>;\\n  \\n  \\"border-block-style\\"?: BorderBlockStyleProperty;\\n  \\n  \\"border-block-width\\"?: BorderBlockWidthProperty<TLength>;\\n  \\n  \\"border-bottom-color\\"?: BorderBottomColorProperty;\\n  \\n  \\"border-bottom-left-radius\\"?: BorderBottomLeftRadiusProperty<TLength>;\\n  \\n  \\"border-bottom-right-radius\\"?: BorderBottomRightRadiusProperty<TLength>;\\n  \\n  \\"border-bottom-style\\"?: BorderBottomStyleProperty;\\n  \\n  \\"border-bottom-width\\"?: BorderBottomWidthProperty<TLength>;\\n  \\n  \\"border-collapse\\"?: BorderCollapseProperty;\\n  \\n  \\"border-end-end-radius\\"?: BorderEndEndRadiusProperty<TLength>;\\n  \\n  \\"border-end-start-radius\\"?: BorderEndStartRadiusProperty<TLength>;\\n  \\n  \\"border-image-outset\\"?: BorderImageOutsetProperty<TLength>;\\n  \\n  \\"border-image-repeat\\"?: BorderImageRepeatProperty;\\n  \\n  \\"border-image-slice\\"?: BorderImageSliceProperty;\\n  \\n  \\"border-image-source\\"?: BorderImageSourceProperty;\\n  \\n  \\"border-image-width\\"?: BorderImageWidthProperty<TLength>;\\n  \\n  \\"border-inline-color\\"?: BorderInlineColorProperty;\\n  \\n  \\"border-inline-end-color\\"?: BorderInlineEndColorProperty;\\n  \\n  \\"border-inline-end-style\\"?: BorderInlineEndStyleProperty;\\n  \\n  \\"border-inline-end-width\\"?: BorderInlineEndWidthProperty<TLength>;\\n  \\n  \\"border-inline-start-color\\"?: BorderInlineStartColorProperty;\\n  \\n  \\"border-inline-start-style\\"?: BorderInlineStartStyleProperty;\\n  \\n  \\"border-inline-start-width\\"?: BorderInlineStartWidthProperty<TLength>;\\n  \\n  \\"border-inline-style\\"?: BorderInlineStyleProperty;\\n  \\n  \\"border-inline-width\\"?: BorderInlineWidthProperty<TLength>;\\n  \\n  \\"border-left-color\\"?: BorderLeftColorProperty;\\n  \\n  \\"border-left-style\\"?: BorderLeftStyleProperty;\\n  \\n  \\"border-left-width\\"?: BorderLeftWidthProperty<TLength>;\\n  \\n  \\"border-right-color\\"?: BorderRightColorProperty;\\n  \\n  \\"border-right-style\\"?: BorderRightStyleProperty;\\n  \\n  \\"border-right-width\\"?: BorderRightWidthProperty<TLength>;\\n  \\n  \\"border-spacing\\"?: BorderSpacingProperty<TLength>;\\n  \\n  \\"border-start-end-radius\\"?: BorderStartEndRadiusProperty<TLength>;\\n  \\n  \\"border-start-start-radius\\"?: BorderStartStartRadiusProperty<TLength>;\\n  \\n  \\"border-top-color\\"?: BorderTopColorProperty;\\n  \\n  \\"border-top-left-radius\\"?: BorderTopLeftRadiusProperty<TLength>;\\n  \\n  \\"border-top-right-radius\\"?: BorderTopRightRadiusProperty<TLength>;\\n  \\n  \\"border-top-style\\"?: BorderTopStyleProperty;\\n  \\n  \\"border-top-width\\"?: BorderTopWidthProperty<TLength>;\\n  \\n  bottom?: BottomProperty<TLength>;\\n  \\n  \\"box-decoration-break\\"?: BoxDecorationBreakProperty;\\n  \\n  \\"box-shadow\\"?: BoxShadowProperty;\\n  \\n  \\"box-sizing\\"?: BoxSizingProperty;\\n  \\n  \\"break-after\\"?: BreakAfterProperty;\\n  \\n  \\"break-before\\"?: BreakBeforeProperty;\\n  \\n  \\"break-inside\\"?: BreakInsideProperty;\\n  \\n  \\"caption-side\\"?: CaptionSideProperty;\\n  \\n  \\"caret-color\\"?: CaretColorProperty;\\n  \\n  clear?: ClearProperty;\\n  \\n  \\"clip-path\\"?: ClipPathProperty;\\n  \\n  color?: ColorProperty;\\n  \\n  \\"color-adjust\\"?: ColorAdjustProperty;\\n  \\n  \\"column-count\\"?: ColumnCountProperty;\\n  \\n  \\"column-fill\\"?: ColumnFillProperty;\\n  \\n  \\"column-gap\\"?: ColumnGapProperty<TLength>;\\n  \\n  \\"column-rule-color\\"?: ColumnRuleColorProperty;\\n  \\n  \\"column-rule-style\\"?: ColumnRuleStyleProperty;\\n  \\n  \\"column-rule-width\\"?: ColumnRuleWidthProperty<TLength>;\\n  \\n  \\"column-span\\"?: ColumnSpanProperty;\\n  \\n  \\"column-width\\"?: ColumnWidthProperty<TLength>;\\n  \\n  contain?: ContainProperty;\\n  \\n  content?: ContentProperty;\\n  \\n  \\"counter-increment\\"?: CounterIncrementProperty;\\n  \\n  \\"counter-reset\\"?: CounterResetProperty;\\n  \\n  \\"counter-set\\"?: CounterSetProperty;\\n  \\n  cursor?: CursorProperty;\\n  \\n  direction?: DirectionProperty;\\n  \\n  display?: DisplayProperty;\\n  \\n  \\"empty-cells\\"?: EmptyCellsProperty;\\n  \\n  filter?: FilterProperty;\\n  \\n  \\"flex-basis\\"?: FlexBasisProperty<TLength>;\\n  \\n  \\"flex-direction\\"?: FlexDirectionProperty;\\n  \\n  \\"flex-grow\\"?: GlobalsNumber;\\n  \\n  \\"flex-shrink\\"?: GlobalsNumber;\\n  \\n  \\"flex-wrap\\"?: FlexWrapProperty;\\n  \\n  float?: FloatProperty;\\n  \\n  \\"font-family\\"?: FontFamilyProperty;\\n  \\n  \\"font-feature-settings\\"?: FontFeatureSettingsProperty;\\n  \\n  \\"font-kerning\\"?: FontKerningProperty;\\n  \\n  \\"font-language-override\\"?: FontLanguageOverrideProperty;\\n  \\n  \\"font-optical-sizing\\"?: FontOpticalSizingProperty;\\n  \\n  \\"font-size\\"?: FontSizeProperty<TLength>;\\n  \\n  \\"font-size-adjust\\"?: FontSizeAdjustProperty;\\n  \\n  \\"font-stretch\\"?: FontStretchProperty;\\n  \\n  \\"font-style\\"?: FontStyleProperty;\\n  \\n  \\"font-synthesis\\"?: FontSynthesisProperty;\\n  \\n  \\"font-variant\\"?: FontVariantProperty;\\n  \\n  \\"font-variant-caps\\"?: FontVariantCapsProperty;\\n  \\n  \\"font-variant-east-asian\\"?: FontVariantEastAsianProperty;\\n  \\n  \\"font-variant-ligatures\\"?: FontVariantLigaturesProperty;\\n  \\n  \\"font-variant-numeric\\"?: FontVariantNumericProperty;\\n  \\n  \\"font-variant-position\\"?: FontVariantPositionProperty;\\n  \\n  \\"font-variation-settings\\"?: FontVariationSettingsProperty;\\n  \\n  \\"font-weight\\"?: FontWeightProperty;\\n  \\n  \\"grid-auto-columns\\"?: GridAutoColumnsProperty<TLength>;\\n  \\n  \\"grid-auto-flow\\"?: GridAutoFlowProperty;\\n  \\n  \\"grid-auto-rows\\"?: GridAutoRowsProperty<TLength>;\\n  \\n  \\"grid-column-end\\"?: GridColumnEndProperty;\\n  \\n  \\"grid-column-start\\"?: GridColumnStartProperty;\\n  \\n  \\"grid-row-end\\"?: GridRowEndProperty;\\n  \\n  \\"grid-row-start\\"?: GridRowStartProperty;\\n  \\n  \\"grid-template-areas\\"?: GridTemplateAreasProperty;\\n  \\n  \\"grid-template-columns\\"?: GridTemplateColumnsProperty<TLength>;\\n  \\n  \\"grid-template-rows\\"?: GridTemplateRowsProperty<TLength>;\\n  \\n  \\"hanging-punctuation\\"?: HangingPunctuationProperty;\\n  \\n  height?: HeightProperty<TLength>;\\n  \\n  hyphens?: HyphensProperty;\\n  \\n  \\"image-orientation\\"?: ImageOrientationProperty;\\n  \\n  \\"image-rendering\\"?: ImageRenderingProperty;\\n  \\n  \\"image-resolution\\"?: ImageResolutionProperty;\\n  \\n  \\"initial-letter\\"?: InitialLetterProperty;\\n  \\n  \\"inline-size\\"?: InlineSizeProperty<TLength>;\\n  \\n  inset?: InsetProperty<TLength>;\\n  \\n  \\"inset-block\\"?: InsetBlockProperty<TLength>;\\n  \\n  \\"inset-block-end\\"?: InsetBlockEndProperty<TLength>;\\n  \\n  \\"inset-block-start\\"?: InsetBlockStartProperty<TLength>;\\n  \\n  \\"inset-inline\\"?: InsetInlineProperty<TLength>;\\n  \\n  \\"inset-inline-end\\"?: InsetInlineEndProperty<TLength>;\\n  \\n  \\"inset-inline-start\\"?: InsetInlineStartProperty<TLength>;\\n  \\n  isolation?: IsolationProperty;\\n  \\n  \\"justify-content\\"?: JustifyContentProperty;\\n  \\n  \\"justify-items\\"?: JustifyItemsProperty;\\n  \\n  \\"justify-self\\"?: JustifySelfProperty;\\n  \\n  left?: LeftProperty<TLength>;\\n  \\n  \\"letter-spacing\\"?: LetterSpacingProperty<TLength>;\\n  \\n  \\"line-break\\"?: LineBreakProperty;\\n  \\n  \\"line-height\\"?: LineHeightProperty<TLength>;\\n  \\n  \\"line-height-step\\"?: LineHeightStepProperty<TLength>;\\n  \\n  \\"list-style-image\\"?: ListStyleImageProperty;\\n  \\n  \\"list-style-position\\"?: ListStylePositionProperty;\\n  \\n  \\"list-style-type\\"?: ListStyleTypeProperty;\\n  \\n  \\"margin-block\\"?: MarginBlockProperty<TLength>;\\n  \\n  \\"margin-block-end\\"?: MarginBlockEndProperty<TLength>;\\n  \\n  \\"margin-block-start\\"?: MarginBlockStartProperty<TLength>;\\n  \\n  \\"margin-bottom\\"?: MarginBottomProperty<TLength>;\\n  \\n  \\"margin-inline\\"?: MarginInlineProperty<TLength>;\\n  \\n  \\"margin-inline-end\\"?: MarginInlineEndProperty<TLength>;\\n  \\n  \\"margin-inline-start\\"?: MarginInlineStartProperty<TLength>;\\n  \\n  \\"margin-left\\"?: MarginLeftProperty<TLength>;\\n  \\n  \\"margin-right\\"?: MarginRightProperty<TLength>;\\n  \\n  \\"margin-top\\"?: MarginTopProperty<TLength>;\\n  \\n  \\"mask-border-mode\\"?: MaskBorderModeProperty;\\n  \\n  \\"mask-border-outset\\"?: MaskBorderOutsetProperty<TLength>;\\n  \\n  \\"mask-border-repeat\\"?: MaskBorderRepeatProperty;\\n  \\n  \\"mask-border-slice\\"?: MaskBorderSliceProperty;\\n  \\n  \\"mask-border-source\\"?: MaskBorderSourceProperty;\\n  \\n  \\"mask-border-width\\"?: MaskBorderWidthProperty<TLength>;\\n  \\n  \\"mask-clip\\"?: MaskClipProperty;\\n  \\n  \\"mask-composite\\"?: MaskCompositeProperty;\\n  \\n  \\"mask-image\\"?: MaskImageProperty;\\n  \\n  \\"mask-mode\\"?: MaskModeProperty;\\n  \\n  \\"mask-origin\\"?: MaskOriginProperty;\\n  \\n  \\"mask-position\\"?: MaskPositionProperty<TLength>;\\n  \\n  \\"mask-repeat\\"?: MaskRepeatProperty;\\n  \\n  \\"mask-size\\"?: MaskSizeProperty<TLength>;\\n  \\n  \\"mask-type\\"?: MaskTypeProperty;\\n  \\n  \\"max-block-size\\"?: MaxBlockSizeProperty<TLength>;\\n  \\n  \\"max-height\\"?: MaxHeightProperty<TLength>;\\n  \\n  \\"max-inline-size\\"?: MaxInlineSizeProperty<TLength>;\\n  \\n  \\"max-lines\\"?: MaxLinesProperty;\\n  \\n  \\"max-width\\"?: MaxWidthProperty<TLength>;\\n  \\n  \\"min-block-size\\"?: MinBlockSizeProperty<TLength>;\\n  \\n  \\"min-height\\"?: MinHeightProperty<TLength>;\\n  \\n  \\"min-inline-size\\"?: MinInlineSizeProperty<TLength>;\\n  \\n  \\"min-width\\"?: MinWidthProperty<TLength>;\\n  \\n  \\"mix-blend-mode\\"?: MixBlendModeProperty;\\n  \\n  \\"motion-distance\\"?: OffsetDistanceProperty<TLength>;\\n  \\n  \\"motion-path\\"?: OffsetPathProperty;\\n  \\n  \\"motion-rotation\\"?: OffsetRotateProperty;\\n  \\n  \\"object-fit\\"?: ObjectFitProperty;\\n  \\n  \\"object-position\\"?: ObjectPositionProperty<TLength>;\\n  \\n  \\"offset-anchor\\"?: OffsetAnchorProperty<TLength>;\\n  \\n  \\"offset-distance\\"?: OffsetDistanceProperty<TLength>;\\n  \\n  \\"offset-path\\"?: OffsetPathProperty;\\n  \\n  \\"offset-rotate\\"?: OffsetRotateProperty;\\n  \\n  \\"offset-rotation\\"?: OffsetRotateProperty;\\n  \\n  opacity?: OpacityProperty;\\n  \\n  order?: GlobalsNumber;\\n  \\n  orphans?: GlobalsNumber;\\n  \\n  \\"outline-color\\"?: OutlineColorProperty;\\n  \\n  \\"outline-offset\\"?: OutlineOffsetProperty<TLength>;\\n  \\n  \\"outline-style\\"?: OutlineStyleProperty;\\n  \\n  \\"outline-width\\"?: OutlineWidthProperty<TLength>;\\n  \\n  \\"overflow-anchor\\"?: OverflowAnchorProperty;\\n  \\n  \\"overflow-block\\"?: OverflowBlockProperty;\\n  \\n  \\"overflow-clip-box\\"?: OverflowClipBoxProperty;\\n  \\n  \\"overflow-inline\\"?: OverflowInlineProperty;\\n  \\n  \\"overflow-wrap\\"?: OverflowWrapProperty;\\n  \\n  \\"overflow-x\\"?: OverflowXProperty;\\n  \\n  \\"overflow-y\\"?: OverflowYProperty;\\n  \\n  \\"overscroll-behavior\\"?: OverscrollBehaviorProperty;\\n  \\n  \\"overscroll-behavior-block\\"?: OverscrollBehaviorBlockProperty;\\n  \\n  \\"overscroll-behavior-inline\\"?: OverscrollBehaviorInlineProperty;\\n  \\n  \\"overscroll-behavior-x\\"?: OverscrollBehaviorXProperty;\\n  \\n  \\"overscroll-behavior-y\\"?: OverscrollBehaviorYProperty;\\n  \\n  \\"padding-block\\"?: PaddingBlockProperty<TLength>;\\n  \\n  \\"padding-block-end\\"?: PaddingBlockEndProperty<TLength>;\\n  \\n  \\"padding-block-start\\"?: PaddingBlockStartProperty<TLength>;\\n  \\n  \\"padding-bottom\\"?: PaddingBottomProperty<TLength>;\\n  \\n  \\"padding-inline\\"?: PaddingInlineProperty<TLength>;\\n  \\n  \\"padding-inline-end\\"?: PaddingInlineEndProperty<TLength>;\\n  \\n  \\"padding-inline-start\\"?: PaddingInlineStartProperty<TLength>;\\n  \\n  \\"padding-left\\"?: PaddingLeftProperty<TLength>;\\n  \\n  \\"padding-right\\"?: PaddingRightProperty<TLength>;\\n  \\n  \\"padding-top\\"?: PaddingTopProperty<TLength>;\\n  \\n  \\"page-break-after\\"?: PageBreakAfterProperty;\\n  \\n  \\"page-break-before\\"?: PageBreakBeforeProperty;\\n  \\n  \\"page-break-inside\\"?: PageBreakInsideProperty;\\n  \\n  \\"paint-order\\"?: PaintOrderProperty;\\n  \\n  perspective?: PerspectiveProperty<TLength>;\\n  \\n  \\"perspective-origin\\"?: PerspectiveOriginProperty<TLength>;\\n  \\n  \\"place-content\\"?: PlaceContentProperty;\\n  \\n  \\"pointer-events\\"?: PointerEventsProperty;\\n  \\n  position?: PositionProperty;\\n  \\n  quotes?: QuotesProperty;\\n  \\n  resize?: ResizeProperty;\\n  \\n  right?: RightProperty<TLength>;\\n  \\n  rotate?: RotateProperty;\\n  \\n  \\"row-gap\\"?: RowGapProperty<TLength>;\\n  \\n  \\"ruby-align\\"?: RubyAlignProperty;\\n  \\n  \\"ruby-merge\\"?: RubyMergeProperty;\\n  \\n  \\"ruby-position\\"?: RubyPositionProperty;\\n  \\n  scale?: ScaleProperty;\\n  \\n  \\"scroll-behavior\\"?: ScrollBehaviorProperty;\\n  \\n  \\"scroll-margin\\"?: ScrollMarginProperty<TLength>;\\n  \\n  \\"scroll-margin-block\\"?: ScrollMarginBlockProperty<TLength>;\\n  \\n  \\"scroll-margin-block-end\\"?: ScrollMarginBlockEndProperty<TLength>;\\n  \\n  \\"scroll-margin-block-start\\"?: ScrollMarginBlockStartProperty<TLength>;\\n  \\n  \\"scroll-margin-bottom\\"?: ScrollMarginBottomProperty<TLength>;\\n  \\n  \\"scroll-margin-inline\\"?: ScrollMarginInlineProperty<TLength>;\\n  \\n  \\"scroll-margin-inline-end\\"?: ScrollMarginInlineEndProperty<TLength>;\\n  \\n  \\"scroll-margin-inline-start\\"?: ScrollMarginInlineStartProperty<TLength>;\\n  \\n  \\"scroll-margin-left\\"?: ScrollMarginLeftProperty<TLength>;\\n  \\n  \\"scroll-margin-right\\"?: ScrollMarginRightProperty<TLength>;\\n  \\n  \\"scroll-margin-top\\"?: ScrollMarginTopProperty<TLength>;\\n  \\n  \\"scroll-padding\\"?: ScrollPaddingProperty<TLength>;\\n  \\n  \\"scroll-padding-block\\"?: ScrollPaddingBlockProperty<TLength>;\\n  \\n  \\"scroll-padding-block-end\\"?: ScrollPaddingBlockEndProperty<TLength>;\\n  \\n  \\"scroll-padding-block-start\\"?: ScrollPaddingBlockStartProperty<TLength>;\\n  \\n  \\"scroll-padding-bottom\\"?: ScrollPaddingBottomProperty<TLength>;\\n  \\n  \\"scroll-padding-inline\\"?: ScrollPaddingInlineProperty<TLength>;\\n  \\n  \\"scroll-padding-inline-end\\"?: ScrollPaddingInlineEndProperty<TLength>;\\n  \\n  \\"scroll-padding-inline-start\\"?: ScrollPaddingInlineStartProperty<TLength>;\\n  \\n  \\"scroll-padding-left\\"?: ScrollPaddingLeftProperty<TLength>;\\n  \\n  \\"scroll-padding-right\\"?: ScrollPaddingRightProperty<TLength>;\\n  \\n  \\"scroll-padding-top\\"?: ScrollPaddingTopProperty<TLength>;\\n  \\n  \\"scroll-snap-align\\"?: ScrollSnapAlignProperty;\\n  \\n  \\"scroll-snap-margin\\"?: ScrollMarginProperty<TLength>;\\n  \\n  \\"scroll-snap-margin-bottom\\"?: ScrollMarginBottomProperty<TLength>;\\n  \\n  \\"scroll-snap-margin-left\\"?: ScrollMarginLeftProperty<TLength>;\\n  \\n  \\"scroll-snap-margin-right\\"?: ScrollMarginRightProperty<TLength>;\\n  \\n  \\"scroll-snap-margin-top\\"?: ScrollMarginTopProperty<TLength>;\\n  \\n  \\"scroll-snap-stop\\"?: ScrollSnapStopProperty;\\n  \\n  \\"scroll-snap-type\\"?: ScrollSnapTypeProperty;\\n  \\n  \\"scrollbar-color\\"?: ScrollbarColorProperty;\\n  \\n  \\"scrollbar-width\\"?: ScrollbarWidthProperty;\\n  \\n  \\"shape-image-threshold\\"?: ShapeImageThresholdProperty;\\n  \\n  \\"shape-margin\\"?: ShapeMarginProperty<TLength>;\\n  \\n  \\"shape-outside\\"?: ShapeOutsideProperty;\\n  \\n  \\"tab-size\\"?: TabSizeProperty<TLength>;\\n  \\n  \\"table-layout\\"?: TableLayoutProperty;\\n  \\n  \\"text-align\\"?: TextAlignProperty;\\n  \\n  \\"text-align-last\\"?: TextAlignLastProperty;\\n  \\n  \\"text-combine-upright\\"?: TextCombineUprightProperty;\\n  \\n  \\"text-decoration-color\\"?: TextDecorationColorProperty;\\n  \\n  \\"text-decoration-line\\"?: TextDecorationLineProperty;\\n  \\n  \\"text-decoration-skip\\"?: TextDecorationSkipProperty;\\n  \\n  \\"text-decoration-skip-ink\\"?: TextDecorationSkipInkProperty;\\n  \\n  \\"text-decoration-style\\"?: TextDecorationStyleProperty;\\n  \\n  \\"text-decoration-thickness\\"?: TextDecorationThicknessProperty<TLength>;\\n  \\n  \\"text-decoration-width\\"?: TextDecorationThicknessProperty<TLength>;\\n  \\n  \\"text-emphasis-color\\"?: TextEmphasisColorProperty;\\n  \\n  \\"text-emphasis-position\\"?: GlobalsString;\\n  \\n  \\"text-emphasis-style\\"?: TextEmphasisStyleProperty;\\n  \\n  \\"text-indent\\"?: TextIndentProperty<TLength>;\\n  \\n  \\"text-justify\\"?: TextJustifyProperty;\\n  \\n  \\"text-orientation\\"?: TextOrientationProperty;\\n  \\n  \\"text-overflow\\"?: TextOverflowProperty;\\n  \\n  \\"text-rendering\\"?: TextRenderingProperty;\\n  \\n  \\"text-shadow\\"?: TextShadowProperty;\\n  \\n  \\"text-size-adjust\\"?: TextSizeAdjustProperty;\\n  \\n  \\"text-transform\\"?: TextTransformProperty;\\n  \\n  \\"text-underline-offset\\"?: TextUnderlineOffsetProperty<TLength>;\\n  \\n  \\"text-underline-position\\"?: TextUnderlinePositionProperty;\\n  \\n  top?: TopProperty<TLength>;\\n  \\n  \\"touch-action\\"?: TouchActionProperty;\\n  \\n  transform?: TransformProperty;\\n  \\n  \\"transform-box\\"?: TransformBoxProperty;\\n  \\n  \\"transform-origin\\"?: TransformOriginProperty<TLength>;\\n  \\n  \\"transform-style\\"?: TransformStyleProperty;\\n  \\n  \\"transition-delay\\"?: GlobalsString;\\n  \\n  \\"transition-duration\\"?: GlobalsString;\\n  \\n  \\"transition-property\\"?: TransitionPropertyProperty;\\n  \\n  \\"transition-timing-function\\"?: TransitionTimingFunctionProperty;\\n  \\n  translate?: TranslateProperty<TLength>;\\n  \\n  \\"unicode-bidi\\"?: UnicodeBidiProperty;\\n  \\n  \\"user-select\\"?: UserSelectProperty;\\n  \\n  \\"vertical-align\\"?: VerticalAlignProperty<TLength>;\\n  \\n  visibility?: VisibilityProperty;\\n  \\n  \\"white-space\\"?: WhiteSpaceProperty;\\n  \\n  widows?: GlobalsNumber;\\n  \\n  width?: WidthProperty<TLength>;\\n  \\n  \\"will-change\\"?: WillChangeProperty;\\n  \\n  \\"word-break\\"?: WordBreakProperty;\\n  \\n  \\"word-spacing\\"?: WordSpacingProperty<TLength>;\\n  \\n  \\"word-wrap\\"?: WordWrapProperty;\\n  \\n  \\"writing-mode\\"?: WritingModeProperty;\\n  \\n  \\"z-index\\"?: ZIndexProperty;\\n  \\n  zoom?: ZoomProperty;\\n}\\n\\nexport interface StandardShorthandPropertiesHyphen<TLength = string | 0> {\\n  \\n  all?: Globals;\\n  \\n  animation?: AnimationProperty;\\n  \\n  background?: BackgroundProperty<TLength>;\\n  \\n  border?: BorderProperty<TLength>;\\n  \\n  \\"border-block\\"?: BorderBlockProperty<TLength>;\\n  \\n  \\"border-block-end\\"?: BorderBlockEndProperty<TLength>;\\n  \\n  \\"border-block-start\\"?: BorderBlockStartProperty<TLength>;\\n  \\n  \\"border-bottom\\"?: BorderBottomProperty<TLength>;\\n  \\n  \\"border-color\\"?: BorderColorProperty;\\n  \\n  \\"border-image\\"?: BorderImageProperty;\\n  \\n  \\"border-inline\\"?: BorderInlineProperty<TLength>;\\n  \\n  \\"border-inline-end\\"?: BorderInlineEndProperty<TLength>;\\n  \\n  \\"border-inline-start\\"?: BorderInlineStartProperty<TLength>;\\n  \\n  \\"border-left\\"?: BorderLeftProperty<TLength>;\\n  \\n  \\"border-radius\\"?: BorderRadiusProperty<TLength>;\\n  \\n  \\"border-right\\"?: BorderRightProperty<TLength>;\\n  \\n  \\"border-style\\"?: BorderStyleProperty;\\n  \\n  \\"border-top\\"?: BorderTopProperty<TLength>;\\n  \\n  \\"border-width\\"?: BorderWidthProperty<TLength>;\\n  \\n  \\"column-rule\\"?: ColumnRuleProperty<TLength>;\\n  \\n  columns?: ColumnsProperty<TLength>;\\n  \\n  flex?: FlexProperty<TLength>;\\n  \\n  \\"flex-flow\\"?: FlexFlowProperty;\\n  \\n  font?: FontProperty;\\n  \\n  gap?: GapProperty<TLength>;\\n  \\n  grid?: GridProperty;\\n  \\n  \\"grid-area\\"?: GridAreaProperty;\\n  \\n  \\"grid-column\\"?: GridColumnProperty;\\n  \\n  \\"grid-row\\"?: GridRowProperty;\\n  \\n  \\"grid-template\\"?: GridTemplateProperty;\\n  \\n  \\"line-clamp\\"?: LineClampProperty;\\n  \\n  \\"list-style\\"?: ListStyleProperty;\\n  \\n  margin?: MarginProperty<TLength>;\\n  \\n  mask?: MaskProperty<TLength>;\\n  \\n  \\"mask-border\\"?: MaskBorderProperty;\\n  \\n  motion?: OffsetProperty<TLength>;\\n  \\n  offset?: OffsetProperty<TLength>;\\n  \\n  outline?: OutlineProperty<TLength>;\\n  \\n  overflow?: OverflowProperty;\\n  \\n  padding?: PaddingProperty<TLength>;\\n  \\n  \\"place-items\\"?: PlaceItemsProperty;\\n  \\n  \\"place-self\\"?: PlaceSelfProperty;\\n  \\n  \\"text-decoration\\"?: TextDecorationProperty<TLength>;\\n  \\n  \\"text-emphasis\\"?: TextEmphasisProperty;\\n  \\n  transition?: TransitionProperty;\\n}\\n\\nexport interface StandardPropertiesHyphen<TLength = string | 0> extends StandardLonghandPropertiesHyphen<TLength>, StandardShorthandPropertiesHyphen<TLength> {}\\n\\nexport interface VendorLonghandPropertiesHyphen<TLength = string | 0> {\\n  \\n  \\"-moz-animation-delay\\"?: GlobalsString;\\n  \\n  \\"-moz-animation-direction\\"?: AnimationDirectionProperty;\\n  \\n  \\"-moz-animation-duration\\"?: GlobalsString;\\n  \\n  \\"-moz-animation-fill-mode\\"?: AnimationFillModeProperty;\\n  \\n  \\"-moz-animation-iteration-count\\"?: AnimationIterationCountProperty;\\n  \\n  \\"-moz-animation-name\\"?: AnimationNameProperty;\\n  \\n  \\"-moz-animation-play-state\\"?: AnimationPlayStateProperty;\\n  \\n  \\"-moz-animation-timing-function\\"?: AnimationTimingFunctionProperty;\\n  \\n  \\"-moz-appearance\\"?: MozAppearanceProperty;\\n  \\n  \\"-moz-backface-visibility\\"?: BackfaceVisibilityProperty;\\n  \\n  \\"-moz-border-end-color\\"?: BorderInlineEndColorProperty;\\n  \\n  \\"-moz-border-end-style\\"?: BorderInlineEndStyleProperty;\\n  \\n  \\"-moz-border-end-width\\"?: BorderInlineEndWidthProperty<TLength>;\\n  \\n  \\"-moz-border-start-color\\"?: BorderInlineStartColorProperty;\\n  \\n  \\"-moz-border-start-style\\"?: BorderInlineStartStyleProperty;\\n  \\n  \\"-moz-box-sizing\\"?: BoxSizingProperty;\\n  \\n  \\"-moz-column-count\\"?: ColumnCountProperty;\\n  \\n  \\"-moz-column-fill\\"?: ColumnFillProperty;\\n  \\n  \\"-moz-column-gap\\"?: ColumnGapProperty<TLength>;\\n  \\n  \\"-moz-column-rule-color\\"?: ColumnRuleColorProperty;\\n  \\n  \\"-moz-column-rule-style\\"?: ColumnRuleStyleProperty;\\n  \\n  \\"-moz-column-rule-width\\"?: ColumnRuleWidthProperty<TLength>;\\n  \\n  \\"-moz-column-width\\"?: ColumnWidthProperty<TLength>;\\n  \\n  \\"-moz-context-properties\\"?: MozContextPropertiesProperty;\\n  \\n  \\"-moz-float-edge\\"?: MozFloatEdgeProperty;\\n  \\n  \\"-moz-font-feature-settings\\"?: FontFeatureSettingsProperty;\\n  \\n  \\"-moz-font-language-override\\"?: FontLanguageOverrideProperty;\\n  \\n  \\"-moz-force-broken-image-icon\\"?: GlobalsNumber;\\n  \\n  \\"-moz-hyphens\\"?: HyphensProperty;\\n  \\n  \\"-moz-image-region\\"?: MozImageRegionProperty;\\n  \\n  \\"-moz-margin-end\\"?: MarginInlineEndProperty<TLength>;\\n  \\n  \\"-moz-margin-start\\"?: MarginInlineStartProperty<TLength>;\\n  \\n  \\"-moz-orient\\"?: MozOrientProperty;\\n  \\n  \\"-moz-outline-radius-bottomleft\\"?: MozOutlineRadiusBottomleftProperty<TLength>;\\n  \\n  \\"-moz-outline-radius-bottomright\\"?: MozOutlineRadiusBottomrightProperty<TLength>;\\n  \\n  \\"-moz-outline-radius-topleft\\"?: MozOutlineRadiusTopleftProperty<TLength>;\\n  \\n  \\"-moz-outline-radius-topright\\"?: MozOutlineRadiusToprightProperty<TLength>;\\n  \\n  \\"-moz-padding-end\\"?: PaddingInlineEndProperty<TLength>;\\n  \\n  \\"-moz-padding-start\\"?: PaddingInlineStartProperty<TLength>;\\n  \\n  \\"-moz-perspective\\"?: PerspectiveProperty<TLength>;\\n  \\n  \\"-moz-perspective-origin\\"?: PerspectiveOriginProperty<TLength>;\\n  \\n  \\"-moz-stack-sizing\\"?: MozStackSizingProperty;\\n  \\n  \\"-moz-tab-size\\"?: TabSizeProperty<TLength>;\\n  \\n  \\"-moz-text-size-adjust\\"?: TextSizeAdjustProperty;\\n  \\n  \\"-moz-transform-origin\\"?: TransformOriginProperty<TLength>;\\n  \\n  \\"-moz-transform-style\\"?: TransformStyleProperty;\\n  \\n  \\"-moz-transition-delay\\"?: GlobalsString;\\n  \\n  \\"-moz-transition-duration\\"?: GlobalsString;\\n  \\n  \\"-moz-transition-property\\"?: TransitionPropertyProperty;\\n  \\n  \\"-moz-transition-timing-function\\"?: TransitionTimingFunctionProperty;\\n  \\n  \\"-moz-user-focus\\"?: MozUserFocusProperty;\\n  \\n  \\"-moz-user-modify\\"?: MozUserModifyProperty;\\n  \\n  \\"-moz-user-select\\"?: UserSelectProperty;\\n  \\n  \\"-moz-window-dragging\\"?: MozWindowDraggingProperty;\\n  \\n  \\"-ms-accelerator\\"?: MsAcceleratorProperty;\\n  \\n  \\"-ms-align-self\\"?: AlignSelfProperty;\\n  \\n  \\"-ms-block-progression\\"?: MsBlockProgressionProperty;\\n  \\n  \\"-ms-content-zoom-chaining\\"?: MsContentZoomChainingProperty;\\n  \\n  \\"-ms-content-zoom-limit-max\\"?: GlobalsString;\\n  \\n  \\"-ms-content-zoom-limit-min\\"?: GlobalsString;\\n  \\n  \\"-ms-content-zoom-snap-points\\"?: GlobalsString;\\n  \\n  \\"-ms-content-zoom-snap-type\\"?: MsContentZoomSnapTypeProperty;\\n  \\n  \\"-ms-content-zooming\\"?: MsContentZoomingProperty;\\n  \\n  \\"-ms-filter\\"?: GlobalsString;\\n  \\n  \\"-ms-flex-direction\\"?: FlexDirectionProperty;\\n  \\n  \\"-ms-flex-positive\\"?: GlobalsNumber;\\n  \\n  \\"-ms-flow-from\\"?: MsFlowFromProperty;\\n  \\n  \\"-ms-flow-into\\"?: MsFlowIntoProperty;\\n  \\n  \\"-ms-grid-columns\\"?: GridAutoColumnsProperty<TLength>;\\n  \\n  \\"-ms-grid-rows\\"?: GridAutoRowsProperty<TLength>;\\n  \\n  \\"-ms-high-contrast-adjust\\"?: MsHighContrastAdjustProperty;\\n  \\n  \\"-ms-hyphenate-limit-chars\\"?: MsHyphenateLimitCharsProperty;\\n  \\n  \\"-ms-hyphenate-limit-lines\\"?: MsHyphenateLimitLinesProperty;\\n  \\n  \\"-ms-hyphenate-limit-zone\\"?: MsHyphenateLimitZoneProperty<TLength>;\\n  \\n  \\"-ms-hyphens\\"?: HyphensProperty;\\n  \\n  \\"-ms-ime-align\\"?: MsImeAlignProperty;\\n  \\n  \\"-ms-line-break\\"?: LineBreakProperty;\\n  \\n  \\"-ms-order\\"?: GlobalsNumber;\\n  \\n  \\"-ms-overflow-style\\"?: MsOverflowStyleProperty;\\n  \\n  \\"-ms-overflow-x\\"?: OverflowXProperty;\\n  \\n  \\"-ms-overflow-y\\"?: OverflowYProperty;\\n  \\n  \\"-ms-scroll-chaining\\"?: MsScrollChainingProperty;\\n  \\n  \\"-ms-scroll-limit-x-max\\"?: MsScrollLimitXMaxProperty<TLength>;\\n  \\n  \\"-ms-scroll-limit-x-min\\"?: MsScrollLimitXMinProperty<TLength>;\\n  \\n  \\"-ms-scroll-limit-y-max\\"?: MsScrollLimitYMaxProperty<TLength>;\\n  \\n  \\"-ms-scroll-limit-y-min\\"?: MsScrollLimitYMinProperty<TLength>;\\n  \\n  \\"-ms-scroll-rails\\"?: MsScrollRailsProperty;\\n  \\n  \\"-ms-scroll-snap-points-x\\"?: GlobalsString;\\n  \\n  \\"-ms-scroll-snap-points-y\\"?: GlobalsString;\\n  \\n  \\"-ms-scroll-snap-type\\"?: MsScrollSnapTypeProperty;\\n  \\n  \\"-ms-scroll-translation\\"?: MsScrollTranslationProperty;\\n  \\n  \\"-ms-scrollbar-3dlight-color\\"?: MsScrollbar3dlightColorProperty;\\n  \\n  \\"-ms-scrollbar-arrow-color\\"?: MsScrollbarArrowColorProperty;\\n  \\n  \\"-ms-scrollbar-base-color\\"?: MsScrollbarBaseColorProperty;\\n  \\n  \\"-ms-scrollbar-darkshadow-color\\"?: MsScrollbarDarkshadowColorProperty;\\n  \\n  \\"-ms-scrollbar-face-color\\"?: MsScrollbarFaceColorProperty;\\n  \\n  \\"-ms-scrollbar-highlight-color\\"?: MsScrollbarHighlightColorProperty;\\n  \\n  \\"-ms-scrollbar-shadow-color\\"?: MsScrollbarShadowColorProperty;\\n  \\n  \\"-ms-text-autospace\\"?: MsTextAutospaceProperty;\\n  \\n  \\"-ms-text-combine-horizontal\\"?: TextCombineUprightProperty;\\n  \\n  \\"-ms-text-overflow\\"?: TextOverflowProperty;\\n  \\n  \\"-ms-touch-action\\"?: TouchActionProperty;\\n  \\n  \\"-ms-touch-select\\"?: MsTouchSelectProperty;\\n  \\n  \\"-ms-transform\\"?: TransformProperty;\\n  \\n  \\"-ms-transform-origin\\"?: TransformOriginProperty<TLength>;\\n  \\n  \\"-ms-transition-delay\\"?: GlobalsString;\\n  \\n  \\"-ms-transition-duration\\"?: GlobalsString;\\n  \\n  \\"-ms-transition-property\\"?: TransitionPropertyProperty;\\n  \\n  \\"-ms-transition-timing-function\\"?: TransitionTimingFunctionProperty;\\n  \\n  \\"-ms-user-select\\"?: MsUserSelectProperty;\\n  \\n  \\"-ms-word-break\\"?: WordBreakProperty;\\n  \\n  \\"-ms-wrap-flow\\"?: MsWrapFlowProperty;\\n  \\n  \\"-ms-wrap-margin\\"?: MsWrapMarginProperty<TLength>;\\n  \\n  \\"-ms-wrap-through\\"?: MsWrapThroughProperty;\\n  \\n  \\"-ms-writing-mode\\"?: WritingModeProperty;\\n  \\n  \\"-o-object-fit\\"?: ObjectFitProperty;\\n  \\n  \\"-o-object-position\\"?: ObjectPositionProperty<TLength>;\\n  \\n  \\"-o-tab-size\\"?: TabSizeProperty<TLength>;\\n  \\n  \\"-o-text-overflow\\"?: TextOverflowProperty;\\n  \\n  \\"-o-transform-origin\\"?: TransformOriginProperty<TLength>;\\n  \\n  \\"-webkit-align-content\\"?: AlignContentProperty;\\n  \\n  \\"-webkit-align-items\\"?: AlignItemsProperty;\\n  \\n  \\"-webkit-align-self\\"?: AlignSelfProperty;\\n  \\n  \\"-webkit-animation-delay\\"?: GlobalsString;\\n  \\n  \\"-webkit-animation-direction\\"?: AnimationDirectionProperty;\\n  \\n  \\"-webkit-animation-duration\\"?: GlobalsString;\\n  \\n  \\"-webkit-animation-fill-mode\\"?: AnimationFillModeProperty;\\n  \\n  \\"-webkit-animation-iteration-count\\"?: AnimationIterationCountProperty;\\n  \\n  \\"-webkit-animation-name\\"?: AnimationNameProperty;\\n  \\n  \\"-webkit-animation-play-state\\"?: AnimationPlayStateProperty;\\n  \\n  \\"-webkit-animation-timing-function\\"?: AnimationTimingFunctionProperty;\\n  \\n  \\"-webkit-appearance\\"?: WebkitAppearanceProperty;\\n  \\n  \\"-webkit-backdrop-filter\\"?: BackdropFilterProperty;\\n  \\n  \\"-webkit-backface-visibility\\"?: BackfaceVisibilityProperty;\\n  \\n  \\"-webkit-background-clip\\"?: BackgroundClipProperty;\\n  \\n  \\"-webkit-background-origin\\"?: BackgroundOriginProperty;\\n  \\n  \\"-webkit-background-size\\"?: BackgroundSizeProperty<TLength>;\\n  \\n  \\"-webkit-border-before-color\\"?: WebkitBorderBeforeColorProperty;\\n  \\n  \\"-webkit-border-before-style\\"?: WebkitBorderBeforeStyleProperty;\\n  \\n  \\"-webkit-border-before-width\\"?: WebkitBorderBeforeWidthProperty<TLength>;\\n  \\n  \\"-webkit-border-bottom-left-radius\\"?: BorderBottomLeftRadiusProperty<TLength>;\\n  \\n  \\"-webkit-border-bottom-right-radius\\"?: BorderBottomRightRadiusProperty<TLength>;\\n  \\n  \\"-webkit-border-image-slice\\"?: BorderImageSliceProperty;\\n  \\n  \\"-webkit-border-top-left-radius\\"?: BorderTopLeftRadiusProperty<TLength>;\\n  \\n  \\"-webkit-border-top-right-radius\\"?: BorderTopRightRadiusProperty<TLength>;\\n  \\n  \\"-webkit-box-decoration-break\\"?: BoxDecorationBreakProperty;\\n  \\n  \\"-webkit-box-reflect\\"?: WebkitBoxReflectProperty<TLength>;\\n  \\n  \\"-webkit-box-shadow\\"?: BoxShadowProperty;\\n  \\n  \\"-webkit-box-sizing\\"?: BoxSizingProperty;\\n  \\n  \\"-webkit-clip-path\\"?: ClipPathProperty;\\n  \\n  \\"-webkit-color-adjust\\"?: ColorAdjustProperty;\\n  \\n  \\"-webkit-column-count\\"?: ColumnCountProperty;\\n  \\n  \\"-webkit-column-fill\\"?: ColumnFillProperty;\\n  \\n  \\"-webkit-column-gap\\"?: ColumnGapProperty<TLength>;\\n  \\n  \\"-webkit-column-rule-color\\"?: ColumnRuleColorProperty;\\n  \\n  \\"-webkit-column-rule-style\\"?: ColumnRuleStyleProperty;\\n  \\n  \\"-webkit-column-rule-width\\"?: ColumnRuleWidthProperty<TLength>;\\n  \\n  \\"-webkit-column-span\\"?: ColumnSpanProperty;\\n  \\n  \\"-webkit-column-width\\"?: ColumnWidthProperty<TLength>;\\n  \\n  \\"-webkit-filter\\"?: FilterProperty;\\n  \\n  \\"-webkit-flex-basis\\"?: FlexBasisProperty<TLength>;\\n  \\n  \\"-webkit-flex-direction\\"?: FlexDirectionProperty;\\n  \\n  \\"-webkit-flex-grow\\"?: GlobalsNumber;\\n  \\n  \\"-webkit-flex-shrink\\"?: GlobalsNumber;\\n  \\n  \\"-webkit-flex-wrap\\"?: FlexWrapProperty;\\n  \\n  \\"-webkit-font-feature-settings\\"?: FontFeatureSettingsProperty;\\n  \\n  \\"-webkit-font-kerning\\"?: FontKerningProperty;\\n  \\n  \\"-webkit-font-variant-ligatures\\"?: FontVariantLigaturesProperty;\\n  \\n  \\"-webkit-hyphens\\"?: HyphensProperty;\\n  \\n  \\"-webkit-justify-content\\"?: JustifyContentProperty;\\n  \\n  \\"-webkit-line-break\\"?: LineBreakProperty;\\n  \\n  \\"-webkit-line-clamp\\"?: WebkitLineClampProperty;\\n  \\n  \\"-webkit-margin-end\\"?: MarginInlineEndProperty<TLength>;\\n  \\n  \\"-webkit-margin-start\\"?: MarginInlineStartProperty<TLength>;\\n  \\n  \\"-webkit-mask-attachment\\"?: WebkitMaskAttachmentProperty;\\n  \\n  \\"-webkit-mask-clip\\"?: WebkitMaskClipProperty;\\n  \\n  \\"-webkit-mask-composite\\"?: WebkitMaskCompositeProperty;\\n  \\n  \\"-webkit-mask-image\\"?: WebkitMaskImageProperty;\\n  \\n  \\"-webkit-mask-origin\\"?: WebkitMaskOriginProperty;\\n  \\n  \\"-webkit-mask-position\\"?: WebkitMaskPositionProperty<TLength>;\\n  \\n  \\"-webkit-mask-position-x\\"?: WebkitMaskPositionXProperty<TLength>;\\n  \\n  \\"-webkit-mask-position-y\\"?: WebkitMaskPositionYProperty<TLength>;\\n  \\n  \\"-webkit-mask-repeat\\"?: WebkitMaskRepeatProperty;\\n  \\n  \\"-webkit-mask-repeat-x\\"?: WebkitMaskRepeatXProperty;\\n  \\n  \\"-webkit-mask-repeat-y\\"?: WebkitMaskRepeatYProperty;\\n  \\n  \\"-webkit-mask-size\\"?: WebkitMaskSizeProperty<TLength>;\\n  \\n  \\"-webkit-max-inline-size\\"?: MaxInlineSizeProperty<TLength>;\\n  \\n  \\"-webkit-order\\"?: GlobalsNumber;\\n  \\n  \\"-webkit-overflow-scrolling\\"?: WebkitOverflowScrollingProperty;\\n  \\n  \\"-webkit-padding-end\\"?: PaddingInlineEndProperty<TLength>;\\n  \\n  \\"-webkit-padding-start\\"?: PaddingInlineStartProperty<TLength>;\\n  \\n  \\"-webkit-perspective\\"?: PerspectiveProperty<TLength>;\\n  \\n  \\"-webkit-perspective-origin\\"?: PerspectiveOriginProperty<TLength>;\\n  \\n  \\"-webkit-scroll-snap-type\\"?: ScrollSnapTypeProperty;\\n  \\n  \\"-webkit-shape-margin\\"?: ShapeMarginProperty<TLength>;\\n  \\n  \\"-webkit-tap-highlight-color\\"?: WebkitTapHighlightColorProperty;\\n  \\n  \\"-webkit-text-combine\\"?: TextCombineUprightProperty;\\n  \\n  \\"-webkit-text-decoration-color\\"?: TextDecorationColorProperty;\\n  \\n  \\"-webkit-text-decoration-line\\"?: TextDecorationLineProperty;\\n  \\n  \\"-webkit-text-decoration-skip\\"?: TextDecorationSkipProperty;\\n  \\n  \\"-webkit-text-decoration-style\\"?: TextDecorationStyleProperty;\\n  \\n  \\"-webkit-text-emphasis-color\\"?: TextEmphasisColorProperty;\\n  \\n  \\"-webkit-text-emphasis-position\\"?: GlobalsString;\\n  \\n  \\"-webkit-text-emphasis-style\\"?: TextEmphasisStyleProperty;\\n  \\n  \\"-webkit-text-fill-color\\"?: WebkitTextFillColorProperty;\\n  \\n  \\"-webkit-text-orientation\\"?: TextOrientationProperty;\\n  \\n  \\"-webkit-text-size-adjust\\"?: TextSizeAdjustProperty;\\n  \\n  \\"-webkit-text-stroke-color\\"?: WebkitTextStrokeColorProperty;\\n  \\n  \\"-webkit-text-stroke-width\\"?: WebkitTextStrokeWidthProperty<TLength>;\\n  \\n  \\"-webkit-touch-callout\\"?: WebkitTouchCalloutProperty;\\n  \\n  \\"-webkit-transform\\"?: TransformProperty;\\n  \\n  \\"-webkit-transform-origin\\"?: TransformOriginProperty<TLength>;\\n  \\n  \\"-webkit-transform-style\\"?: TransformStyleProperty;\\n  \\n  \\"-webkit-transition-delay\\"?: GlobalsString;\\n  \\n  \\"-webkit-transition-duration\\"?: GlobalsString;\\n  \\n  \\"-webkit-transition-property\\"?: TransitionPropertyProperty;\\n  \\n  \\"-webkit-transition-timing-function\\"?: TransitionTimingFunctionProperty;\\n  \\n  \\"-webkit-user-modify\\"?: WebkitUserModifyProperty;\\n  \\n  \\"-webkit-user-select\\"?: UserSelectProperty;\\n  \\n  \\"-webkit-writing-mode\\"?: WritingModeProperty;\\n  \\n  \\"-webkittext-underline-position\\"?: TextUnderlinePositionProperty;\\n}\\n\\nexport interface VendorShorthandPropertiesHyphen<TLength = string | 0> {\\n  \\n  \\"-moz-animation\\"?: AnimationProperty;\\n  \\n  \\"-moz-border-image\\"?: BorderImageProperty;\\n  \\n  \\"-moz-column-rule\\"?: ColumnRuleProperty<TLength>;\\n  \\n  \\"-moz-columns\\"?: ColumnsProperty<TLength>;\\n  \\n  \\"-moz-transition\\"?: TransitionProperty;\\n  \\n  \\"-ms-content-zoom-limit\\"?: GlobalsString;\\n  \\n  \\"-ms-content-zoom-snap\\"?: MsContentZoomSnapProperty;\\n  \\n  \\"-ms-flex\\"?: FlexProperty<TLength>;\\n  \\n  \\"-ms-scroll-limit\\"?: GlobalsString;\\n  \\n  \\"-ms-scroll-snap-x\\"?: GlobalsString;\\n  \\n  \\"-ms-scroll-snap-y\\"?: GlobalsString;\\n  \\n  \\"-ms-transition\\"?: TransitionProperty;\\n  \\n  \\"-webkit-animation\\"?: AnimationProperty;\\n  \\n  \\"-webkit-border-before\\"?: WebkitBorderBeforeProperty<TLength>;\\n  \\n  \\"-webkit-border-image\\"?: BorderImageProperty;\\n  \\n  \\"-webkit-border-radius\\"?: BorderRadiusProperty<TLength>;\\n  \\n  \\"-webkit-column-rule\\"?: ColumnRuleProperty<TLength>;\\n  \\n  \\"-webkit-columns\\"?: ColumnsProperty<TLength>;\\n  \\n  \\"-webkit-flex\\"?: FlexProperty<TLength>;\\n  \\n  \\"-webkit-flex-flow\\"?: FlexFlowProperty;\\n  \\n  \\"-webkit-mask\\"?: WebkitMaskProperty<TLength>;\\n  \\n  \\"-webkit-text-emphasis\\"?: TextEmphasisProperty;\\n  \\n  \\"-webkit-text-stroke\\"?: WebkitTextStrokeProperty<TLength>;\\n  \\n  \\"-webkit-transition\\"?: TransitionProperty;\\n}\\n\\nexport interface VendorPropertiesHyphen<TLength = string | 0> extends VendorLonghandPropertiesHyphen<TLength>, VendorShorthandPropertiesHyphen<TLength> {}\\n\\nexport interface ObsoletePropertiesHyphen<TLength = string | 0> {\\n  \\n  \\"box-align\\"?: BoxAlignProperty;\\n  \\n  \\"box-direction\\"?: BoxDirectionProperty;\\n  \\n  \\"box-flex\\"?: GlobalsNumber;\\n  \\n  \\"box-flex-group\\"?: GlobalsNumber;\\n  \\n  \\"box-lines\\"?: BoxLinesProperty;\\n  \\n  \\"box-ordinal-group\\"?: GlobalsNumber;\\n  \\n  \\"box-orient\\"?: BoxOrientProperty;\\n  \\n  \\"box-pack\\"?: BoxPackProperty;\\n  \\n  clip?: ClipProperty;\\n  \\n  \\"font-variant-alternates\\"?: FontVariantAlternatesProperty;\\n  \\n  \\"grid-column-gap\\"?: GridColumnGapProperty<TLength>;\\n  \\n  \\"grid-gap\\"?: GridGapProperty<TLength>;\\n  \\n  \\"grid-row-gap\\"?: GridRowGapProperty<TLength>;\\n  \\n  \\"ime-mode\\"?: ImeModeProperty;\\n  \\n  \\"offset-block\\"?: InsetBlockProperty<TLength>;\\n  \\n  \\"offset-block-end\\"?: InsetBlockEndProperty<TLength>;\\n  \\n  \\"offset-block-start\\"?: InsetBlockStartProperty<TLength>;\\n  \\n  \\"offset-inline\\"?: InsetInlineProperty<TLength>;\\n  \\n  \\"offset-inline-end\\"?: InsetInlineEndProperty<TLength>;\\n  \\n  \\"offset-inline-start\\"?: InsetInlineStartProperty<TLength>;\\n  \\n  \\"scroll-snap-coordinate\\"?: ScrollSnapCoordinateProperty<TLength>;\\n  \\n  \\"scroll-snap-destination\\"?: ScrollSnapDestinationProperty<TLength>;\\n  \\n  \\"scroll-snap-points-x\\"?: ScrollSnapPointsXProperty;\\n  \\n  \\"scroll-snap-points-y\\"?: ScrollSnapPointsYProperty;\\n  \\n  \\"scroll-snap-type-x\\"?: ScrollSnapTypeXProperty;\\n  \\n  \\"scroll-snap-type-y\\"?: ScrollSnapTypeYProperty;\\n  \\n  \\"scrollbar-track-color\\"?: MsScrollbarTrackColorProperty;\\n  \\n  \\"text-combine-horizontal\\"?: TextCombineUprightProperty;\\n  \\n  \\"-khtml-box-align\\"?: BoxAlignProperty;\\n  \\n  \\"-khtml-box-direction\\"?: BoxDirectionProperty;\\n  \\n  \\"-khtml-box-flex\\"?: GlobalsNumber;\\n  \\n  \\"-khtml-box-flex-group\\"?: GlobalsNumber;\\n  \\n  \\"-khtml-box-lines\\"?: BoxLinesProperty;\\n  \\n  \\"-khtml-box-ordinal-group\\"?: GlobalsNumber;\\n  \\n  \\"-khtml-box-orient\\"?: BoxOrientProperty;\\n  \\n  \\"-khtml-box-pack\\"?: BoxPackProperty;\\n  \\n  \\"-khtml-line-break\\"?: LineBreakProperty;\\n  \\n  \\"-khtml-opacity\\"?: OpacityProperty;\\n  \\n  \\"-khtml-user-select\\"?: UserSelectProperty;\\n  \\n  \\"-moz-background-clip\\"?: BackgroundClipProperty;\\n  \\n  \\"-moz-background-inline-policy\\"?: BoxDecorationBreakProperty;\\n  \\n  \\"-moz-background-origin\\"?: BackgroundOriginProperty;\\n  \\n  \\"-moz-background-size\\"?: BackgroundSizeProperty<TLength>;\\n  \\n  \\"-moz-binding\\"?: MozBindingProperty;\\n  \\n  \\"-moz-border-bottom-colors\\"?: MozBorderBottomColorsProperty;\\n  \\n  \\"-moz-border-left-colors\\"?: MozBorderLeftColorsProperty;\\n  \\n  \\"-moz-border-radius\\"?: BorderRadiusProperty<TLength>;\\n  \\n  \\"-moz-border-radius-bottomleft\\"?: BorderBottomLeftRadiusProperty<TLength>;\\n  \\n  \\"-moz-border-radius-bottomright\\"?: BorderBottomRightRadiusProperty<TLength>;\\n  \\n  \\"-moz-border-radius-topleft\\"?: BorderTopLeftRadiusProperty<TLength>;\\n  \\n  \\"-moz-border-radius-topright\\"?: BorderTopRightRadiusProperty<TLength>;\\n  \\n  \\"-moz-border-right-colors\\"?: MozBorderRightColorsProperty;\\n  \\n  \\"-moz-border-top-colors\\"?: MozBorderTopColorsProperty;\\n  \\n  \\"-moz-box-align\\"?: BoxAlignProperty;\\n  \\n  \\"-moz-box-direction\\"?: BoxDirectionProperty;\\n  \\n  \\"-moz-box-flex\\"?: GlobalsNumber;\\n  \\n  \\"-moz-box-ordinal-group\\"?: GlobalsNumber;\\n  \\n  \\"-moz-box-orient\\"?: BoxOrientProperty;\\n  \\n  \\"-moz-box-pack\\"?: BoxPackProperty;\\n  \\n  \\"-moz-box-shadow\\"?: BoxShadowProperty;\\n  \\n  \\"-moz-opacity\\"?: OpacityProperty;\\n  \\n  \\"-moz-outline\\"?: OutlineProperty<TLength>;\\n  \\n  \\"-moz-outline-color\\"?: OutlineColorProperty;\\n  \\n  \\"-moz-outline-radius\\"?: MozOutlineRadiusProperty<TLength>;\\n  \\n  \\"-moz-outline-style\\"?: OutlineStyleProperty;\\n  \\n  \\"-moz-outline-width\\"?: OutlineWidthProperty<TLength>;\\n  \\n  \\"-moz-text-align-last\\"?: TextAlignLastProperty;\\n  \\n  \\"-moz-text-blink\\"?: MozTextBlinkProperty;\\n  \\n  \\"-moz-text-decoration-color\\"?: TextDecorationColorProperty;\\n  \\n  \\"-moz-text-decoration-line\\"?: TextDecorationLineProperty;\\n  \\n  \\"-moz-text-decoration-style\\"?: TextDecorationStyleProperty;\\n  \\n  \\"-moz-user-input\\"?: MozUserInputProperty;\\n  \\n  \\"-moz-window-shadow\\"?: MozWindowShadowProperty;\\n  \\n  \\"-ms-ime-mode\\"?: ImeModeProperty;\\n  \\n  \\"-ms-scrollbar-track-color\\"?: MsScrollbarTrackColorProperty;\\n  \\n  \\"-o-animation\\"?: AnimationProperty;\\n  \\n  \\"-o-animation-delay\\"?: GlobalsString;\\n  \\n  \\"-o-animation-direction\\"?: AnimationDirectionProperty;\\n  \\n  \\"-o-animation-duration\\"?: GlobalsString;\\n  \\n  \\"-o-animation-fill-mode\\"?: AnimationFillModeProperty;\\n  \\n  \\"-o-animation-iteration-count\\"?: AnimationIterationCountProperty;\\n  \\n  \\"-o-animation-name\\"?: AnimationNameProperty;\\n  \\n  \\"-o-animation-play-state\\"?: AnimationPlayStateProperty;\\n  \\n  \\"-o-animation-timing-function\\"?: AnimationTimingFunctionProperty;\\n  \\n  \\"-o-background-size\\"?: BackgroundSizeProperty<TLength>;\\n  \\n  \\"-o-border-image\\"?: BorderImageProperty;\\n  \\n  \\"-o-transform\\"?: TransformProperty;\\n  \\n  \\"-o-transition\\"?: TransitionProperty;\\n  \\n  \\"-o-transition-delay\\"?: GlobalsString;\\n  \\n  \\"-o-transition-duration\\"?: GlobalsString;\\n  \\n  \\"-o-transition-property\\"?: TransitionPropertyProperty;\\n  \\n  \\"-o-transition-timing-function\\"?: TransitionTimingFunctionProperty;\\n  \\n  \\"-webkit-box-align\\"?: BoxAlignProperty;\\n  \\n  \\"-webkit-box-direction\\"?: BoxDirectionProperty;\\n  \\n  \\"-webkit-box-flex\\"?: GlobalsNumber;\\n  \\n  \\"-webkit-box-flex-group\\"?: GlobalsNumber;\\n  \\n  \\"-webkit-box-lines\\"?: BoxLinesProperty;\\n  \\n  \\"-webkit-box-ordinal-group\\"?: GlobalsNumber;\\n  \\n  \\"-webkit-box-orient\\"?: BoxOrientProperty;\\n  \\n  \\"-webkit-box-pack\\"?: BoxPackProperty;\\n  \\n  \\"-webkit-scroll-snap-points-x\\"?: ScrollSnapPointsXProperty;\\n  \\n  \\"-webkit-scroll-snap-points-y\\"?: ScrollSnapPointsYProperty;\\n}\\n\\nexport interface SvgPropertiesHyphen<TLength = string | 0> {\\n  \\"alignment-baseline\\"?: AlignmentBaselineProperty;\\n  \\"baseline-shift\\"?: BaselineShiftProperty<TLength>;\\n  clip?: ClipProperty;\\n  \\"clip-path\\"?: ClipPathProperty;\\n  \\"clip-rule\\"?: ClipRuleProperty;\\n  color?: ColorProperty;\\n  \\"color-interpolation\\"?: ColorInterpolationProperty;\\n  \\"color-rendering\\"?: ColorRenderingProperty;\\n  cursor?: CursorProperty;\\n  direction?: DirectionProperty;\\n  display?: DisplayProperty;\\n  \\"dominant-baseline\\"?: DominantBaselineProperty;\\n  fill?: FillProperty;\\n  \\"fill-opacity\\"?: GlobalsNumber;\\n  \\"fill-rule\\"?: FillRuleProperty;\\n  filter?: FilterProperty;\\n  \\"flood-color\\"?: FloodColorProperty;\\n  \\"flood-opacity\\"?: GlobalsNumber;\\n  font?: FontProperty;\\n  \\"font-family\\"?: FontFamilyProperty;\\n  \\"font-size\\"?: FontSizeProperty<TLength>;\\n  \\"font-size-adjust\\"?: FontSizeAdjustProperty;\\n  \\"font-stretch\\"?: FontStretchProperty;\\n  \\"font-style\\"?: FontStyleProperty;\\n  \\"font-variant\\"?: FontVariantProperty;\\n  \\"font-weight\\"?: FontWeightProperty;\\n  \\"glyph-orientation-vertical\\"?: GlyphOrientationVerticalProperty;\\n  \\"image-rendering\\"?: ImageRenderingProperty;\\n  \\"letter-spacing\\"?: LetterSpacingProperty<TLength>;\\n  \\"lighting-color\\"?: LightingColorProperty;\\n  \\"line-height\\"?: LineHeightProperty<TLength>;\\n  marker?: MarkerProperty;\\n  \\"marker-end\\"?: MarkerEndProperty;\\n  \\"marker-mid\\"?: MarkerMidProperty;\\n  \\"marker-start\\"?: MarkerStartProperty;\\n  mask?: MaskProperty<TLength>;\\n  opacity?: OpacityProperty;\\n  overflow?: OverflowProperty;\\n  \\"paint-order\\"?: PaintOrderProperty;\\n  \\"pointer-events\\"?: PointerEventsProperty;\\n  \\"shape-rendering\\"?: ShapeRenderingProperty;\\n  \\"stop-color\\"?: StopColorProperty;\\n  \\"stop-opacity\\"?: GlobalsNumber;\\n  stroke?: StrokeProperty;\\n  \\"stroke-dasharray\\"?: StrokeDasharrayProperty<TLength>;\\n  \\"stroke-dashoffset\\"?: StrokeDashoffsetProperty<TLength>;\\n  \\"stroke-linecap\\"?: StrokeLinecapProperty;\\n  \\"stroke-linejoin\\"?: StrokeLinejoinProperty;\\n  \\"stroke-miterlimit\\"?: GlobalsNumber;\\n  \\"stroke-opacity\\"?: GlobalsNumber;\\n  \\"stroke-width\\"?: StrokeWidthProperty<TLength>;\\n  \\"text-anchor\\"?: TextAnchorProperty;\\n  \\"text-decoration\\"?: TextDecorationProperty<TLength>;\\n  \\"text-rendering\\"?: TextRenderingProperty;\\n  \\"unicode-bidi\\"?: UnicodeBidiProperty;\\n  \\"vector-effect\\"?: VectorEffectProperty;\\n  visibility?: VisibilityProperty;\\n  \\"white-space\\"?: WhiteSpaceProperty;\\n  \\"word-spacing\\"?: WordSpacingProperty<TLength>;\\n  \\"writing-mode\\"?: WritingModeProperty;\\n}\\n\\nexport interface PropertiesHyphen<TLength = string | 0>\\n  extends StandardPropertiesHyphen<TLength>,\\n    VendorPropertiesHyphen<TLength>,\\n    ObsoletePropertiesHyphen<TLength>,\\n    SvgPropertiesHyphen<TLength> {}\\n\\nexport interface StandardLonghandPropertiesFallback<TLength = string | 0> {\\n  \\n  alignContent?: AlignContentProperty | AlignContentProperty[];\\n  \\n  alignItems?: AlignItemsProperty | AlignItemsProperty[];\\n  \\n  alignSelf?: AlignSelfProperty | AlignSelfProperty[];\\n  \\n  animationDelay?: GlobalsString | GlobalsString[];\\n  \\n  animationDirection?: AnimationDirectionProperty | AnimationDirectionProperty[];\\n  \\n  animationDuration?: GlobalsString | GlobalsString[];\\n  \\n  animationFillMode?: AnimationFillModeProperty | AnimationFillModeProperty[];\\n  \\n  animationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[];\\n  \\n  animationName?: AnimationNameProperty | AnimationNameProperty[];\\n  \\n  animationPlayState?: AnimationPlayStateProperty | AnimationPlayStateProperty[];\\n  \\n  animationTimingFunction?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[];\\n  \\n  appearance?: AppearanceProperty | AppearanceProperty[];\\n  \\n  aspectRatio?: AspectRatioProperty | AspectRatioProperty[];\\n  \\n  backdropFilter?: BackdropFilterProperty | BackdropFilterProperty[];\\n  \\n  backfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[];\\n  \\n  backgroundAttachment?: BackgroundAttachmentProperty | BackgroundAttachmentProperty[];\\n  \\n  backgroundBlendMode?: BackgroundBlendModeProperty | BackgroundBlendModeProperty[];\\n  \\n  backgroundClip?: BackgroundClipProperty | BackgroundClipProperty[];\\n  \\n  backgroundColor?: BackgroundColorProperty | BackgroundColorProperty[];\\n  \\n  backgroundImage?: BackgroundImageProperty | BackgroundImageProperty[];\\n  \\n  backgroundOrigin?: BackgroundOriginProperty | BackgroundOriginProperty[];\\n  \\n  backgroundPosition?: BackgroundPositionProperty<TLength> | BackgroundPositionProperty<TLength>[];\\n  \\n  backgroundPositionX?: BackgroundPositionXProperty<TLength> | BackgroundPositionXProperty<TLength>[];\\n  \\n  backgroundPositionY?: BackgroundPositionYProperty<TLength> | BackgroundPositionYProperty<TLength>[];\\n  \\n  backgroundRepeat?: BackgroundRepeatProperty | BackgroundRepeatProperty[];\\n  \\n  backgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[];\\n  \\n  blockOverflow?: BlockOverflowProperty | BlockOverflowProperty[];\\n  \\n  blockSize?: BlockSizeProperty<TLength> | BlockSizeProperty<TLength>[];\\n  \\n  borderBlockColor?: BorderBlockColorProperty | BorderBlockColorProperty[];\\n  \\n  borderBlockEndColor?: BorderBlockEndColorProperty | BorderBlockEndColorProperty[];\\n  \\n  borderBlockEndStyle?: BorderBlockEndStyleProperty | BorderBlockEndStyleProperty[];\\n  \\n  borderBlockEndWidth?: BorderBlockEndWidthProperty<TLength> | BorderBlockEndWidthProperty<TLength>[];\\n  \\n  borderBlockStartColor?: BorderBlockStartColorProperty | BorderBlockStartColorProperty[];\\n  \\n  borderBlockStartStyle?: BorderBlockStartStyleProperty | BorderBlockStartStyleProperty[];\\n  \\n  borderBlockStartWidth?: BorderBlockStartWidthProperty<TLength> | BorderBlockStartWidthProperty<TLength>[];\\n  \\n  borderBlockStyle?: BorderBlockStyleProperty | BorderBlockStyleProperty[];\\n  \\n  borderBlockWidth?: BorderBlockWidthProperty<TLength> | BorderBlockWidthProperty<TLength>[];\\n  \\n  borderBottomColor?: BorderBottomColorProperty | BorderBottomColorProperty[];\\n  \\n  borderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[];\\n  \\n  borderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[];\\n  \\n  borderBottomStyle?: BorderBottomStyleProperty | BorderBottomStyleProperty[];\\n  \\n  borderBottomWidth?: BorderBottomWidthProperty<TLength> | BorderBottomWidthProperty<TLength>[];\\n  \\n  borderCollapse?: BorderCollapseProperty | BorderCollapseProperty[];\\n  \\n  borderEndEndRadius?: BorderEndEndRadiusProperty<TLength> | BorderEndEndRadiusProperty<TLength>[];\\n  \\n  borderEndStartRadius?: BorderEndStartRadiusProperty<TLength> | BorderEndStartRadiusProperty<TLength>[];\\n  \\n  borderImageOutset?: BorderImageOutsetProperty<TLength> | BorderImageOutsetProperty<TLength>[];\\n  \\n  borderImageRepeat?: BorderImageRepeatProperty | BorderImageRepeatProperty[];\\n  \\n  borderImageSlice?: BorderImageSliceProperty | BorderImageSliceProperty[];\\n  \\n  borderImageSource?: BorderImageSourceProperty | BorderImageSourceProperty[];\\n  \\n  borderImageWidth?: BorderImageWidthProperty<TLength> | BorderImageWidthProperty<TLength>[];\\n  \\n  borderInlineColor?: BorderInlineColorProperty | BorderInlineColorProperty[];\\n  \\n  borderInlineEndColor?: BorderInlineEndColorProperty | BorderInlineEndColorProperty[];\\n  \\n  borderInlineEndStyle?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[];\\n  \\n  borderInlineEndWidth?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[];\\n  \\n  borderInlineStartColor?: BorderInlineStartColorProperty | BorderInlineStartColorProperty[];\\n  \\n  borderInlineStartStyle?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[];\\n  \\n  borderInlineStartWidth?: BorderInlineStartWidthProperty<TLength> | BorderInlineStartWidthProperty<TLength>[];\\n  \\n  borderInlineStyle?: BorderInlineStyleProperty | BorderInlineStyleProperty[];\\n  \\n  borderInlineWidth?: BorderInlineWidthProperty<TLength> | BorderInlineWidthProperty<TLength>[];\\n  \\n  borderLeftColor?: BorderLeftColorProperty | BorderLeftColorProperty[];\\n  \\n  borderLeftStyle?: BorderLeftStyleProperty | BorderLeftStyleProperty[];\\n  \\n  borderLeftWidth?: BorderLeftWidthProperty<TLength> | BorderLeftWidthProperty<TLength>[];\\n  \\n  borderRightColor?: BorderRightColorProperty | BorderRightColorProperty[];\\n  \\n  borderRightStyle?: BorderRightStyleProperty | BorderRightStyleProperty[];\\n  \\n  borderRightWidth?: BorderRightWidthProperty<TLength> | BorderRightWidthProperty<TLength>[];\\n  \\n  borderSpacing?: BorderSpacingProperty<TLength> | BorderSpacingProperty<TLength>[];\\n  \\n  borderStartEndRadius?: BorderStartEndRadiusProperty<TLength> | BorderStartEndRadiusProperty<TLength>[];\\n  \\n  borderStartStartRadius?: BorderStartStartRadiusProperty<TLength> | BorderStartStartRadiusProperty<TLength>[];\\n  \\n  borderTopColor?: BorderTopColorProperty | BorderTopColorProperty[];\\n  \\n  borderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[];\\n  \\n  borderTopRightRadius?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[];\\n  \\n  borderTopStyle?: BorderTopStyleProperty | BorderTopStyleProperty[];\\n  \\n  borderTopWidth?: BorderTopWidthProperty<TLength> | BorderTopWidthProperty<TLength>[];\\n  \\n  bottom?: BottomProperty<TLength> | BottomProperty<TLength>[];\\n  \\n  boxDecorationBreak?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[];\\n  \\n  boxShadow?: BoxShadowProperty | BoxShadowProperty[];\\n  \\n  boxSizing?: BoxSizingProperty | BoxSizingProperty[];\\n  \\n  breakAfter?: BreakAfterProperty | BreakAfterProperty[];\\n  \\n  breakBefore?: BreakBeforeProperty | BreakBeforeProperty[];\\n  \\n  breakInside?: BreakInsideProperty | BreakInsideProperty[];\\n  \\n  captionSide?: CaptionSideProperty | CaptionSideProperty[];\\n  \\n  caretColor?: CaretColorProperty | CaretColorProperty[];\\n  \\n  clear?: ClearProperty | ClearProperty[];\\n  \\n  clipPath?: ClipPathProperty | ClipPathProperty[];\\n  \\n  color?: ColorProperty | ColorProperty[];\\n  \\n  colorAdjust?: ColorAdjustProperty | ColorAdjustProperty[];\\n  \\n  columnCount?: ColumnCountProperty | ColumnCountProperty[];\\n  \\n  columnFill?: ColumnFillProperty | ColumnFillProperty[];\\n  \\n  columnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[];\\n  \\n  columnRuleColor?: ColumnRuleColorProperty | ColumnRuleColorProperty[];\\n  \\n  columnRuleStyle?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[];\\n  \\n  columnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[];\\n  \\n  columnSpan?: ColumnSpanProperty | ColumnSpanProperty[];\\n  \\n  columnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[];\\n  \\n  contain?: ContainProperty | ContainProperty[];\\n  \\n  content?: ContentProperty | ContentProperty[];\\n  \\n  counterIncrement?: CounterIncrementProperty | CounterIncrementProperty[];\\n  \\n  counterReset?: CounterResetProperty | CounterResetProperty[];\\n  \\n  counterSet?: CounterSetProperty | CounterSetProperty[];\\n  \\n  cursor?: CursorProperty | CursorProperty[];\\n  \\n  direction?: DirectionProperty | DirectionProperty[];\\n  \\n  display?: DisplayProperty | DisplayProperty[];\\n  \\n  emptyCells?: EmptyCellsProperty | EmptyCellsProperty[];\\n  \\n  filter?: FilterProperty | FilterProperty[];\\n  \\n  flexBasis?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[];\\n  \\n  flexDirection?: FlexDirectionProperty | FlexDirectionProperty[];\\n  \\n  flexGrow?: GlobalsNumber | GlobalsNumber[];\\n  \\n  flexShrink?: GlobalsNumber | GlobalsNumber[];\\n  \\n  flexWrap?: FlexWrapProperty | FlexWrapProperty[];\\n  \\n  float?: FloatProperty | FloatProperty[];\\n  \\n  fontFamily?: FontFamilyProperty | FontFamilyProperty[];\\n  \\n  fontFeatureSettings?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[];\\n  \\n  fontKerning?: FontKerningProperty | FontKerningProperty[];\\n  \\n  fontLanguageOverride?: FontLanguageOverrideProperty | FontLanguageOverrideProperty[];\\n  \\n  fontOpticalSizing?: FontOpticalSizingProperty | FontOpticalSizingProperty[];\\n  \\n  fontSize?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[];\\n  \\n  fontSizeAdjust?: FontSizeAdjustProperty | FontSizeAdjustProperty[];\\n  \\n  fontStretch?: FontStretchProperty | FontStretchProperty[];\\n  \\n  fontStyle?: FontStyleProperty | FontStyleProperty[];\\n  \\n  fontSynthesis?: FontSynthesisProperty | FontSynthesisProperty[];\\n  \\n  fontVariant?: FontVariantProperty | FontVariantProperty[];\\n  \\n  fontVariantCaps?: FontVariantCapsProperty | FontVariantCapsProperty[];\\n  \\n  fontVariantEastAsian?: FontVariantEastAsianProperty | FontVariantEastAsianProperty[];\\n  \\n  fontVariantLigatures?: FontVariantLigaturesProperty | FontVariantLigaturesProperty[];\\n  \\n  fontVariantNumeric?: FontVariantNumericProperty | FontVariantNumericProperty[];\\n  \\n  fontVariantPosition?: FontVariantPositionProperty | FontVariantPositionProperty[];\\n  \\n  fontVariationSettings?: FontVariationSettingsProperty | FontVariationSettingsProperty[];\\n  \\n  fontWeight?: FontWeightProperty | FontWeightProperty[];\\n  \\n  gridAutoColumns?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[];\\n  \\n  gridAutoFlow?: GridAutoFlowProperty | GridAutoFlowProperty[];\\n  \\n  gridAutoRows?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[];\\n  \\n  gridColumnEnd?: GridColumnEndProperty | GridColumnEndProperty[];\\n  \\n  gridColumnStart?: GridColumnStartProperty | GridColumnStartProperty[];\\n  \\n  gridRowEnd?: GridRowEndProperty | GridRowEndProperty[];\\n  \\n  gridRowStart?: GridRowStartProperty | GridRowStartProperty[];\\n  \\n  gridTemplateAreas?: GridTemplateAreasProperty | GridTemplateAreasProperty[];\\n  \\n  gridTemplateColumns?: GridTemplateColumnsProperty<TLength> | GridTemplateColumnsProperty<TLength>[];\\n  \\n  gridTemplateRows?: GridTemplateRowsProperty<TLength> | GridTemplateRowsProperty<TLength>[];\\n  \\n  hangingPunctuation?: HangingPunctuationProperty | HangingPunctuationProperty[];\\n  \\n  height?: HeightProperty<TLength> | HeightProperty<TLength>[];\\n  \\n  hyphens?: HyphensProperty | HyphensProperty[];\\n  \\n  imageOrientation?: ImageOrientationProperty | ImageOrientationProperty[];\\n  \\n  imageRendering?: ImageRenderingProperty | ImageRenderingProperty[];\\n  \\n  imageResolution?: ImageResolutionProperty | ImageResolutionProperty[];\\n  \\n  initialLetter?: InitialLetterProperty | InitialLetterProperty[];\\n  \\n  inlineSize?: InlineSizeProperty<TLength> | InlineSizeProperty<TLength>[];\\n  \\n  inset?: InsetProperty<TLength> | InsetProperty<TLength>[];\\n  \\n  insetBlock?: InsetBlockProperty<TLength> | InsetBlockProperty<TLength>[];\\n  \\n  insetBlockEnd?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[];\\n  \\n  insetBlockStart?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[];\\n  \\n  insetInline?: InsetInlineProperty<TLength> | InsetInlineProperty<TLength>[];\\n  \\n  insetInlineEnd?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[];\\n  \\n  insetInlineStart?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[];\\n  \\n  isolation?: IsolationProperty | IsolationProperty[];\\n  \\n  justifyContent?: JustifyContentProperty | JustifyContentProperty[];\\n  \\n  justifyItems?: JustifyItemsProperty | JustifyItemsProperty[];\\n  \\n  justifySelf?: JustifySelfProperty | JustifySelfProperty[];\\n  \\n  left?: LeftProperty<TLength> | LeftProperty<TLength>[];\\n  \\n  letterSpacing?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[];\\n  \\n  lineBreak?: LineBreakProperty | LineBreakProperty[];\\n  \\n  lineHeight?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[];\\n  \\n  lineHeightStep?: LineHeightStepProperty<TLength> | LineHeightStepProperty<TLength>[];\\n  \\n  listStyleImage?: ListStyleImageProperty | ListStyleImageProperty[];\\n  \\n  listStylePosition?: ListStylePositionProperty | ListStylePositionProperty[];\\n  \\n  listStyleType?: ListStyleTypeProperty | ListStyleTypeProperty[];\\n  \\n  marginBlock?: MarginBlockProperty<TLength> | MarginBlockProperty<TLength>[];\\n  \\n  marginBlockEnd?: MarginBlockEndProperty<TLength> | MarginBlockEndProperty<TLength>[];\\n  \\n  marginBlockStart?: MarginBlockStartProperty<TLength> | MarginBlockStartProperty<TLength>[];\\n  \\n  marginBottom?: MarginBottomProperty<TLength> | MarginBottomProperty<TLength>[];\\n  \\n  marginInline?: MarginInlineProperty<TLength> | MarginInlineProperty<TLength>[];\\n  \\n  marginInlineEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[];\\n  \\n  marginInlineStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[];\\n  \\n  marginLeft?: MarginLeftProperty<TLength> | MarginLeftProperty<TLength>[];\\n  \\n  marginRight?: MarginRightProperty<TLength> | MarginRightProperty<TLength>[];\\n  \\n  marginTop?: MarginTopProperty<TLength> | MarginTopProperty<TLength>[];\\n  \\n  maskBorderMode?: MaskBorderModeProperty | MaskBorderModeProperty[];\\n  \\n  maskBorderOutset?: MaskBorderOutsetProperty<TLength> | MaskBorderOutsetProperty<TLength>[];\\n  \\n  maskBorderRepeat?: MaskBorderRepeatProperty | MaskBorderRepeatProperty[];\\n  \\n  maskBorderSlice?: MaskBorderSliceProperty | MaskBorderSliceProperty[];\\n  \\n  maskBorderSource?: MaskBorderSourceProperty | MaskBorderSourceProperty[];\\n  \\n  maskBorderWidth?: MaskBorderWidthProperty<TLength> | MaskBorderWidthProperty<TLength>[];\\n  \\n  maskClip?: MaskClipProperty | MaskClipProperty[];\\n  \\n  maskComposite?: MaskCompositeProperty | MaskCompositeProperty[];\\n  \\n  maskImage?: MaskImageProperty | MaskImageProperty[];\\n  \\n  maskMode?: MaskModeProperty | MaskModeProperty[];\\n  \\n  maskOrigin?: MaskOriginProperty | MaskOriginProperty[];\\n  \\n  maskPosition?: MaskPositionProperty<TLength> | MaskPositionProperty<TLength>[];\\n  \\n  maskRepeat?: MaskRepeatProperty | MaskRepeatProperty[];\\n  \\n  maskSize?: MaskSizeProperty<TLength> | MaskSizeProperty<TLength>[];\\n  \\n  maskType?: MaskTypeProperty | MaskTypeProperty[];\\n  \\n  maxBlockSize?: MaxBlockSizeProperty<TLength> | MaxBlockSizeProperty<TLength>[];\\n  \\n  maxHeight?: MaxHeightProperty<TLength> | MaxHeightProperty<TLength>[];\\n  \\n  maxInlineSize?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[];\\n  \\n  maxLines?: MaxLinesProperty | MaxLinesProperty[];\\n  \\n  maxWidth?: MaxWidthProperty<TLength> | MaxWidthProperty<TLength>[];\\n  \\n  minBlockSize?: MinBlockSizeProperty<TLength> | MinBlockSizeProperty<TLength>[];\\n  \\n  minHeight?: MinHeightProperty<TLength> | MinHeightProperty<TLength>[];\\n  \\n  minInlineSize?: MinInlineSizeProperty<TLength> | MinInlineSizeProperty<TLength>[];\\n  \\n  minWidth?: MinWidthProperty<TLength> | MinWidthProperty<TLength>[];\\n  \\n  mixBlendMode?: MixBlendModeProperty | MixBlendModeProperty[];\\n  \\n  motionDistance?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[];\\n  \\n  motionPath?: OffsetPathProperty | OffsetPathProperty[];\\n  \\n  motionRotation?: OffsetRotateProperty | OffsetRotateProperty[];\\n  \\n  objectFit?: ObjectFitProperty | ObjectFitProperty[];\\n  \\n  objectPosition?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[];\\n  \\n  offsetAnchor?: OffsetAnchorProperty<TLength> | OffsetAnchorProperty<TLength>[];\\n  \\n  offsetDistance?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[];\\n  \\n  offsetPath?: OffsetPathProperty | OffsetPathProperty[];\\n  \\n  offsetRotate?: OffsetRotateProperty | OffsetRotateProperty[];\\n  \\n  offsetRotation?: OffsetRotateProperty | OffsetRotateProperty[];\\n  \\n  opacity?: OpacityProperty | OpacityProperty[];\\n  \\n  order?: GlobalsNumber | GlobalsNumber[];\\n  \\n  orphans?: GlobalsNumber | GlobalsNumber[];\\n  \\n  outlineColor?: OutlineColorProperty | OutlineColorProperty[];\\n  \\n  outlineOffset?: OutlineOffsetProperty<TLength> | OutlineOffsetProperty<TLength>[];\\n  \\n  outlineStyle?: OutlineStyleProperty | OutlineStyleProperty[];\\n  \\n  outlineWidth?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[];\\n  \\n  overflowAnchor?: OverflowAnchorProperty | OverflowAnchorProperty[];\\n  \\n  overflowBlock?: OverflowBlockProperty | OverflowBlockProperty[];\\n  \\n  overflowClipBox?: OverflowClipBoxProperty | OverflowClipBoxProperty[];\\n  \\n  overflowInline?: OverflowInlineProperty | OverflowInlineProperty[];\\n  \\n  overflowWrap?: OverflowWrapProperty | OverflowWrapProperty[];\\n  \\n  overflowX?: OverflowXProperty | OverflowXProperty[];\\n  \\n  overflowY?: OverflowYProperty | OverflowYProperty[];\\n  \\n  overscrollBehavior?: OverscrollBehaviorProperty | OverscrollBehaviorProperty[];\\n  \\n  overscrollBehaviorBlock?: OverscrollBehaviorBlockProperty | OverscrollBehaviorBlockProperty[];\\n  \\n  overscrollBehaviorInline?: OverscrollBehaviorInlineProperty | OverscrollBehaviorInlineProperty[];\\n  \\n  overscrollBehaviorX?: OverscrollBehaviorXProperty | OverscrollBehaviorXProperty[];\\n  \\n  overscrollBehaviorY?: OverscrollBehaviorYProperty | OverscrollBehaviorYProperty[];\\n  \\n  paddingBlock?: PaddingBlockProperty<TLength> | PaddingBlockProperty<TLength>[];\\n  \\n  paddingBlockEnd?: PaddingBlockEndProperty<TLength> | PaddingBlockEndProperty<TLength>[];\\n  \\n  paddingBlockStart?: PaddingBlockStartProperty<TLength> | PaddingBlockStartProperty<TLength>[];\\n  \\n  paddingBottom?: PaddingBottomProperty<TLength> | PaddingBottomProperty<TLength>[];\\n  \\n  paddingInline?: PaddingInlineProperty<TLength> | PaddingInlineProperty<TLength>[];\\n  \\n  paddingInlineEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[];\\n  \\n  paddingInlineStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[];\\n  \\n  paddingLeft?: PaddingLeftProperty<TLength> | PaddingLeftProperty<TLength>[];\\n  \\n  paddingRight?: PaddingRightProperty<TLength> | PaddingRightProperty<TLength>[];\\n  \\n  paddingTop?: PaddingTopProperty<TLength> | PaddingTopProperty<TLength>[];\\n  \\n  pageBreakAfter?: PageBreakAfterProperty | PageBreakAfterProperty[];\\n  \\n  pageBreakBefore?: PageBreakBeforeProperty | PageBreakBeforeProperty[];\\n  \\n  pageBreakInside?: PageBreakInsideProperty | PageBreakInsideProperty[];\\n  \\n  paintOrder?: PaintOrderProperty | PaintOrderProperty[];\\n  \\n  perspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[];\\n  \\n  perspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[];\\n  \\n  placeContent?: PlaceContentProperty | PlaceContentProperty[];\\n  \\n  pointerEvents?: PointerEventsProperty | PointerEventsProperty[];\\n  \\n  position?: PositionProperty | PositionProperty[];\\n  \\n  quotes?: QuotesProperty | QuotesProperty[];\\n  \\n  resize?: ResizeProperty | ResizeProperty[];\\n  \\n  right?: RightProperty<TLength> | RightProperty<TLength>[];\\n  \\n  rotate?: RotateProperty | RotateProperty[];\\n  \\n  rowGap?: RowGapProperty<TLength> | RowGapProperty<TLength>[];\\n  \\n  rubyAlign?: RubyAlignProperty | RubyAlignProperty[];\\n  \\n  rubyMerge?: RubyMergeProperty | RubyMergeProperty[];\\n  \\n  rubyPosition?: RubyPositionProperty | RubyPositionProperty[];\\n  \\n  scale?: ScaleProperty | ScaleProperty[];\\n  \\n  scrollBehavior?: ScrollBehaviorProperty | ScrollBehaviorProperty[];\\n  \\n  scrollMargin?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[];\\n  \\n  scrollMarginBlock?: ScrollMarginBlockProperty<TLength> | ScrollMarginBlockProperty<TLength>[];\\n  \\n  scrollMarginBlockEnd?: ScrollMarginBlockEndProperty<TLength> | ScrollMarginBlockEndProperty<TLength>[];\\n  \\n  scrollMarginBlockStart?: ScrollMarginBlockStartProperty<TLength> | ScrollMarginBlockStartProperty<TLength>[];\\n  \\n  scrollMarginBottom?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[];\\n  \\n  scrollMarginInline?: ScrollMarginInlineProperty<TLength> | ScrollMarginInlineProperty<TLength>[];\\n  \\n  scrollMarginInlineEnd?: ScrollMarginInlineEndProperty<TLength> | ScrollMarginInlineEndProperty<TLength>[];\\n  \\n  scrollMarginInlineStart?: ScrollMarginInlineStartProperty<TLength> | ScrollMarginInlineStartProperty<TLength>[];\\n  \\n  scrollMarginLeft?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[];\\n  \\n  scrollMarginRight?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[];\\n  \\n  scrollMarginTop?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[];\\n  \\n  scrollPadding?: ScrollPaddingProperty<TLength> | ScrollPaddingProperty<TLength>[];\\n  \\n  scrollPaddingBlock?: ScrollPaddingBlockProperty<TLength> | ScrollPaddingBlockProperty<TLength>[];\\n  \\n  scrollPaddingBlockEnd?: ScrollPaddingBlockEndProperty<TLength> | ScrollPaddingBlockEndProperty<TLength>[];\\n  \\n  scrollPaddingBlockStart?: ScrollPaddingBlockStartProperty<TLength> | ScrollPaddingBlockStartProperty<TLength>[];\\n  \\n  scrollPaddingBottom?: ScrollPaddingBottomProperty<TLength> | ScrollPaddingBottomProperty<TLength>[];\\n  \\n  scrollPaddingInline?: ScrollPaddingInlineProperty<TLength> | ScrollPaddingInlineProperty<TLength>[];\\n  \\n  scrollPaddingInlineEnd?: ScrollPaddingInlineEndProperty<TLength> | ScrollPaddingInlineEndProperty<TLength>[];\\n  \\n  scrollPaddingInlineStart?: ScrollPaddingInlineStartProperty<TLength> | ScrollPaddingInlineStartProperty<TLength>[];\\n  \\n  scrollPaddingLeft?: ScrollPaddingLeftProperty<TLength> | ScrollPaddingLeftProperty<TLength>[];\\n  \\n  scrollPaddingRight?: ScrollPaddingRightProperty<TLength> | ScrollPaddingRightProperty<TLength>[];\\n  \\n  scrollPaddingTop?: ScrollPaddingTopProperty<TLength> | ScrollPaddingTopProperty<TLength>[];\\n  \\n  scrollSnapAlign?: ScrollSnapAlignProperty | ScrollSnapAlignProperty[];\\n  \\n  scrollSnapMargin?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[];\\n  \\n  scrollSnapMarginBottom?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[];\\n  \\n  scrollSnapMarginLeft?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[];\\n  \\n  scrollSnapMarginRight?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[];\\n  \\n  scrollSnapMarginTop?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[];\\n  \\n  scrollSnapStop?: ScrollSnapStopProperty | ScrollSnapStopProperty[];\\n  \\n  scrollSnapType?: ScrollSnapTypeProperty | ScrollSnapTypeProperty[];\\n  \\n  scrollbarColor?: ScrollbarColorProperty | ScrollbarColorProperty[];\\n  \\n  scrollbarWidth?: ScrollbarWidthProperty | ScrollbarWidthProperty[];\\n  \\n  shapeImageThreshold?: ShapeImageThresholdProperty | ShapeImageThresholdProperty[];\\n  \\n  shapeMargin?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[];\\n  \\n  shapeOutside?: ShapeOutsideProperty | ShapeOutsideProperty[];\\n  \\n  tabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[];\\n  \\n  tableLayout?: TableLayoutProperty | TableLayoutProperty[];\\n  \\n  textAlign?: TextAlignProperty | TextAlignProperty[];\\n  \\n  textAlignLast?: TextAlignLastProperty | TextAlignLastProperty[];\\n  \\n  textCombineUpright?: TextCombineUprightProperty | TextCombineUprightProperty[];\\n  \\n  textDecorationColor?: TextDecorationColorProperty | TextDecorationColorProperty[];\\n  \\n  textDecorationLine?: TextDecorationLineProperty | TextDecorationLineProperty[];\\n  \\n  textDecorationSkip?: TextDecorationSkipProperty | TextDecorationSkipProperty[];\\n  \\n  textDecorationSkipInk?: TextDecorationSkipInkProperty | TextDecorationSkipInkProperty[];\\n  \\n  textDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[];\\n  \\n  textDecorationThickness?: TextDecorationThicknessProperty<TLength> | TextDecorationThicknessProperty<TLength>[];\\n  \\n  textDecorationWidth?: TextDecorationThicknessProperty<TLength> | TextDecorationThicknessProperty<TLength>[];\\n  \\n  textEmphasisColor?: TextEmphasisColorProperty | TextEmphasisColorProperty[];\\n  \\n  textEmphasisPosition?: GlobalsString | GlobalsString[];\\n  \\n  textEmphasisStyle?: TextEmphasisStyleProperty | TextEmphasisStyleProperty[];\\n  \\n  textIndent?: TextIndentProperty<TLength> | TextIndentProperty<TLength>[];\\n  \\n  textJustify?: TextJustifyProperty | TextJustifyProperty[];\\n  \\n  textOrientation?: TextOrientationProperty | TextOrientationProperty[];\\n  \\n  textOverflow?: TextOverflowProperty | TextOverflowProperty[];\\n  \\n  textRendering?: TextRenderingProperty | TextRenderingProperty[];\\n  \\n  textShadow?: TextShadowProperty | TextShadowProperty[];\\n  \\n  textSizeAdjust?: TextSizeAdjustProperty | TextSizeAdjustProperty[];\\n  \\n  textTransform?: TextTransformProperty | TextTransformProperty[];\\n  \\n  textUnderlineOffset?: TextUnderlineOffsetProperty<TLength> | TextUnderlineOffsetProperty<TLength>[];\\n  \\n  textUnderlinePosition?: TextUnderlinePositionProperty | TextUnderlinePositionProperty[];\\n  \\n  top?: TopProperty<TLength> | TopProperty<TLength>[];\\n  \\n  touchAction?: TouchActionProperty | TouchActionProperty[];\\n  \\n  transform?: TransformProperty | TransformProperty[];\\n  \\n  transformBox?: TransformBoxProperty | TransformBoxProperty[];\\n  \\n  transformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  transformStyle?: TransformStyleProperty | TransformStyleProperty[];\\n  \\n  transitionDelay?: GlobalsString | GlobalsString[];\\n  \\n  transitionDuration?: GlobalsString | GlobalsString[];\\n  \\n  transitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  transitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  translate?: TranslateProperty<TLength> | TranslateProperty<TLength>[];\\n  \\n  unicodeBidi?: UnicodeBidiProperty | UnicodeBidiProperty[];\\n  \\n  userSelect?: UserSelectProperty | UserSelectProperty[];\\n  \\n  verticalAlign?: VerticalAlignProperty<TLength> | VerticalAlignProperty<TLength>[];\\n  \\n  visibility?: VisibilityProperty | VisibilityProperty[];\\n  \\n  whiteSpace?: WhiteSpaceProperty | WhiteSpaceProperty[];\\n  \\n  widows?: GlobalsNumber | GlobalsNumber[];\\n  \\n  width?: WidthProperty<TLength> | WidthProperty<TLength>[];\\n  \\n  willChange?: WillChangeProperty | WillChangeProperty[];\\n  \\n  wordBreak?: WordBreakProperty | WordBreakProperty[];\\n  \\n  wordSpacing?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[];\\n  \\n  wordWrap?: WordWrapProperty | WordWrapProperty[];\\n  \\n  writingMode?: WritingModeProperty | WritingModeProperty[];\\n  \\n  zIndex?: ZIndexProperty | ZIndexProperty[];\\n  \\n  zoom?: ZoomProperty | ZoomProperty[];\\n}\\n\\nexport interface StandardShorthandPropertiesFallback<TLength = string | 0> {\\n  \\n  all?: Globals | Globals[];\\n  \\n  animation?: AnimationProperty | AnimationProperty[];\\n  \\n  background?: BackgroundProperty<TLength> | BackgroundProperty<TLength>[];\\n  \\n  border?: BorderProperty<TLength> | BorderProperty<TLength>[];\\n  \\n  borderBlock?: BorderBlockProperty<TLength> | BorderBlockProperty<TLength>[];\\n  \\n  borderBlockEnd?: BorderBlockEndProperty<TLength> | BorderBlockEndProperty<TLength>[];\\n  \\n  borderBlockStart?: BorderBlockStartProperty<TLength> | BorderBlockStartProperty<TLength>[];\\n  \\n  borderBottom?: BorderBottomProperty<TLength> | BorderBottomProperty<TLength>[];\\n  \\n  borderColor?: BorderColorProperty | BorderColorProperty[];\\n  \\n  borderImage?: BorderImageProperty | BorderImageProperty[];\\n  \\n  borderInline?: BorderInlineProperty<TLength> | BorderInlineProperty<TLength>[];\\n  \\n  borderInlineEnd?: BorderInlineEndProperty<TLength> | BorderInlineEndProperty<TLength>[];\\n  \\n  borderInlineStart?: BorderInlineStartProperty<TLength> | BorderInlineStartProperty<TLength>[];\\n  \\n  borderLeft?: BorderLeftProperty<TLength> | BorderLeftProperty<TLength>[];\\n  \\n  borderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[];\\n  \\n  borderRight?: BorderRightProperty<TLength> | BorderRightProperty<TLength>[];\\n  \\n  borderStyle?: BorderStyleProperty | BorderStyleProperty[];\\n  \\n  borderTop?: BorderTopProperty<TLength> | BorderTopProperty<TLength>[];\\n  \\n  borderWidth?: BorderWidthProperty<TLength> | BorderWidthProperty<TLength>[];\\n  \\n  columnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[];\\n  \\n  columns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[];\\n  \\n  flex?: FlexProperty<TLength> | FlexProperty<TLength>[];\\n  \\n  flexFlow?: FlexFlowProperty | FlexFlowProperty[];\\n  \\n  font?: FontProperty | FontProperty[];\\n  \\n  gap?: GapProperty<TLength> | GapProperty<TLength>[];\\n  \\n  grid?: GridProperty | GridProperty[];\\n  \\n  gridArea?: GridAreaProperty | GridAreaProperty[];\\n  \\n  gridColumn?: GridColumnProperty | GridColumnProperty[];\\n  \\n  gridRow?: GridRowProperty | GridRowProperty[];\\n  \\n  gridTemplate?: GridTemplateProperty | GridTemplateProperty[];\\n  \\n  lineClamp?: LineClampProperty | LineClampProperty[];\\n  \\n  listStyle?: ListStyleProperty | ListStyleProperty[];\\n  \\n  margin?: MarginProperty<TLength> | MarginProperty<TLength>[];\\n  \\n  mask?: MaskProperty<TLength> | MaskProperty<TLength>[];\\n  \\n  maskBorder?: MaskBorderProperty | MaskBorderProperty[];\\n  \\n  motion?: OffsetProperty<TLength> | OffsetProperty<TLength>[];\\n  \\n  offset?: OffsetProperty<TLength> | OffsetProperty<TLength>[];\\n  \\n  outline?: OutlineProperty<TLength> | OutlineProperty<TLength>[];\\n  \\n  overflow?: OverflowProperty | OverflowProperty[];\\n  \\n  padding?: PaddingProperty<TLength> | PaddingProperty<TLength>[];\\n  \\n  placeItems?: PlaceItemsProperty | PlaceItemsProperty[];\\n  \\n  placeSelf?: PlaceSelfProperty | PlaceSelfProperty[];\\n  \\n  textDecoration?: TextDecorationProperty<TLength> | TextDecorationProperty<TLength>[];\\n  \\n  textEmphasis?: TextEmphasisProperty | TextEmphasisProperty[];\\n  \\n  transition?: TransitionProperty | TransitionProperty[];\\n}\\n\\nexport interface StandardPropertiesFallback<TLength = string | 0> extends StandardLonghandPropertiesFallback<TLength>, StandardShorthandPropertiesFallback<TLength> {}\\n\\nexport interface VendorLonghandPropertiesFallback<TLength = string | 0> {\\n  \\n  MozAnimationDelay?: GlobalsString | GlobalsString[];\\n  \\n  MozAnimationDirection?: AnimationDirectionProperty | AnimationDirectionProperty[];\\n  \\n  MozAnimationDuration?: GlobalsString | GlobalsString[];\\n  \\n  MozAnimationFillMode?: AnimationFillModeProperty | AnimationFillModeProperty[];\\n  \\n  MozAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[];\\n  \\n  MozAnimationName?: AnimationNameProperty | AnimationNameProperty[];\\n  \\n  MozAnimationPlayState?: AnimationPlayStateProperty | AnimationPlayStateProperty[];\\n  \\n  MozAnimationTimingFunction?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[];\\n  \\n  MozAppearance?: MozAppearanceProperty | MozAppearanceProperty[];\\n  \\n  MozBackfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[];\\n  \\n  MozBorderEndColor?: BorderInlineEndColorProperty | BorderInlineEndColorProperty[];\\n  \\n  MozBorderEndStyle?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[];\\n  \\n  MozBorderEndWidth?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[];\\n  \\n  MozBorderStartColor?: BorderInlineStartColorProperty | BorderInlineStartColorProperty[];\\n  \\n  MozBorderStartStyle?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[];\\n  \\n  MozBoxSizing?: BoxSizingProperty | BoxSizingProperty[];\\n  \\n  MozColumnCount?: ColumnCountProperty | ColumnCountProperty[];\\n  \\n  MozColumnFill?: ColumnFillProperty | ColumnFillProperty[];\\n  \\n  MozColumnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[];\\n  \\n  MozColumnRuleColor?: ColumnRuleColorProperty | ColumnRuleColorProperty[];\\n  \\n  MozColumnRuleStyle?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[];\\n  \\n  MozColumnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[];\\n  \\n  MozColumnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[];\\n  \\n  MozContextProperties?: MozContextPropertiesProperty | MozContextPropertiesProperty[];\\n  \\n  MozFloatEdge?: MozFloatEdgeProperty | MozFloatEdgeProperty[];\\n  \\n  MozFontFeatureSettings?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[];\\n  \\n  MozFontLanguageOverride?: FontLanguageOverrideProperty | FontLanguageOverrideProperty[];\\n  \\n  MozForceBrokenImageIcon?: GlobalsNumber | GlobalsNumber[];\\n  \\n  MozHyphens?: HyphensProperty | HyphensProperty[];\\n  \\n  MozImageRegion?: MozImageRegionProperty | MozImageRegionProperty[];\\n  \\n  MozMarginEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[];\\n  \\n  MozMarginStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[];\\n  \\n  MozOrient?: MozOrientProperty | MozOrientProperty[];\\n  \\n  MozOutlineRadiusBottomleft?: MozOutlineRadiusBottomleftProperty<TLength> | MozOutlineRadiusBottomleftProperty<TLength>[];\\n  \\n  MozOutlineRadiusBottomright?: MozOutlineRadiusBottomrightProperty<TLength> | MozOutlineRadiusBottomrightProperty<TLength>[];\\n  \\n  MozOutlineRadiusTopleft?: MozOutlineRadiusTopleftProperty<TLength> | MozOutlineRadiusTopleftProperty<TLength>[];\\n  \\n  MozOutlineRadiusTopright?: MozOutlineRadiusToprightProperty<TLength> | MozOutlineRadiusToprightProperty<TLength>[];\\n  \\n  MozPaddingEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[];\\n  \\n  MozPaddingStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[];\\n  \\n  MozPerspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[];\\n  \\n  MozPerspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[];\\n  \\n  MozStackSizing?: MozStackSizingProperty | MozStackSizingProperty[];\\n  \\n  MozTabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[];\\n  \\n  MozTextSizeAdjust?: TextSizeAdjustProperty | TextSizeAdjustProperty[];\\n  \\n  MozTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  MozTransformStyle?: TransformStyleProperty | TransformStyleProperty[];\\n  \\n  MozTransitionDelay?: GlobalsString | GlobalsString[];\\n  \\n  MozTransitionDuration?: GlobalsString | GlobalsString[];\\n  \\n  MozTransitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  MozTransitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  MozUserFocus?: MozUserFocusProperty | MozUserFocusProperty[];\\n  \\n  MozUserModify?: MozUserModifyProperty | MozUserModifyProperty[];\\n  \\n  MozUserSelect?: UserSelectProperty | UserSelectProperty[];\\n  \\n  MozWindowDragging?: MozWindowDraggingProperty | MozWindowDraggingProperty[];\\n  \\n  msAccelerator?: MsAcceleratorProperty | MsAcceleratorProperty[];\\n  \\n  msAlignSelf?: AlignSelfProperty | AlignSelfProperty[];\\n  \\n  msBlockProgression?: MsBlockProgressionProperty | MsBlockProgressionProperty[];\\n  \\n  msContentZoomChaining?: MsContentZoomChainingProperty | MsContentZoomChainingProperty[];\\n  \\n  msContentZoomLimitMax?: GlobalsString | GlobalsString[];\\n  \\n  msContentZoomLimitMin?: GlobalsString | GlobalsString[];\\n  \\n  msContentZoomSnapPoints?: GlobalsString | GlobalsString[];\\n  \\n  msContentZoomSnapType?: MsContentZoomSnapTypeProperty | MsContentZoomSnapTypeProperty[];\\n  \\n  msContentZooming?: MsContentZoomingProperty | MsContentZoomingProperty[];\\n  \\n  msFilter?: GlobalsString | GlobalsString[];\\n  \\n  msFlexDirection?: FlexDirectionProperty | FlexDirectionProperty[];\\n  \\n  msFlexPositive?: GlobalsNumber | GlobalsNumber[];\\n  \\n  msFlowFrom?: MsFlowFromProperty | MsFlowFromProperty[];\\n  \\n  msFlowInto?: MsFlowIntoProperty | MsFlowIntoProperty[];\\n  \\n  msGridColumns?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[];\\n  \\n  msGridRows?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[];\\n  \\n  msHighContrastAdjust?: MsHighContrastAdjustProperty | MsHighContrastAdjustProperty[];\\n  \\n  msHyphenateLimitChars?: MsHyphenateLimitCharsProperty | MsHyphenateLimitCharsProperty[];\\n  \\n  msHyphenateLimitLines?: MsHyphenateLimitLinesProperty | MsHyphenateLimitLinesProperty[];\\n  \\n  msHyphenateLimitZone?: MsHyphenateLimitZoneProperty<TLength> | MsHyphenateLimitZoneProperty<TLength>[];\\n  \\n  msHyphens?: HyphensProperty | HyphensProperty[];\\n  \\n  msImeAlign?: MsImeAlignProperty | MsImeAlignProperty[];\\n  \\n  msLineBreak?: LineBreakProperty | LineBreakProperty[];\\n  \\n  msOrder?: GlobalsNumber | GlobalsNumber[];\\n  \\n  msOverflowStyle?: MsOverflowStyleProperty | MsOverflowStyleProperty[];\\n  \\n  msOverflowX?: OverflowXProperty | OverflowXProperty[];\\n  \\n  msOverflowY?: OverflowYProperty | OverflowYProperty[];\\n  \\n  msScrollChaining?: MsScrollChainingProperty | MsScrollChainingProperty[];\\n  \\n  msScrollLimitXMax?: MsScrollLimitXMaxProperty<TLength> | MsScrollLimitXMaxProperty<TLength>[];\\n  \\n  msScrollLimitXMin?: MsScrollLimitXMinProperty<TLength> | MsScrollLimitXMinProperty<TLength>[];\\n  \\n  msScrollLimitYMax?: MsScrollLimitYMaxProperty<TLength> | MsScrollLimitYMaxProperty<TLength>[];\\n  \\n  msScrollLimitYMin?: MsScrollLimitYMinProperty<TLength> | MsScrollLimitYMinProperty<TLength>[];\\n  \\n  msScrollRails?: MsScrollRailsProperty | MsScrollRailsProperty[];\\n  \\n  msScrollSnapPointsX?: GlobalsString | GlobalsString[];\\n  \\n  msScrollSnapPointsY?: GlobalsString | GlobalsString[];\\n  \\n  msScrollSnapType?: MsScrollSnapTypeProperty | MsScrollSnapTypeProperty[];\\n  \\n  msScrollTranslation?: MsScrollTranslationProperty | MsScrollTranslationProperty[];\\n  \\n  msScrollbar3dlightColor?: MsScrollbar3dlightColorProperty | MsScrollbar3dlightColorProperty[];\\n  \\n  msScrollbarArrowColor?: MsScrollbarArrowColorProperty | MsScrollbarArrowColorProperty[];\\n  \\n  msScrollbarBaseColor?: MsScrollbarBaseColorProperty | MsScrollbarBaseColorProperty[];\\n  \\n  msScrollbarDarkshadowColor?: MsScrollbarDarkshadowColorProperty | MsScrollbarDarkshadowColorProperty[];\\n  \\n  msScrollbarFaceColor?: MsScrollbarFaceColorProperty | MsScrollbarFaceColorProperty[];\\n  \\n  msScrollbarHighlightColor?: MsScrollbarHighlightColorProperty | MsScrollbarHighlightColorProperty[];\\n  \\n  msScrollbarShadowColor?: MsScrollbarShadowColorProperty | MsScrollbarShadowColorProperty[];\\n  \\n  msTextAutospace?: MsTextAutospaceProperty | MsTextAutospaceProperty[];\\n  \\n  msTextCombineHorizontal?: TextCombineUprightProperty | TextCombineUprightProperty[];\\n  \\n  msTextOverflow?: TextOverflowProperty | TextOverflowProperty[];\\n  \\n  msTouchAction?: TouchActionProperty | TouchActionProperty[];\\n  \\n  msTouchSelect?: MsTouchSelectProperty | MsTouchSelectProperty[];\\n  \\n  msTransform?: TransformProperty | TransformProperty[];\\n  \\n  msTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  msTransitionDelay?: GlobalsString | GlobalsString[];\\n  \\n  msTransitionDuration?: GlobalsString | GlobalsString[];\\n  \\n  msTransitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  msTransitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  msUserSelect?: MsUserSelectProperty | MsUserSelectProperty[];\\n  \\n  msWordBreak?: WordBreakProperty | WordBreakProperty[];\\n  \\n  msWrapFlow?: MsWrapFlowProperty | MsWrapFlowProperty[];\\n  \\n  msWrapMargin?: MsWrapMarginProperty<TLength> | MsWrapMarginProperty<TLength>[];\\n  \\n  msWrapThrough?: MsWrapThroughProperty | MsWrapThroughProperty[];\\n  \\n  msWritingMode?: WritingModeProperty | WritingModeProperty[];\\n  \\n  OObjectFit?: ObjectFitProperty | ObjectFitProperty[];\\n  \\n  OObjectPosition?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[];\\n  \\n  OTabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[];\\n  \\n  OTextOverflow?: TextOverflowProperty | TextOverflowProperty[];\\n  \\n  OTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  WebkitAlignContent?: AlignContentProperty | AlignContentProperty[];\\n  \\n  WebkitAlignItems?: AlignItemsProperty | AlignItemsProperty[];\\n  \\n  WebkitAlignSelf?: AlignSelfProperty | AlignSelfProperty[];\\n  \\n  WebkitAnimationDelay?: GlobalsString | GlobalsString[];\\n  \\n  WebkitAnimationDirection?: AnimationDirectionProperty | AnimationDirectionProperty[];\\n  \\n  WebkitAnimationDuration?: GlobalsString | GlobalsString[];\\n  \\n  WebkitAnimationFillMode?: AnimationFillModeProperty | AnimationFillModeProperty[];\\n  \\n  WebkitAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[];\\n  \\n  WebkitAnimationName?: AnimationNameProperty | AnimationNameProperty[];\\n  \\n  WebkitAnimationPlayState?: AnimationPlayStateProperty | AnimationPlayStateProperty[];\\n  \\n  WebkitAnimationTimingFunction?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[];\\n  \\n  WebkitAppearance?: WebkitAppearanceProperty | WebkitAppearanceProperty[];\\n  \\n  WebkitBackdropFilter?: BackdropFilterProperty | BackdropFilterProperty[];\\n  \\n  WebkitBackfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[];\\n  \\n  WebkitBackgroundClip?: BackgroundClipProperty | BackgroundClipProperty[];\\n  \\n  WebkitBackgroundOrigin?: BackgroundOriginProperty | BackgroundOriginProperty[];\\n  \\n  WebkitBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[];\\n  \\n  WebkitBorderBeforeColor?: WebkitBorderBeforeColorProperty | WebkitBorderBeforeColorProperty[];\\n  \\n  WebkitBorderBeforeStyle?: WebkitBorderBeforeStyleProperty | WebkitBorderBeforeStyleProperty[];\\n  \\n  WebkitBorderBeforeWidth?: WebkitBorderBeforeWidthProperty<TLength> | WebkitBorderBeforeWidthProperty<TLength>[];\\n  \\n  WebkitBorderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[];\\n  \\n  WebkitBorderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[];\\n  \\n  WebkitBorderImageSlice?: BorderImageSliceProperty | BorderImageSliceProperty[];\\n  \\n  WebkitBorderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[];\\n  \\n  WebkitBorderTopRightRadius?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[];\\n  \\n  WebkitBoxDecorationBreak?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[];\\n  \\n  WebkitBoxReflect?: WebkitBoxReflectProperty<TLength> | WebkitBoxReflectProperty<TLength>[];\\n  \\n  WebkitBoxShadow?: BoxShadowProperty | BoxShadowProperty[];\\n  \\n  WebkitBoxSizing?: BoxSizingProperty | BoxSizingProperty[];\\n  \\n  WebkitClipPath?: ClipPathProperty | ClipPathProperty[];\\n  \\n  WebkitColorAdjust?: ColorAdjustProperty | ColorAdjustProperty[];\\n  \\n  WebkitColumnCount?: ColumnCountProperty | ColumnCountProperty[];\\n  \\n  WebkitColumnFill?: ColumnFillProperty | ColumnFillProperty[];\\n  \\n  WebkitColumnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[];\\n  \\n  WebkitColumnRuleColor?: ColumnRuleColorProperty | ColumnRuleColorProperty[];\\n  \\n  WebkitColumnRuleStyle?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[];\\n  \\n  WebkitColumnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[];\\n  \\n  WebkitColumnSpan?: ColumnSpanProperty | ColumnSpanProperty[];\\n  \\n  WebkitColumnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[];\\n  \\n  WebkitFilter?: FilterProperty | FilterProperty[];\\n  \\n  WebkitFlexBasis?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[];\\n  \\n  WebkitFlexDirection?: FlexDirectionProperty | FlexDirectionProperty[];\\n  \\n  WebkitFlexGrow?: GlobalsNumber | GlobalsNumber[];\\n  \\n  WebkitFlexShrink?: GlobalsNumber | GlobalsNumber[];\\n  \\n  WebkitFlexWrap?: FlexWrapProperty | FlexWrapProperty[];\\n  \\n  WebkitFontFeatureSettings?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[];\\n  \\n  WebkitFontKerning?: FontKerningProperty | FontKerningProperty[];\\n  \\n  WebkitFontVariantLigatures?: FontVariantLigaturesProperty | FontVariantLigaturesProperty[];\\n  \\n  WebkitHyphens?: HyphensProperty | HyphensProperty[];\\n  \\n  WebkitJustifyContent?: JustifyContentProperty | JustifyContentProperty[];\\n  \\n  WebkitLineBreak?: LineBreakProperty | LineBreakProperty[];\\n  \\n  WebkitLineClamp?: WebkitLineClampProperty | WebkitLineClampProperty[];\\n  \\n  WebkitMarginEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[];\\n  \\n  WebkitMarginStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[];\\n  \\n  WebkitMaskAttachment?: WebkitMaskAttachmentProperty | WebkitMaskAttachmentProperty[];\\n  \\n  WebkitMaskClip?: WebkitMaskClipProperty | WebkitMaskClipProperty[];\\n  \\n  WebkitMaskComposite?: WebkitMaskCompositeProperty | WebkitMaskCompositeProperty[];\\n  \\n  WebkitMaskImage?: WebkitMaskImageProperty | WebkitMaskImageProperty[];\\n  \\n  WebkitMaskOrigin?: WebkitMaskOriginProperty | WebkitMaskOriginProperty[];\\n  \\n  WebkitMaskPosition?: WebkitMaskPositionProperty<TLength> | WebkitMaskPositionProperty<TLength>[];\\n  \\n  WebkitMaskPositionX?: WebkitMaskPositionXProperty<TLength> | WebkitMaskPositionXProperty<TLength>[];\\n  \\n  WebkitMaskPositionY?: WebkitMaskPositionYProperty<TLength> | WebkitMaskPositionYProperty<TLength>[];\\n  \\n  WebkitMaskRepeat?: WebkitMaskRepeatProperty | WebkitMaskRepeatProperty[];\\n  \\n  WebkitMaskRepeatX?: WebkitMaskRepeatXProperty | WebkitMaskRepeatXProperty[];\\n  \\n  WebkitMaskRepeatY?: WebkitMaskRepeatYProperty | WebkitMaskRepeatYProperty[];\\n  \\n  WebkitMaskSize?: WebkitMaskSizeProperty<TLength> | WebkitMaskSizeProperty<TLength>[];\\n  \\n  WebkitMaxInlineSize?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[];\\n  \\n  WebkitOrder?: GlobalsNumber | GlobalsNumber[];\\n  \\n  WebkitOverflowScrolling?: WebkitOverflowScrollingProperty | WebkitOverflowScrollingProperty[];\\n  \\n  WebkitPaddingEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[];\\n  \\n  WebkitPaddingStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[];\\n  \\n  WebkitPerspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[];\\n  \\n  WebkitPerspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[];\\n  \\n  WebkitScrollSnapType?: ScrollSnapTypeProperty | ScrollSnapTypeProperty[];\\n  \\n  WebkitShapeMargin?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[];\\n  \\n  WebkitTapHighlightColor?: WebkitTapHighlightColorProperty | WebkitTapHighlightColorProperty[];\\n  \\n  WebkitTextCombine?: TextCombineUprightProperty | TextCombineUprightProperty[];\\n  \\n  WebkitTextDecorationColor?: TextDecorationColorProperty | TextDecorationColorProperty[];\\n  \\n  WebkitTextDecorationLine?: TextDecorationLineProperty | TextDecorationLineProperty[];\\n  \\n  WebkitTextDecorationSkip?: TextDecorationSkipProperty | TextDecorationSkipProperty[];\\n  \\n  WebkitTextDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[];\\n  \\n  WebkitTextEmphasisColor?: TextEmphasisColorProperty | TextEmphasisColorProperty[];\\n  \\n  WebkitTextEmphasisPosition?: GlobalsString | GlobalsString[];\\n  \\n  WebkitTextEmphasisStyle?: TextEmphasisStyleProperty | TextEmphasisStyleProperty[];\\n  \\n  WebkitTextFillColor?: WebkitTextFillColorProperty | WebkitTextFillColorProperty[];\\n  \\n  WebkitTextOrientation?: TextOrientationProperty | TextOrientationProperty[];\\n  \\n  WebkitTextSizeAdjust?: TextSizeAdjustProperty | TextSizeAdjustProperty[];\\n  \\n  WebkitTextStrokeColor?: WebkitTextStrokeColorProperty | WebkitTextStrokeColorProperty[];\\n  \\n  WebkitTextStrokeWidth?: WebkitTextStrokeWidthProperty<TLength> | WebkitTextStrokeWidthProperty<TLength>[];\\n  \\n  WebkitTouchCallout?: WebkitTouchCalloutProperty | WebkitTouchCalloutProperty[];\\n  \\n  WebkitTransform?: TransformProperty | TransformProperty[];\\n  \\n  WebkitTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  WebkitTransformStyle?: TransformStyleProperty | TransformStyleProperty[];\\n  \\n  WebkitTransitionDelay?: GlobalsString | GlobalsString[];\\n  \\n  WebkitTransitionDuration?: GlobalsString | GlobalsString[];\\n  \\n  WebkitTransitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  WebkitTransitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  WebkitUserModify?: WebkitUserModifyProperty | WebkitUserModifyProperty[];\\n  \\n  WebkitUserSelect?: UserSelectProperty | UserSelectProperty[];\\n  \\n  WebkitWritingMode?: WritingModeProperty | WritingModeProperty[];\\n  \\n  WebkittextUnderlinePosition?: TextUnderlinePositionProperty | TextUnderlinePositionProperty[];\\n}\\n\\nexport interface VendorShorthandPropertiesFallback<TLength = string | 0> {\\n  \\n  MozAnimation?: AnimationProperty | AnimationProperty[];\\n  \\n  MozBorderImage?: BorderImageProperty | BorderImageProperty[];\\n  \\n  MozColumnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[];\\n  \\n  MozColumns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[];\\n  \\n  MozTransition?: TransitionProperty | TransitionProperty[];\\n  \\n  msContentZoomLimit?: GlobalsString | GlobalsString[];\\n  \\n  msContentZoomSnap?: MsContentZoomSnapProperty | MsContentZoomSnapProperty[];\\n  \\n  msFlex?: FlexProperty<TLength> | FlexProperty<TLength>[];\\n  \\n  msScrollLimit?: GlobalsString | GlobalsString[];\\n  \\n  msScrollSnapX?: GlobalsString | GlobalsString[];\\n  \\n  msScrollSnapY?: GlobalsString | GlobalsString[];\\n  \\n  msTransition?: TransitionProperty | TransitionProperty[];\\n  \\n  WebkitAnimation?: AnimationProperty | AnimationProperty[];\\n  \\n  WebkitBorderBefore?: WebkitBorderBeforeProperty<TLength> | WebkitBorderBeforeProperty<TLength>[];\\n  \\n  WebkitBorderImage?: BorderImageProperty | BorderImageProperty[];\\n  \\n  WebkitBorderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[];\\n  \\n  WebkitColumnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[];\\n  \\n  WebkitColumns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[];\\n  \\n  WebkitFlex?: FlexProperty<TLength> | FlexProperty<TLength>[];\\n  \\n  WebkitFlexFlow?: FlexFlowProperty | FlexFlowProperty[];\\n  \\n  WebkitMask?: WebkitMaskProperty<TLength> | WebkitMaskProperty<TLength>[];\\n  \\n  WebkitTextEmphasis?: TextEmphasisProperty | TextEmphasisProperty[];\\n  \\n  WebkitTextStroke?: WebkitTextStrokeProperty<TLength> | WebkitTextStrokeProperty<TLength>[];\\n  \\n  WebkitTransition?: TransitionProperty | TransitionProperty[];\\n}\\n\\nexport interface VendorPropertiesFallback<TLength = string | 0> extends VendorLonghandPropertiesFallback<TLength>, VendorShorthandPropertiesFallback<TLength> {}\\n\\nexport interface ObsoletePropertiesFallback<TLength = string | 0> {\\n  \\n  boxAlign?: BoxAlignProperty | BoxAlignProperty[];\\n  \\n  boxDirection?: BoxDirectionProperty | BoxDirectionProperty[];\\n  \\n  boxFlex?: GlobalsNumber | GlobalsNumber[];\\n  \\n  boxFlexGroup?: GlobalsNumber | GlobalsNumber[];\\n  \\n  boxLines?: BoxLinesProperty | BoxLinesProperty[];\\n  \\n  boxOrdinalGroup?: GlobalsNumber | GlobalsNumber[];\\n  \\n  boxOrient?: BoxOrientProperty | BoxOrientProperty[];\\n  \\n  boxPack?: BoxPackProperty | BoxPackProperty[];\\n  \\n  clip?: ClipProperty | ClipProperty[];\\n  \\n  fontVariantAlternates?: FontVariantAlternatesProperty | FontVariantAlternatesProperty[];\\n  \\n  gridColumnGap?: GridColumnGapProperty<TLength> | GridColumnGapProperty<TLength>[];\\n  \\n  gridGap?: GridGapProperty<TLength> | GridGapProperty<TLength>[];\\n  \\n  gridRowGap?: GridRowGapProperty<TLength> | GridRowGapProperty<TLength>[];\\n  \\n  imeMode?: ImeModeProperty | ImeModeProperty[];\\n  \\n  offsetBlock?: InsetBlockProperty<TLength> | InsetBlockProperty<TLength>[];\\n  \\n  offsetBlockEnd?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[];\\n  \\n  offsetBlockStart?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[];\\n  \\n  offsetInline?: InsetInlineProperty<TLength> | InsetInlineProperty<TLength>[];\\n  \\n  offsetInlineEnd?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[];\\n  \\n  offsetInlineStart?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[];\\n  \\n  scrollSnapCoordinate?: ScrollSnapCoordinateProperty<TLength> | ScrollSnapCoordinateProperty<TLength>[];\\n  \\n  scrollSnapDestination?: ScrollSnapDestinationProperty<TLength> | ScrollSnapDestinationProperty<TLength>[];\\n  \\n  scrollSnapPointsX?: ScrollSnapPointsXProperty | ScrollSnapPointsXProperty[];\\n  \\n  scrollSnapPointsY?: ScrollSnapPointsYProperty | ScrollSnapPointsYProperty[];\\n  \\n  scrollSnapTypeX?: ScrollSnapTypeXProperty | ScrollSnapTypeXProperty[];\\n  \\n  scrollSnapTypeY?: ScrollSnapTypeYProperty | ScrollSnapTypeYProperty[];\\n  \\n  scrollbarTrackColor?: MsScrollbarTrackColorProperty | MsScrollbarTrackColorProperty[];\\n  \\n  textCombineHorizontal?: TextCombineUprightProperty | TextCombineUprightProperty[];\\n  \\n  KhtmlBoxAlign?: BoxAlignProperty | BoxAlignProperty[];\\n  \\n  KhtmlBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[];\\n  \\n  KhtmlBoxFlex?: GlobalsNumber | GlobalsNumber[];\\n  \\n  KhtmlBoxFlexGroup?: GlobalsNumber | GlobalsNumber[];\\n  \\n  KhtmlBoxLines?: BoxLinesProperty | BoxLinesProperty[];\\n  \\n  KhtmlBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[];\\n  \\n  KhtmlBoxOrient?: BoxOrientProperty | BoxOrientProperty[];\\n  \\n  KhtmlBoxPack?: BoxPackProperty | BoxPackProperty[];\\n  \\n  KhtmlLineBreak?: LineBreakProperty | LineBreakProperty[];\\n  \\n  KhtmlOpacity?: OpacityProperty | OpacityProperty[];\\n  \\n  KhtmlUserSelect?: UserSelectProperty | UserSelectProperty[];\\n  \\n  MozBackgroundClip?: BackgroundClipProperty | BackgroundClipProperty[];\\n  \\n  MozBackgroundInlinePolicy?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[];\\n  \\n  MozBackgroundOrigin?: BackgroundOriginProperty | BackgroundOriginProperty[];\\n  \\n  MozBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[];\\n  \\n  MozBinding?: MozBindingProperty | MozBindingProperty[];\\n  \\n  MozBorderBottomColors?: MozBorderBottomColorsProperty | MozBorderBottomColorsProperty[];\\n  \\n  MozBorderLeftColors?: MozBorderLeftColorsProperty | MozBorderLeftColorsProperty[];\\n  \\n  MozBorderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[];\\n  \\n  MozBorderRadiusBottomleft?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[];\\n  \\n  MozBorderRadiusBottomright?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[];\\n  \\n  MozBorderRadiusTopleft?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[];\\n  \\n  MozBorderRadiusTopright?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[];\\n  \\n  MozBorderRightColors?: MozBorderRightColorsProperty | MozBorderRightColorsProperty[];\\n  \\n  MozBorderTopColors?: MozBorderTopColorsProperty | MozBorderTopColorsProperty[];\\n  \\n  MozBoxAlign?: BoxAlignProperty | BoxAlignProperty[];\\n  \\n  MozBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[];\\n  \\n  MozBoxFlex?: GlobalsNumber | GlobalsNumber[];\\n  \\n  MozBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[];\\n  \\n  MozBoxOrient?: BoxOrientProperty | BoxOrientProperty[];\\n  \\n  MozBoxPack?: BoxPackProperty | BoxPackProperty[];\\n  \\n  MozBoxShadow?: BoxShadowProperty | BoxShadowProperty[];\\n  \\n  MozOpacity?: OpacityProperty | OpacityProperty[];\\n  \\n  MozOutline?: OutlineProperty<TLength> | OutlineProperty<TLength>[];\\n  \\n  MozOutlineColor?: OutlineColorProperty | OutlineColorProperty[];\\n  \\n  MozOutlineRadius?: MozOutlineRadiusProperty<TLength> | MozOutlineRadiusProperty<TLength>[];\\n  \\n  MozOutlineStyle?: OutlineStyleProperty | OutlineStyleProperty[];\\n  \\n  MozOutlineWidth?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[];\\n  \\n  MozTextAlignLast?: TextAlignLastProperty | TextAlignLastProperty[];\\n  \\n  MozTextBlink?: MozTextBlinkProperty | MozTextBlinkProperty[];\\n  \\n  MozTextDecorationColor?: TextDecorationColorProperty | TextDecorationColorProperty[];\\n  \\n  MozTextDecorationLine?: TextDecorationLineProperty | TextDecorationLineProperty[];\\n  \\n  MozTextDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[];\\n  \\n  MozUserInput?: MozUserInputProperty | MozUserInputProperty[];\\n  \\n  MozWindowShadow?: MozWindowShadowProperty | MozWindowShadowProperty[];\\n  \\n  msImeMode?: ImeModeProperty | ImeModeProperty[];\\n  \\n  msScrollbarTrackColor?: MsScrollbarTrackColorProperty | MsScrollbarTrackColorProperty[];\\n  \\n  OAnimation?: AnimationProperty | AnimationProperty[];\\n  \\n  OAnimationDelay?: GlobalsString | GlobalsString[];\\n  \\n  OAnimationDirection?: AnimationDirectionProperty | AnimationDirectionProperty[];\\n  \\n  OAnimationDuration?: GlobalsString | GlobalsString[];\\n  \\n  OAnimationFillMode?: AnimationFillModeProperty | AnimationFillModeProperty[];\\n  \\n  OAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[];\\n  \\n  OAnimationName?: AnimationNameProperty | AnimationNameProperty[];\\n  \\n  OAnimationPlayState?: AnimationPlayStateProperty | AnimationPlayStateProperty[];\\n  \\n  OAnimationTimingFunction?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[];\\n  \\n  OBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[];\\n  \\n  OBorderImage?: BorderImageProperty | BorderImageProperty[];\\n  \\n  OTransform?: TransformProperty | TransformProperty[];\\n  \\n  OTransition?: TransitionProperty | TransitionProperty[];\\n  \\n  OTransitionDelay?: GlobalsString | GlobalsString[];\\n  \\n  OTransitionDuration?: GlobalsString | GlobalsString[];\\n  \\n  OTransitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  OTransitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  WebkitBoxAlign?: BoxAlignProperty | BoxAlignProperty[];\\n  \\n  WebkitBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[];\\n  \\n  WebkitBoxFlex?: GlobalsNumber | GlobalsNumber[];\\n  \\n  WebkitBoxFlexGroup?: GlobalsNumber | GlobalsNumber[];\\n  \\n  WebkitBoxLines?: BoxLinesProperty | BoxLinesProperty[];\\n  \\n  WebkitBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[];\\n  \\n  WebkitBoxOrient?: BoxOrientProperty | BoxOrientProperty[];\\n  \\n  WebkitBoxPack?: BoxPackProperty | BoxPackProperty[];\\n  \\n  WebkitScrollSnapPointsX?: ScrollSnapPointsXProperty | ScrollSnapPointsXProperty[];\\n  \\n  WebkitScrollSnapPointsY?: ScrollSnapPointsYProperty | ScrollSnapPointsYProperty[];\\n}\\n\\nexport interface SvgPropertiesFallback<TLength = string | 0> {\\n  alignmentBaseline?: AlignmentBaselineProperty | AlignmentBaselineProperty[];\\n  baselineShift?: BaselineShiftProperty<TLength> | BaselineShiftProperty<TLength>[];\\n  clip?: ClipProperty | ClipProperty[];\\n  clipPath?: ClipPathProperty | ClipPathProperty[];\\n  clipRule?: ClipRuleProperty | ClipRuleProperty[];\\n  color?: ColorProperty | ColorProperty[];\\n  colorInterpolation?: ColorInterpolationProperty | ColorInterpolationProperty[];\\n  colorRendering?: ColorRenderingProperty | ColorRenderingProperty[];\\n  cursor?: CursorProperty | CursorProperty[];\\n  direction?: DirectionProperty | DirectionProperty[];\\n  display?: DisplayProperty | DisplayProperty[];\\n  dominantBaseline?: DominantBaselineProperty | DominantBaselineProperty[];\\n  fill?: FillProperty | FillProperty[];\\n  fillOpacity?: GlobalsNumber | GlobalsNumber[];\\n  fillRule?: FillRuleProperty | FillRuleProperty[];\\n  filter?: FilterProperty | FilterProperty[];\\n  floodColor?: FloodColorProperty | FloodColorProperty[];\\n  floodOpacity?: GlobalsNumber | GlobalsNumber[];\\n  font?: FontProperty | FontProperty[];\\n  fontFamily?: FontFamilyProperty | FontFamilyProperty[];\\n  fontSize?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[];\\n  fontSizeAdjust?: FontSizeAdjustProperty | FontSizeAdjustProperty[];\\n  fontStretch?: FontStretchProperty | FontStretchProperty[];\\n  fontStyle?: FontStyleProperty | FontStyleProperty[];\\n  fontVariant?: FontVariantProperty | FontVariantProperty[];\\n  fontWeight?: FontWeightProperty | FontWeightProperty[];\\n  glyphOrientationVertical?: GlyphOrientationVerticalProperty | GlyphOrientationVerticalProperty[];\\n  imageRendering?: ImageRenderingProperty | ImageRenderingProperty[];\\n  letterSpacing?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[];\\n  lightingColor?: LightingColorProperty | LightingColorProperty[];\\n  lineHeight?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[];\\n  marker?: MarkerProperty | MarkerProperty[];\\n  markerEnd?: MarkerEndProperty | MarkerEndProperty[];\\n  markerMid?: MarkerMidProperty | MarkerMidProperty[];\\n  markerStart?: MarkerStartProperty | MarkerStartProperty[];\\n  mask?: MaskProperty<TLength> | MaskProperty<TLength>[];\\n  opacity?: OpacityProperty | OpacityProperty[];\\n  overflow?: OverflowProperty | OverflowProperty[];\\n  paintOrder?: PaintOrderProperty | PaintOrderProperty[];\\n  pointerEvents?: PointerEventsProperty | PointerEventsProperty[];\\n  shapeRendering?: ShapeRenderingProperty | ShapeRenderingProperty[];\\n  stopColor?: StopColorProperty | StopColorProperty[];\\n  stopOpacity?: GlobalsNumber | GlobalsNumber[];\\n  stroke?: StrokeProperty | StrokeProperty[];\\n  strokeDasharray?: StrokeDasharrayProperty<TLength> | StrokeDasharrayProperty<TLength>[];\\n  strokeDashoffset?: StrokeDashoffsetProperty<TLength> | StrokeDashoffsetProperty<TLength>[];\\n  strokeLinecap?: StrokeLinecapProperty | StrokeLinecapProperty[];\\n  strokeLinejoin?: StrokeLinejoinProperty | StrokeLinejoinProperty[];\\n  strokeMiterlimit?: GlobalsNumber | GlobalsNumber[];\\n  strokeOpacity?: GlobalsNumber | GlobalsNumber[];\\n  strokeWidth?: StrokeWidthProperty<TLength> | StrokeWidthProperty<TLength>[];\\n  textAnchor?: TextAnchorProperty | TextAnchorProperty[];\\n  textDecoration?: TextDecorationProperty<TLength> | TextDecorationProperty<TLength>[];\\n  textRendering?: TextRenderingProperty | TextRenderingProperty[];\\n  unicodeBidi?: UnicodeBidiProperty | UnicodeBidiProperty[];\\n  vectorEffect?: VectorEffectProperty | VectorEffectProperty[];\\n  visibility?: VisibilityProperty | VisibilityProperty[];\\n  whiteSpace?: WhiteSpaceProperty | WhiteSpaceProperty[];\\n  wordSpacing?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[];\\n  writingMode?: WritingModeProperty | WritingModeProperty[];\\n}\\n\\nexport interface PropertiesFallback<TLength = string | 0>\\n  extends StandardPropertiesFallback<TLength>,\\n    VendorPropertiesFallback<TLength>,\\n    ObsoletePropertiesFallback<TLength>,\\n    SvgPropertiesFallback<TLength> {}\\n\\nexport interface StandardLonghandPropertiesHyphenFallback<TLength = string | 0> {\\n  \\n  \\"align-content\\"?: AlignContentProperty | AlignContentProperty[];\\n  \\n  \\"align-items\\"?: AlignItemsProperty | AlignItemsProperty[];\\n  \\n  \\"align-self\\"?: AlignSelfProperty | AlignSelfProperty[];\\n  \\n  \\"animation-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"animation-direction\\"?: AnimationDirectionProperty | AnimationDirectionProperty[];\\n  \\n  \\"animation-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"animation-fill-mode\\"?: AnimationFillModeProperty | AnimationFillModeProperty[];\\n  \\n  \\"animation-iteration-count\\"?: AnimationIterationCountProperty | AnimationIterationCountProperty[];\\n  \\n  \\"animation-name\\"?: AnimationNameProperty | AnimationNameProperty[];\\n  \\n  \\"animation-play-state\\"?: AnimationPlayStateProperty | AnimationPlayStateProperty[];\\n  \\n  \\"animation-timing-function\\"?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[];\\n  \\n  appearance?: AppearanceProperty | AppearanceProperty[];\\n  \\n  \\"aspect-ratio\\"?: AspectRatioProperty | AspectRatioProperty[];\\n  \\n  \\"backdrop-filter\\"?: BackdropFilterProperty | BackdropFilterProperty[];\\n  \\n  \\"backface-visibility\\"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[];\\n  \\n  \\"background-attachment\\"?: BackgroundAttachmentProperty | BackgroundAttachmentProperty[];\\n  \\n  \\"background-blend-mode\\"?: BackgroundBlendModeProperty | BackgroundBlendModeProperty[];\\n  \\n  \\"background-clip\\"?: BackgroundClipProperty | BackgroundClipProperty[];\\n  \\n  \\"background-color\\"?: BackgroundColorProperty | BackgroundColorProperty[];\\n  \\n  \\"background-image\\"?: BackgroundImageProperty | BackgroundImageProperty[];\\n  \\n  \\"background-origin\\"?: BackgroundOriginProperty | BackgroundOriginProperty[];\\n  \\n  \\"background-position\\"?: BackgroundPositionProperty<TLength> | BackgroundPositionProperty<TLength>[];\\n  \\n  \\"background-position-x\\"?: BackgroundPositionXProperty<TLength> | BackgroundPositionXProperty<TLength>[];\\n  \\n  \\"background-position-y\\"?: BackgroundPositionYProperty<TLength> | BackgroundPositionYProperty<TLength>[];\\n  \\n  \\"background-repeat\\"?: BackgroundRepeatProperty | BackgroundRepeatProperty[];\\n  \\n  \\"background-size\\"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[];\\n  \\n  \\"block-overflow\\"?: BlockOverflowProperty | BlockOverflowProperty[];\\n  \\n  \\"block-size\\"?: BlockSizeProperty<TLength> | BlockSizeProperty<TLength>[];\\n  \\n  \\"border-block-color\\"?: BorderBlockColorProperty | BorderBlockColorProperty[];\\n  \\n  \\"border-block-end-color\\"?: BorderBlockEndColorProperty | BorderBlockEndColorProperty[];\\n  \\n  \\"border-block-end-style\\"?: BorderBlockEndStyleProperty | BorderBlockEndStyleProperty[];\\n  \\n  \\"border-block-end-width\\"?: BorderBlockEndWidthProperty<TLength> | BorderBlockEndWidthProperty<TLength>[];\\n  \\n  \\"border-block-start-color\\"?: BorderBlockStartColorProperty | BorderBlockStartColorProperty[];\\n  \\n  \\"border-block-start-style\\"?: BorderBlockStartStyleProperty | BorderBlockStartStyleProperty[];\\n  \\n  \\"border-block-start-width\\"?: BorderBlockStartWidthProperty<TLength> | BorderBlockStartWidthProperty<TLength>[];\\n  \\n  \\"border-block-style\\"?: BorderBlockStyleProperty | BorderBlockStyleProperty[];\\n  \\n  \\"border-block-width\\"?: BorderBlockWidthProperty<TLength> | BorderBlockWidthProperty<TLength>[];\\n  \\n  \\"border-bottom-color\\"?: BorderBottomColorProperty | BorderBottomColorProperty[];\\n  \\n  \\"border-bottom-left-radius\\"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[];\\n  \\n  \\"border-bottom-right-radius\\"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[];\\n  \\n  \\"border-bottom-style\\"?: BorderBottomStyleProperty | BorderBottomStyleProperty[];\\n  \\n  \\"border-bottom-width\\"?: BorderBottomWidthProperty<TLength> | BorderBottomWidthProperty<TLength>[];\\n  \\n  \\"border-collapse\\"?: BorderCollapseProperty | BorderCollapseProperty[];\\n  \\n  \\"border-end-end-radius\\"?: BorderEndEndRadiusProperty<TLength> | BorderEndEndRadiusProperty<TLength>[];\\n  \\n  \\"border-end-start-radius\\"?: BorderEndStartRadiusProperty<TLength> | BorderEndStartRadiusProperty<TLength>[];\\n  \\n  \\"border-image-outset\\"?: BorderImageOutsetProperty<TLength> | BorderImageOutsetProperty<TLength>[];\\n  \\n  \\"border-image-repeat\\"?: BorderImageRepeatProperty | BorderImageRepeatProperty[];\\n  \\n  \\"border-image-slice\\"?: BorderImageSliceProperty | BorderImageSliceProperty[];\\n  \\n  \\"border-image-source\\"?: BorderImageSourceProperty | BorderImageSourceProperty[];\\n  \\n  \\"border-image-width\\"?: BorderImageWidthProperty<TLength> | BorderImageWidthProperty<TLength>[];\\n  \\n  \\"border-inline-color\\"?: BorderInlineColorProperty | BorderInlineColorProperty[];\\n  \\n  \\"border-inline-end-color\\"?: BorderInlineEndColorProperty | BorderInlineEndColorProperty[];\\n  \\n  \\"border-inline-end-style\\"?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[];\\n  \\n  \\"border-inline-end-width\\"?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[];\\n  \\n  \\"border-inline-start-color\\"?: BorderInlineStartColorProperty | BorderInlineStartColorProperty[];\\n  \\n  \\"border-inline-start-style\\"?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[];\\n  \\n  \\"border-inline-start-width\\"?: BorderInlineStartWidthProperty<TLength> | BorderInlineStartWidthProperty<TLength>[];\\n  \\n  \\"border-inline-style\\"?: BorderInlineStyleProperty | BorderInlineStyleProperty[];\\n  \\n  \\"border-inline-width\\"?: BorderInlineWidthProperty<TLength> | BorderInlineWidthProperty<TLength>[];\\n  \\n  \\"border-left-color\\"?: BorderLeftColorProperty | BorderLeftColorProperty[];\\n  \\n  \\"border-left-style\\"?: BorderLeftStyleProperty | BorderLeftStyleProperty[];\\n  \\n  \\"border-left-width\\"?: BorderLeftWidthProperty<TLength> | BorderLeftWidthProperty<TLength>[];\\n  \\n  \\"border-right-color\\"?: BorderRightColorProperty | BorderRightColorProperty[];\\n  \\n  \\"border-right-style\\"?: BorderRightStyleProperty | BorderRightStyleProperty[];\\n  \\n  \\"border-right-width\\"?: BorderRightWidthProperty<TLength> | BorderRightWidthProperty<TLength>[];\\n  \\n  \\"border-spacing\\"?: BorderSpacingProperty<TLength> | BorderSpacingProperty<TLength>[];\\n  \\n  \\"border-start-end-radius\\"?: BorderStartEndRadiusProperty<TLength> | BorderStartEndRadiusProperty<TLength>[];\\n  \\n  \\"border-start-start-radius\\"?: BorderStartStartRadiusProperty<TLength> | BorderStartStartRadiusProperty<TLength>[];\\n  \\n  \\"border-top-color\\"?: BorderTopColorProperty | BorderTopColorProperty[];\\n  \\n  \\"border-top-left-radius\\"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[];\\n  \\n  \\"border-top-right-radius\\"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[];\\n  \\n  \\"border-top-style\\"?: BorderTopStyleProperty | BorderTopStyleProperty[];\\n  \\n  \\"border-top-width\\"?: BorderTopWidthProperty<TLength> | BorderTopWidthProperty<TLength>[];\\n  \\n  bottom?: BottomProperty<TLength> | BottomProperty<TLength>[];\\n  \\n  \\"box-decoration-break\\"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[];\\n  \\n  \\"box-shadow\\"?: BoxShadowProperty | BoxShadowProperty[];\\n  \\n  \\"box-sizing\\"?: BoxSizingProperty | BoxSizingProperty[];\\n  \\n  \\"break-after\\"?: BreakAfterProperty | BreakAfterProperty[];\\n  \\n  \\"break-before\\"?: BreakBeforeProperty | BreakBeforeProperty[];\\n  \\n  \\"break-inside\\"?: BreakInsideProperty | BreakInsideProperty[];\\n  \\n  \\"caption-side\\"?: CaptionSideProperty | CaptionSideProperty[];\\n  \\n  \\"caret-color\\"?: CaretColorProperty | CaretColorProperty[];\\n  \\n  clear?: ClearProperty | ClearProperty[];\\n  \\n  \\"clip-path\\"?: ClipPathProperty | ClipPathProperty[];\\n  \\n  color?: ColorProperty | ColorProperty[];\\n  \\n  \\"color-adjust\\"?: ColorAdjustProperty | ColorAdjustProperty[];\\n  \\n  \\"column-count\\"?: ColumnCountProperty | ColumnCountProperty[];\\n  \\n  \\"column-fill\\"?: ColumnFillProperty | ColumnFillProperty[];\\n  \\n  \\"column-gap\\"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[];\\n  \\n  \\"column-rule-color\\"?: ColumnRuleColorProperty | ColumnRuleColorProperty[];\\n  \\n  \\"column-rule-style\\"?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[];\\n  \\n  \\"column-rule-width\\"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[];\\n  \\n  \\"column-span\\"?: ColumnSpanProperty | ColumnSpanProperty[];\\n  \\n  \\"column-width\\"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[];\\n  \\n  contain?: ContainProperty | ContainProperty[];\\n  \\n  content?: ContentProperty | ContentProperty[];\\n  \\n  \\"counter-increment\\"?: CounterIncrementProperty | CounterIncrementProperty[];\\n  \\n  \\"counter-reset\\"?: CounterResetProperty | CounterResetProperty[];\\n  \\n  \\"counter-set\\"?: CounterSetProperty | CounterSetProperty[];\\n  \\n  cursor?: CursorProperty | CursorProperty[];\\n  \\n  direction?: DirectionProperty | DirectionProperty[];\\n  \\n  display?: DisplayProperty | DisplayProperty[];\\n  \\n  \\"empty-cells\\"?: EmptyCellsProperty | EmptyCellsProperty[];\\n  \\n  filter?: FilterProperty | FilterProperty[];\\n  \\n  \\"flex-basis\\"?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[];\\n  \\n  \\"flex-direction\\"?: FlexDirectionProperty | FlexDirectionProperty[];\\n  \\n  \\"flex-grow\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"flex-shrink\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"flex-wrap\\"?: FlexWrapProperty | FlexWrapProperty[];\\n  \\n  float?: FloatProperty | FloatProperty[];\\n  \\n  \\"font-family\\"?: FontFamilyProperty | FontFamilyProperty[];\\n  \\n  \\"font-feature-settings\\"?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[];\\n  \\n  \\"font-kerning\\"?: FontKerningProperty | FontKerningProperty[];\\n  \\n  \\"font-language-override\\"?: FontLanguageOverrideProperty | FontLanguageOverrideProperty[];\\n  \\n  \\"font-optical-sizing\\"?: FontOpticalSizingProperty | FontOpticalSizingProperty[];\\n  \\n  \\"font-size\\"?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[];\\n  \\n  \\"font-size-adjust\\"?: FontSizeAdjustProperty | FontSizeAdjustProperty[];\\n  \\n  \\"font-stretch\\"?: FontStretchProperty | FontStretchProperty[];\\n  \\n  \\"font-style\\"?: FontStyleProperty | FontStyleProperty[];\\n  \\n  \\"font-synthesis\\"?: FontSynthesisProperty | FontSynthesisProperty[];\\n  \\n  \\"font-variant\\"?: FontVariantProperty | FontVariantProperty[];\\n  \\n  \\"font-variant-caps\\"?: FontVariantCapsProperty | FontVariantCapsProperty[];\\n  \\n  \\"font-variant-east-asian\\"?: FontVariantEastAsianProperty | FontVariantEastAsianProperty[];\\n  \\n  \\"font-variant-ligatures\\"?: FontVariantLigaturesProperty | FontVariantLigaturesProperty[];\\n  \\n  \\"font-variant-numeric\\"?: FontVariantNumericProperty | FontVariantNumericProperty[];\\n  \\n  \\"font-variant-position\\"?: FontVariantPositionProperty | FontVariantPositionProperty[];\\n  \\n  \\"font-variation-settings\\"?: FontVariationSettingsProperty | FontVariationSettingsProperty[];\\n  \\n  \\"font-weight\\"?: FontWeightProperty | FontWeightProperty[];\\n  \\n  \\"grid-auto-columns\\"?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[];\\n  \\n  \\"grid-auto-flow\\"?: GridAutoFlowProperty | GridAutoFlowProperty[];\\n  \\n  \\"grid-auto-rows\\"?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[];\\n  \\n  \\"grid-column-end\\"?: GridColumnEndProperty | GridColumnEndProperty[];\\n  \\n  \\"grid-column-start\\"?: GridColumnStartProperty | GridColumnStartProperty[];\\n  \\n  \\"grid-row-end\\"?: GridRowEndProperty | GridRowEndProperty[];\\n  \\n  \\"grid-row-start\\"?: GridRowStartProperty | GridRowStartProperty[];\\n  \\n  \\"grid-template-areas\\"?: GridTemplateAreasProperty | GridTemplateAreasProperty[];\\n  \\n  \\"grid-template-columns\\"?: GridTemplateColumnsProperty<TLength> | GridTemplateColumnsProperty<TLength>[];\\n  \\n  \\"grid-template-rows\\"?: GridTemplateRowsProperty<TLength> | GridTemplateRowsProperty<TLength>[];\\n  \\n  \\"hanging-punctuation\\"?: HangingPunctuationProperty | HangingPunctuationProperty[];\\n  \\n  height?: HeightProperty<TLength> | HeightProperty<TLength>[];\\n  \\n  hyphens?: HyphensProperty | HyphensProperty[];\\n  \\n  \\"image-orientation\\"?: ImageOrientationProperty | ImageOrientationProperty[];\\n  \\n  \\"image-rendering\\"?: ImageRenderingProperty | ImageRenderingProperty[];\\n  \\n  \\"image-resolution\\"?: ImageResolutionProperty | ImageResolutionProperty[];\\n  \\n  \\"initial-letter\\"?: InitialLetterProperty | InitialLetterProperty[];\\n  \\n  \\"inline-size\\"?: InlineSizeProperty<TLength> | InlineSizeProperty<TLength>[];\\n  \\n  inset?: InsetProperty<TLength> | InsetProperty<TLength>[];\\n  \\n  \\"inset-block\\"?: InsetBlockProperty<TLength> | InsetBlockProperty<TLength>[];\\n  \\n  \\"inset-block-end\\"?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[];\\n  \\n  \\"inset-block-start\\"?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[];\\n  \\n  \\"inset-inline\\"?: InsetInlineProperty<TLength> | InsetInlineProperty<TLength>[];\\n  \\n  \\"inset-inline-end\\"?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[];\\n  \\n  \\"inset-inline-start\\"?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[];\\n  \\n  isolation?: IsolationProperty | IsolationProperty[];\\n  \\n  \\"justify-content\\"?: JustifyContentProperty | JustifyContentProperty[];\\n  \\n  \\"justify-items\\"?: JustifyItemsProperty | JustifyItemsProperty[];\\n  \\n  \\"justify-self\\"?: JustifySelfProperty | JustifySelfProperty[];\\n  \\n  left?: LeftProperty<TLength> | LeftProperty<TLength>[];\\n  \\n  \\"letter-spacing\\"?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[];\\n  \\n  \\"line-break\\"?: LineBreakProperty | LineBreakProperty[];\\n  \\n  \\"line-height\\"?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[];\\n  \\n  \\"line-height-step\\"?: LineHeightStepProperty<TLength> | LineHeightStepProperty<TLength>[];\\n  \\n  \\"list-style-image\\"?: ListStyleImageProperty | ListStyleImageProperty[];\\n  \\n  \\"list-style-position\\"?: ListStylePositionProperty | ListStylePositionProperty[];\\n  \\n  \\"list-style-type\\"?: ListStyleTypeProperty | ListStyleTypeProperty[];\\n  \\n  \\"margin-block\\"?: MarginBlockProperty<TLength> | MarginBlockProperty<TLength>[];\\n  \\n  \\"margin-block-end\\"?: MarginBlockEndProperty<TLength> | MarginBlockEndProperty<TLength>[];\\n  \\n  \\"margin-block-start\\"?: MarginBlockStartProperty<TLength> | MarginBlockStartProperty<TLength>[];\\n  \\n  \\"margin-bottom\\"?: MarginBottomProperty<TLength> | MarginBottomProperty<TLength>[];\\n  \\n  \\"margin-inline\\"?: MarginInlineProperty<TLength> | MarginInlineProperty<TLength>[];\\n  \\n  \\"margin-inline-end\\"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[];\\n  \\n  \\"margin-inline-start\\"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[];\\n  \\n  \\"margin-left\\"?: MarginLeftProperty<TLength> | MarginLeftProperty<TLength>[];\\n  \\n  \\"margin-right\\"?: MarginRightProperty<TLength> | MarginRightProperty<TLength>[];\\n  \\n  \\"margin-top\\"?: MarginTopProperty<TLength> | MarginTopProperty<TLength>[];\\n  \\n  \\"mask-border-mode\\"?: MaskBorderModeProperty | MaskBorderModeProperty[];\\n  \\n  \\"mask-border-outset\\"?: MaskBorderOutsetProperty<TLength> | MaskBorderOutsetProperty<TLength>[];\\n  \\n  \\"mask-border-repeat\\"?: MaskBorderRepeatProperty | MaskBorderRepeatProperty[];\\n  \\n  \\"mask-border-slice\\"?: MaskBorderSliceProperty | MaskBorderSliceProperty[];\\n  \\n  \\"mask-border-source\\"?: MaskBorderSourceProperty | MaskBorderSourceProperty[];\\n  \\n  \\"mask-border-width\\"?: MaskBorderWidthProperty<TLength> | MaskBorderWidthProperty<TLength>[];\\n  \\n  \\"mask-clip\\"?: MaskClipProperty | MaskClipProperty[];\\n  \\n  \\"mask-composite\\"?: MaskCompositeProperty | MaskCompositeProperty[];\\n  \\n  \\"mask-image\\"?: MaskImageProperty | MaskImageProperty[];\\n  \\n  \\"mask-mode\\"?: MaskModeProperty | MaskModeProperty[];\\n  \\n  \\"mask-origin\\"?: MaskOriginProperty | MaskOriginProperty[];\\n  \\n  \\"mask-position\\"?: MaskPositionProperty<TLength> | MaskPositionProperty<TLength>[];\\n  \\n  \\"mask-repeat\\"?: MaskRepeatProperty | MaskRepeatProperty[];\\n  \\n  \\"mask-size\\"?: MaskSizeProperty<TLength> | MaskSizeProperty<TLength>[];\\n  \\n  \\"mask-type\\"?: MaskTypeProperty | MaskTypeProperty[];\\n  \\n  \\"max-block-size\\"?: MaxBlockSizeProperty<TLength> | MaxBlockSizeProperty<TLength>[];\\n  \\n  \\"max-height\\"?: MaxHeightProperty<TLength> | MaxHeightProperty<TLength>[];\\n  \\n  \\"max-inline-size\\"?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[];\\n  \\n  \\"max-lines\\"?: MaxLinesProperty | MaxLinesProperty[];\\n  \\n  \\"max-width\\"?: MaxWidthProperty<TLength> | MaxWidthProperty<TLength>[];\\n  \\n  \\"min-block-size\\"?: MinBlockSizeProperty<TLength> | MinBlockSizeProperty<TLength>[];\\n  \\n  \\"min-height\\"?: MinHeightProperty<TLength> | MinHeightProperty<TLength>[];\\n  \\n  \\"min-inline-size\\"?: MinInlineSizeProperty<TLength> | MinInlineSizeProperty<TLength>[];\\n  \\n  \\"min-width\\"?: MinWidthProperty<TLength> | MinWidthProperty<TLength>[];\\n  \\n  \\"mix-blend-mode\\"?: MixBlendModeProperty | MixBlendModeProperty[];\\n  \\n  \\"motion-distance\\"?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[];\\n  \\n  \\"motion-path\\"?: OffsetPathProperty | OffsetPathProperty[];\\n  \\n  \\"motion-rotation\\"?: OffsetRotateProperty | OffsetRotateProperty[];\\n  \\n  \\"object-fit\\"?: ObjectFitProperty | ObjectFitProperty[];\\n  \\n  \\"object-position\\"?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[];\\n  \\n  \\"offset-anchor\\"?: OffsetAnchorProperty<TLength> | OffsetAnchorProperty<TLength>[];\\n  \\n  \\"offset-distance\\"?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[];\\n  \\n  \\"offset-path\\"?: OffsetPathProperty | OffsetPathProperty[];\\n  \\n  \\"offset-rotate\\"?: OffsetRotateProperty | OffsetRotateProperty[];\\n  \\n  \\"offset-rotation\\"?: OffsetRotateProperty | OffsetRotateProperty[];\\n  \\n  opacity?: OpacityProperty | OpacityProperty[];\\n  \\n  order?: GlobalsNumber | GlobalsNumber[];\\n  \\n  orphans?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"outline-color\\"?: OutlineColorProperty | OutlineColorProperty[];\\n  \\n  \\"outline-offset\\"?: OutlineOffsetProperty<TLength> | OutlineOffsetProperty<TLength>[];\\n  \\n  \\"outline-style\\"?: OutlineStyleProperty | OutlineStyleProperty[];\\n  \\n  \\"outline-width\\"?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[];\\n  \\n  \\"overflow-anchor\\"?: OverflowAnchorProperty | OverflowAnchorProperty[];\\n  \\n  \\"overflow-block\\"?: OverflowBlockProperty | OverflowBlockProperty[];\\n  \\n  \\"overflow-clip-box\\"?: OverflowClipBoxProperty | OverflowClipBoxProperty[];\\n  \\n  \\"overflow-inline\\"?: OverflowInlineProperty | OverflowInlineProperty[];\\n  \\n  \\"overflow-wrap\\"?: OverflowWrapProperty | OverflowWrapProperty[];\\n  \\n  \\"overflow-x\\"?: OverflowXProperty | OverflowXProperty[];\\n  \\n  \\"overflow-y\\"?: OverflowYProperty | OverflowYProperty[];\\n  \\n  \\"overscroll-behavior\\"?: OverscrollBehaviorProperty | OverscrollBehaviorProperty[];\\n  \\n  \\"overscroll-behavior-block\\"?: OverscrollBehaviorBlockProperty | OverscrollBehaviorBlockProperty[];\\n  \\n  \\"overscroll-behavior-inline\\"?: OverscrollBehaviorInlineProperty | OverscrollBehaviorInlineProperty[];\\n  \\n  \\"overscroll-behavior-x\\"?: OverscrollBehaviorXProperty | OverscrollBehaviorXProperty[];\\n  \\n  \\"overscroll-behavior-y\\"?: OverscrollBehaviorYProperty | OverscrollBehaviorYProperty[];\\n  \\n  \\"padding-block\\"?: PaddingBlockProperty<TLength> | PaddingBlockProperty<TLength>[];\\n  \\n  \\"padding-block-end\\"?: PaddingBlockEndProperty<TLength> | PaddingBlockEndProperty<TLength>[];\\n  \\n  \\"padding-block-start\\"?: PaddingBlockStartProperty<TLength> | PaddingBlockStartProperty<TLength>[];\\n  \\n  \\"padding-bottom\\"?: PaddingBottomProperty<TLength> | PaddingBottomProperty<TLength>[];\\n  \\n  \\"padding-inline\\"?: PaddingInlineProperty<TLength> | PaddingInlineProperty<TLength>[];\\n  \\n  \\"padding-inline-end\\"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[];\\n  \\n  \\"padding-inline-start\\"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[];\\n  \\n  \\"padding-left\\"?: PaddingLeftProperty<TLength> | PaddingLeftProperty<TLength>[];\\n  \\n  \\"padding-right\\"?: PaddingRightProperty<TLength> | PaddingRightProperty<TLength>[];\\n  \\n  \\"padding-top\\"?: PaddingTopProperty<TLength> | PaddingTopProperty<TLength>[];\\n  \\n  \\"page-break-after\\"?: PageBreakAfterProperty | PageBreakAfterProperty[];\\n  \\n  \\"page-break-before\\"?: PageBreakBeforeProperty | PageBreakBeforeProperty[];\\n  \\n  \\"page-break-inside\\"?: PageBreakInsideProperty | PageBreakInsideProperty[];\\n  \\n  \\"paint-order\\"?: PaintOrderProperty | PaintOrderProperty[];\\n  \\n  perspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[];\\n  \\n  \\"perspective-origin\\"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[];\\n  \\n  \\"place-content\\"?: PlaceContentProperty | PlaceContentProperty[];\\n  \\n  \\"pointer-events\\"?: PointerEventsProperty | PointerEventsProperty[];\\n  \\n  position?: PositionProperty | PositionProperty[];\\n  \\n  quotes?: QuotesProperty | QuotesProperty[];\\n  \\n  resize?: ResizeProperty | ResizeProperty[];\\n  \\n  right?: RightProperty<TLength> | RightProperty<TLength>[];\\n  \\n  rotate?: RotateProperty | RotateProperty[];\\n  \\n  \\"row-gap\\"?: RowGapProperty<TLength> | RowGapProperty<TLength>[];\\n  \\n  \\"ruby-align\\"?: RubyAlignProperty | RubyAlignProperty[];\\n  \\n  \\"ruby-merge\\"?: RubyMergeProperty | RubyMergeProperty[];\\n  \\n  \\"ruby-position\\"?: RubyPositionProperty | RubyPositionProperty[];\\n  \\n  scale?: ScaleProperty | ScaleProperty[];\\n  \\n  \\"scroll-behavior\\"?: ScrollBehaviorProperty | ScrollBehaviorProperty[];\\n  \\n  \\"scroll-margin\\"?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[];\\n  \\n  \\"scroll-margin-block\\"?: ScrollMarginBlockProperty<TLength> | ScrollMarginBlockProperty<TLength>[];\\n  \\n  \\"scroll-margin-block-end\\"?: ScrollMarginBlockEndProperty<TLength> | ScrollMarginBlockEndProperty<TLength>[];\\n  \\n  \\"scroll-margin-block-start\\"?: ScrollMarginBlockStartProperty<TLength> | ScrollMarginBlockStartProperty<TLength>[];\\n  \\n  \\"scroll-margin-bottom\\"?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[];\\n  \\n  \\"scroll-margin-inline\\"?: ScrollMarginInlineProperty<TLength> | ScrollMarginInlineProperty<TLength>[];\\n  \\n  \\"scroll-margin-inline-end\\"?: ScrollMarginInlineEndProperty<TLength> | ScrollMarginInlineEndProperty<TLength>[];\\n  \\n  \\"scroll-margin-inline-start\\"?: ScrollMarginInlineStartProperty<TLength> | ScrollMarginInlineStartProperty<TLength>[];\\n  \\n  \\"scroll-margin-left\\"?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[];\\n  \\n  \\"scroll-margin-right\\"?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[];\\n  \\n  \\"scroll-margin-top\\"?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[];\\n  \\n  \\"scroll-padding\\"?: ScrollPaddingProperty<TLength> | ScrollPaddingProperty<TLength>[];\\n  \\n  \\"scroll-padding-block\\"?: ScrollPaddingBlockProperty<TLength> | ScrollPaddingBlockProperty<TLength>[];\\n  \\n  \\"scroll-padding-block-end\\"?: ScrollPaddingBlockEndProperty<TLength> | ScrollPaddingBlockEndProperty<TLength>[];\\n  \\n  \\"scroll-padding-block-start\\"?: ScrollPaddingBlockStartProperty<TLength> | ScrollPaddingBlockStartProperty<TLength>[];\\n  \\n  \\"scroll-padding-bottom\\"?: ScrollPaddingBottomProperty<TLength> | ScrollPaddingBottomProperty<TLength>[];\\n  \\n  \\"scroll-padding-inline\\"?: ScrollPaddingInlineProperty<TLength> | ScrollPaddingInlineProperty<TLength>[];\\n  \\n  \\"scroll-padding-inline-end\\"?: ScrollPaddingInlineEndProperty<TLength> | ScrollPaddingInlineEndProperty<TLength>[];\\n  \\n  \\"scroll-padding-inline-start\\"?: ScrollPaddingInlineStartProperty<TLength> | ScrollPaddingInlineStartProperty<TLength>[];\\n  \\n  \\"scroll-padding-left\\"?: ScrollPaddingLeftProperty<TLength> | ScrollPaddingLeftProperty<TLength>[];\\n  \\n  \\"scroll-padding-right\\"?: ScrollPaddingRightProperty<TLength> | ScrollPaddingRightProperty<TLength>[];\\n  \\n  \\"scroll-padding-top\\"?: ScrollPaddingTopProperty<TLength> | ScrollPaddingTopProperty<TLength>[];\\n  \\n  \\"scroll-snap-align\\"?: ScrollSnapAlignProperty | ScrollSnapAlignProperty[];\\n  \\n  \\"scroll-snap-margin\\"?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[];\\n  \\n  \\"scroll-snap-margin-bottom\\"?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[];\\n  \\n  \\"scroll-snap-margin-left\\"?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[];\\n  \\n  \\"scroll-snap-margin-right\\"?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[];\\n  \\n  \\"scroll-snap-margin-top\\"?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[];\\n  \\n  \\"scroll-snap-stop\\"?: ScrollSnapStopProperty | ScrollSnapStopProperty[];\\n  \\n  \\"scroll-snap-type\\"?: ScrollSnapTypeProperty | ScrollSnapTypeProperty[];\\n  \\n  \\"scrollbar-color\\"?: ScrollbarColorProperty | ScrollbarColorProperty[];\\n  \\n  \\"scrollbar-width\\"?: ScrollbarWidthProperty | ScrollbarWidthProperty[];\\n  \\n  \\"shape-image-threshold\\"?: ShapeImageThresholdProperty | ShapeImageThresholdProperty[];\\n  \\n  \\"shape-margin\\"?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[];\\n  \\n  \\"shape-outside\\"?: ShapeOutsideProperty | ShapeOutsideProperty[];\\n  \\n  \\"tab-size\\"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[];\\n  \\n  \\"table-layout\\"?: TableLayoutProperty | TableLayoutProperty[];\\n  \\n  \\"text-align\\"?: TextAlignProperty | TextAlignProperty[];\\n  \\n  \\"text-align-last\\"?: TextAlignLastProperty | TextAlignLastProperty[];\\n  \\n  \\"text-combine-upright\\"?: TextCombineUprightProperty | TextCombineUprightProperty[];\\n  \\n  \\"text-decoration-color\\"?: TextDecorationColorProperty | TextDecorationColorProperty[];\\n  \\n  \\"text-decoration-line\\"?: TextDecorationLineProperty | TextDecorationLineProperty[];\\n  \\n  \\"text-decoration-skip\\"?: TextDecorationSkipProperty | TextDecorationSkipProperty[];\\n  \\n  \\"text-decoration-skip-ink\\"?: TextDecorationSkipInkProperty | TextDecorationSkipInkProperty[];\\n  \\n  \\"text-decoration-style\\"?: TextDecorationStyleProperty | TextDecorationStyleProperty[];\\n  \\n  \\"text-decoration-thickness\\"?: TextDecorationThicknessProperty<TLength> | TextDecorationThicknessProperty<TLength>[];\\n  \\n  \\"text-decoration-width\\"?: TextDecorationThicknessProperty<TLength> | TextDecorationThicknessProperty<TLength>[];\\n  \\n  \\"text-emphasis-color\\"?: TextEmphasisColorProperty | TextEmphasisColorProperty[];\\n  \\n  \\"text-emphasis-position\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"text-emphasis-style\\"?: TextEmphasisStyleProperty | TextEmphasisStyleProperty[];\\n  \\n  \\"text-indent\\"?: TextIndentProperty<TLength> | TextIndentProperty<TLength>[];\\n  \\n  \\"text-justify\\"?: TextJustifyProperty | TextJustifyProperty[];\\n  \\n  \\"text-orientation\\"?: TextOrientationProperty | TextOrientationProperty[];\\n  \\n  \\"text-overflow\\"?: TextOverflowProperty | TextOverflowProperty[];\\n  \\n  \\"text-rendering\\"?: TextRenderingProperty | TextRenderingProperty[];\\n  \\n  \\"text-shadow\\"?: TextShadowProperty | TextShadowProperty[];\\n  \\n  \\"text-size-adjust\\"?: TextSizeAdjustProperty | TextSizeAdjustProperty[];\\n  \\n  \\"text-transform\\"?: TextTransformProperty | TextTransformProperty[];\\n  \\n  \\"text-underline-offset\\"?: TextUnderlineOffsetProperty<TLength> | TextUnderlineOffsetProperty<TLength>[];\\n  \\n  \\"text-underline-position\\"?: TextUnderlinePositionProperty | TextUnderlinePositionProperty[];\\n  \\n  top?: TopProperty<TLength> | TopProperty<TLength>[];\\n  \\n  \\"touch-action\\"?: TouchActionProperty | TouchActionProperty[];\\n  \\n  transform?: TransformProperty | TransformProperty[];\\n  \\n  \\"transform-box\\"?: TransformBoxProperty | TransformBoxProperty[];\\n  \\n  \\"transform-origin\\"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  \\"transform-style\\"?: TransformStyleProperty | TransformStyleProperty[];\\n  \\n  \\"transition-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"transition-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"transition-property\\"?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  \\"transition-timing-function\\"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  translate?: TranslateProperty<TLength> | TranslateProperty<TLength>[];\\n  \\n  \\"unicode-bidi\\"?: UnicodeBidiProperty | UnicodeBidiProperty[];\\n  \\n  \\"user-select\\"?: UserSelectProperty | UserSelectProperty[];\\n  \\n  \\"vertical-align\\"?: VerticalAlignProperty<TLength> | VerticalAlignProperty<TLength>[];\\n  \\n  visibility?: VisibilityProperty | VisibilityProperty[];\\n  \\n  \\"white-space\\"?: WhiteSpaceProperty | WhiteSpaceProperty[];\\n  \\n  widows?: GlobalsNumber | GlobalsNumber[];\\n  \\n  width?: WidthProperty<TLength> | WidthProperty<TLength>[];\\n  \\n  \\"will-change\\"?: WillChangeProperty | WillChangeProperty[];\\n  \\n  \\"word-break\\"?: WordBreakProperty | WordBreakProperty[];\\n  \\n  \\"word-spacing\\"?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[];\\n  \\n  \\"word-wrap\\"?: WordWrapProperty | WordWrapProperty[];\\n  \\n  \\"writing-mode\\"?: WritingModeProperty | WritingModeProperty[];\\n  \\n  \\"z-index\\"?: ZIndexProperty | ZIndexProperty[];\\n  \\n  zoom?: ZoomProperty | ZoomProperty[];\\n}\\n\\nexport interface StandardShorthandPropertiesHyphenFallback<TLength = string | 0> {\\n  \\n  all?: Globals | Globals[];\\n  \\n  animation?: AnimationProperty | AnimationProperty[];\\n  \\n  background?: BackgroundProperty<TLength> | BackgroundProperty<TLength>[];\\n  \\n  border?: BorderProperty<TLength> | BorderProperty<TLength>[];\\n  \\n  \\"border-block\\"?: BorderBlockProperty<TLength> | BorderBlockProperty<TLength>[];\\n  \\n  \\"border-block-end\\"?: BorderBlockEndProperty<TLength> | BorderBlockEndProperty<TLength>[];\\n  \\n  \\"border-block-start\\"?: BorderBlockStartProperty<TLength> | BorderBlockStartProperty<TLength>[];\\n  \\n  \\"border-bottom\\"?: BorderBottomProperty<TLength> | BorderBottomProperty<TLength>[];\\n  \\n  \\"border-color\\"?: BorderColorProperty | BorderColorProperty[];\\n  \\n  \\"border-image\\"?: BorderImageProperty | BorderImageProperty[];\\n  \\n  \\"border-inline\\"?: BorderInlineProperty<TLength> | BorderInlineProperty<TLength>[];\\n  \\n  \\"border-inline-end\\"?: BorderInlineEndProperty<TLength> | BorderInlineEndProperty<TLength>[];\\n  \\n  \\"border-inline-start\\"?: BorderInlineStartProperty<TLength> | BorderInlineStartProperty<TLength>[];\\n  \\n  \\"border-left\\"?: BorderLeftProperty<TLength> | BorderLeftProperty<TLength>[];\\n  \\n  \\"border-radius\\"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[];\\n  \\n  \\"border-right\\"?: BorderRightProperty<TLength> | BorderRightProperty<TLength>[];\\n  \\n  \\"border-style\\"?: BorderStyleProperty | BorderStyleProperty[];\\n  \\n  \\"border-top\\"?: BorderTopProperty<TLength> | BorderTopProperty<TLength>[];\\n  \\n  \\"border-width\\"?: BorderWidthProperty<TLength> | BorderWidthProperty<TLength>[];\\n  \\n  \\"column-rule\\"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[];\\n  \\n  columns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[];\\n  \\n  flex?: FlexProperty<TLength> | FlexProperty<TLength>[];\\n  \\n  \\"flex-flow\\"?: FlexFlowProperty | FlexFlowProperty[];\\n  \\n  font?: FontProperty | FontProperty[];\\n  \\n  gap?: GapProperty<TLength> | GapProperty<TLength>[];\\n  \\n  grid?: GridProperty | GridProperty[];\\n  \\n  \\"grid-area\\"?: GridAreaProperty | GridAreaProperty[];\\n  \\n  \\"grid-column\\"?: GridColumnProperty | GridColumnProperty[];\\n  \\n  \\"grid-row\\"?: GridRowProperty | GridRowProperty[];\\n  \\n  \\"grid-template\\"?: GridTemplateProperty | GridTemplateProperty[];\\n  \\n  \\"line-clamp\\"?: LineClampProperty | LineClampProperty[];\\n  \\n  \\"list-style\\"?: ListStyleProperty | ListStyleProperty[];\\n  \\n  margin?: MarginProperty<TLength> | MarginProperty<TLength>[];\\n  \\n  mask?: MaskProperty<TLength> | MaskProperty<TLength>[];\\n  \\n  \\"mask-border\\"?: MaskBorderProperty | MaskBorderProperty[];\\n  \\n  motion?: OffsetProperty<TLength> | OffsetProperty<TLength>[];\\n  \\n  offset?: OffsetProperty<TLength> | OffsetProperty<TLength>[];\\n  \\n  outline?: OutlineProperty<TLength> | OutlineProperty<TLength>[];\\n  \\n  overflow?: OverflowProperty | OverflowProperty[];\\n  \\n  padding?: PaddingProperty<TLength> | PaddingProperty<TLength>[];\\n  \\n  \\"place-items\\"?: PlaceItemsProperty | PlaceItemsProperty[];\\n  \\n  \\"place-self\\"?: PlaceSelfProperty | PlaceSelfProperty[];\\n  \\n  \\"text-decoration\\"?: TextDecorationProperty<TLength> | TextDecorationProperty<TLength>[];\\n  \\n  \\"text-emphasis\\"?: TextEmphasisProperty | TextEmphasisProperty[];\\n  \\n  transition?: TransitionProperty | TransitionProperty[];\\n}\\n\\nexport interface StandardPropertiesHyphenFallback<TLength = string | 0>\\n  extends StandardLonghandPropertiesHyphenFallback<TLength>,\\n    StandardShorthandPropertiesHyphenFallback<TLength> {}\\n\\nexport interface VendorLonghandPropertiesHyphenFallback<TLength = string | 0> {\\n  \\n  \\"-moz-animation-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-moz-animation-direction\\"?: AnimationDirectionProperty | AnimationDirectionProperty[];\\n  \\n  \\"-moz-animation-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-moz-animation-fill-mode\\"?: AnimationFillModeProperty | AnimationFillModeProperty[];\\n  \\n  \\"-moz-animation-iteration-count\\"?: AnimationIterationCountProperty | AnimationIterationCountProperty[];\\n  \\n  \\"-moz-animation-name\\"?: AnimationNameProperty | AnimationNameProperty[];\\n  \\n  \\"-moz-animation-play-state\\"?: AnimationPlayStateProperty | AnimationPlayStateProperty[];\\n  \\n  \\"-moz-animation-timing-function\\"?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[];\\n  \\n  \\"-moz-appearance\\"?: MozAppearanceProperty | MozAppearanceProperty[];\\n  \\n  \\"-moz-backface-visibility\\"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[];\\n  \\n  \\"-moz-border-end-color\\"?: BorderInlineEndColorProperty | BorderInlineEndColorProperty[];\\n  \\n  \\"-moz-border-end-style\\"?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[];\\n  \\n  \\"-moz-border-end-width\\"?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[];\\n  \\n  \\"-moz-border-start-color\\"?: BorderInlineStartColorProperty | BorderInlineStartColorProperty[];\\n  \\n  \\"-moz-border-start-style\\"?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[];\\n  \\n  \\"-moz-box-sizing\\"?: BoxSizingProperty | BoxSizingProperty[];\\n  \\n  \\"-moz-column-count\\"?: ColumnCountProperty | ColumnCountProperty[];\\n  \\n  \\"-moz-column-fill\\"?: ColumnFillProperty | ColumnFillProperty[];\\n  \\n  \\"-moz-column-gap\\"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[];\\n  \\n  \\"-moz-column-rule-color\\"?: ColumnRuleColorProperty | ColumnRuleColorProperty[];\\n  \\n  \\"-moz-column-rule-style\\"?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[];\\n  \\n  \\"-moz-column-rule-width\\"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[];\\n  \\n  \\"-moz-column-width\\"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[];\\n  \\n  \\"-moz-context-properties\\"?: MozContextPropertiesProperty | MozContextPropertiesProperty[];\\n  \\n  \\"-moz-float-edge\\"?: MozFloatEdgeProperty | MozFloatEdgeProperty[];\\n  \\n  \\"-moz-font-feature-settings\\"?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[];\\n  \\n  \\"-moz-font-language-override\\"?: FontLanguageOverrideProperty | FontLanguageOverrideProperty[];\\n  \\n  \\"-moz-force-broken-image-icon\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-moz-hyphens\\"?: HyphensProperty | HyphensProperty[];\\n  \\n  \\"-moz-image-region\\"?: MozImageRegionProperty | MozImageRegionProperty[];\\n  \\n  \\"-moz-margin-end\\"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[];\\n  \\n  \\"-moz-margin-start\\"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[];\\n  \\n  \\"-moz-orient\\"?: MozOrientProperty | MozOrientProperty[];\\n  \\n  \\"-moz-outline-radius-bottomleft\\"?: MozOutlineRadiusBottomleftProperty<TLength> | MozOutlineRadiusBottomleftProperty<TLength>[];\\n  \\n  \\"-moz-outline-radius-bottomright\\"?: MozOutlineRadiusBottomrightProperty<TLength> | MozOutlineRadiusBottomrightProperty<TLength>[];\\n  \\n  \\"-moz-outline-radius-topleft\\"?: MozOutlineRadiusTopleftProperty<TLength> | MozOutlineRadiusTopleftProperty<TLength>[];\\n  \\n  \\"-moz-outline-radius-topright\\"?: MozOutlineRadiusToprightProperty<TLength> | MozOutlineRadiusToprightProperty<TLength>[];\\n  \\n  \\"-moz-padding-end\\"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[];\\n  \\n  \\"-moz-padding-start\\"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[];\\n  \\n  \\"-moz-perspective\\"?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[];\\n  \\n  \\"-moz-perspective-origin\\"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[];\\n  \\n  \\"-moz-stack-sizing\\"?: MozStackSizingProperty | MozStackSizingProperty[];\\n  \\n  \\"-moz-tab-size\\"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[];\\n  \\n  \\"-moz-text-size-adjust\\"?: TextSizeAdjustProperty | TextSizeAdjustProperty[];\\n  \\n  \\"-moz-transform-origin\\"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  \\"-moz-transform-style\\"?: TransformStyleProperty | TransformStyleProperty[];\\n  \\n  \\"-moz-transition-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-moz-transition-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-moz-transition-property\\"?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  \\"-moz-transition-timing-function\\"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  \\"-moz-user-focus\\"?: MozUserFocusProperty | MozUserFocusProperty[];\\n  \\n  \\"-moz-user-modify\\"?: MozUserModifyProperty | MozUserModifyProperty[];\\n  \\n  \\"-moz-user-select\\"?: UserSelectProperty | UserSelectProperty[];\\n  \\n  \\"-moz-window-dragging\\"?: MozWindowDraggingProperty | MozWindowDraggingProperty[];\\n  \\n  \\"-ms-accelerator\\"?: MsAcceleratorProperty | MsAcceleratorProperty[];\\n  \\n  \\"-ms-align-self\\"?: AlignSelfProperty | AlignSelfProperty[];\\n  \\n  \\"-ms-block-progression\\"?: MsBlockProgressionProperty | MsBlockProgressionProperty[];\\n  \\n  \\"-ms-content-zoom-chaining\\"?: MsContentZoomChainingProperty | MsContentZoomChainingProperty[];\\n  \\n  \\"-ms-content-zoom-limit-max\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-content-zoom-limit-min\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-content-zoom-snap-points\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-content-zoom-snap-type\\"?: MsContentZoomSnapTypeProperty | MsContentZoomSnapTypeProperty[];\\n  \\n  \\"-ms-content-zooming\\"?: MsContentZoomingProperty | MsContentZoomingProperty[];\\n  \\n  \\"-ms-filter\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-flex-direction\\"?: FlexDirectionProperty | FlexDirectionProperty[];\\n  \\n  \\"-ms-flex-positive\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-ms-flow-from\\"?: MsFlowFromProperty | MsFlowFromProperty[];\\n  \\n  \\"-ms-flow-into\\"?: MsFlowIntoProperty | MsFlowIntoProperty[];\\n  \\n  \\"-ms-grid-columns\\"?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[];\\n  \\n  \\"-ms-grid-rows\\"?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[];\\n  \\n  \\"-ms-high-contrast-adjust\\"?: MsHighContrastAdjustProperty | MsHighContrastAdjustProperty[];\\n  \\n  \\"-ms-hyphenate-limit-chars\\"?: MsHyphenateLimitCharsProperty | MsHyphenateLimitCharsProperty[];\\n  \\n  \\"-ms-hyphenate-limit-lines\\"?: MsHyphenateLimitLinesProperty | MsHyphenateLimitLinesProperty[];\\n  \\n  \\"-ms-hyphenate-limit-zone\\"?: MsHyphenateLimitZoneProperty<TLength> | MsHyphenateLimitZoneProperty<TLength>[];\\n  \\n  \\"-ms-hyphens\\"?: HyphensProperty | HyphensProperty[];\\n  \\n  \\"-ms-ime-align\\"?: MsImeAlignProperty | MsImeAlignProperty[];\\n  \\n  \\"-ms-line-break\\"?: LineBreakProperty | LineBreakProperty[];\\n  \\n  \\"-ms-order\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-ms-overflow-style\\"?: MsOverflowStyleProperty | MsOverflowStyleProperty[];\\n  \\n  \\"-ms-overflow-x\\"?: OverflowXProperty | OverflowXProperty[];\\n  \\n  \\"-ms-overflow-y\\"?: OverflowYProperty | OverflowYProperty[];\\n  \\n  \\"-ms-scroll-chaining\\"?: MsScrollChainingProperty | MsScrollChainingProperty[];\\n  \\n  \\"-ms-scroll-limit-x-max\\"?: MsScrollLimitXMaxProperty<TLength> | MsScrollLimitXMaxProperty<TLength>[];\\n  \\n  \\"-ms-scroll-limit-x-min\\"?: MsScrollLimitXMinProperty<TLength> | MsScrollLimitXMinProperty<TLength>[];\\n  \\n  \\"-ms-scroll-limit-y-max\\"?: MsScrollLimitYMaxProperty<TLength> | MsScrollLimitYMaxProperty<TLength>[];\\n  \\n  \\"-ms-scroll-limit-y-min\\"?: MsScrollLimitYMinProperty<TLength> | MsScrollLimitYMinProperty<TLength>[];\\n  \\n  \\"-ms-scroll-rails\\"?: MsScrollRailsProperty | MsScrollRailsProperty[];\\n  \\n  \\"-ms-scroll-snap-points-x\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-scroll-snap-points-y\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-scroll-snap-type\\"?: MsScrollSnapTypeProperty | MsScrollSnapTypeProperty[];\\n  \\n  \\"-ms-scroll-translation\\"?: MsScrollTranslationProperty | MsScrollTranslationProperty[];\\n  \\n  \\"-ms-scrollbar-3dlight-color\\"?: MsScrollbar3dlightColorProperty | MsScrollbar3dlightColorProperty[];\\n  \\n  \\"-ms-scrollbar-arrow-color\\"?: MsScrollbarArrowColorProperty | MsScrollbarArrowColorProperty[];\\n  \\n  \\"-ms-scrollbar-base-color\\"?: MsScrollbarBaseColorProperty | MsScrollbarBaseColorProperty[];\\n  \\n  \\"-ms-scrollbar-darkshadow-color\\"?: MsScrollbarDarkshadowColorProperty | MsScrollbarDarkshadowColorProperty[];\\n  \\n  \\"-ms-scrollbar-face-color\\"?: MsScrollbarFaceColorProperty | MsScrollbarFaceColorProperty[];\\n  \\n  \\"-ms-scrollbar-highlight-color\\"?: MsScrollbarHighlightColorProperty | MsScrollbarHighlightColorProperty[];\\n  \\n  \\"-ms-scrollbar-shadow-color\\"?: MsScrollbarShadowColorProperty | MsScrollbarShadowColorProperty[];\\n  \\n  \\"-ms-text-autospace\\"?: MsTextAutospaceProperty | MsTextAutospaceProperty[];\\n  \\n  \\"-ms-text-combine-horizontal\\"?: TextCombineUprightProperty | TextCombineUprightProperty[];\\n  \\n  \\"-ms-text-overflow\\"?: TextOverflowProperty | TextOverflowProperty[];\\n  \\n  \\"-ms-touch-action\\"?: TouchActionProperty | TouchActionProperty[];\\n  \\n  \\"-ms-touch-select\\"?: MsTouchSelectProperty | MsTouchSelectProperty[];\\n  \\n  \\"-ms-transform\\"?: TransformProperty | TransformProperty[];\\n  \\n  \\"-ms-transform-origin\\"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  \\"-ms-transition-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-transition-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-transition-property\\"?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  \\"-ms-transition-timing-function\\"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  \\"-ms-user-select\\"?: MsUserSelectProperty | MsUserSelectProperty[];\\n  \\n  \\"-ms-word-break\\"?: WordBreakProperty | WordBreakProperty[];\\n  \\n  \\"-ms-wrap-flow\\"?: MsWrapFlowProperty | MsWrapFlowProperty[];\\n  \\n  \\"-ms-wrap-margin\\"?: MsWrapMarginProperty<TLength> | MsWrapMarginProperty<TLength>[];\\n  \\n  \\"-ms-wrap-through\\"?: MsWrapThroughProperty | MsWrapThroughProperty[];\\n  \\n  \\"-ms-writing-mode\\"?: WritingModeProperty | WritingModeProperty[];\\n  \\n  \\"-o-object-fit\\"?: ObjectFitProperty | ObjectFitProperty[];\\n  \\n  \\"-o-object-position\\"?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[];\\n  \\n  \\"-o-tab-size\\"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[];\\n  \\n  \\"-o-text-overflow\\"?: TextOverflowProperty | TextOverflowProperty[];\\n  \\n  \\"-o-transform-origin\\"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  \\"-webkit-align-content\\"?: AlignContentProperty | AlignContentProperty[];\\n  \\n  \\"-webkit-align-items\\"?: AlignItemsProperty | AlignItemsProperty[];\\n  \\n  \\"-webkit-align-self\\"?: AlignSelfProperty | AlignSelfProperty[];\\n  \\n  \\"-webkit-animation-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-webkit-animation-direction\\"?: AnimationDirectionProperty | AnimationDirectionProperty[];\\n  \\n  \\"-webkit-animation-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-webkit-animation-fill-mode\\"?: AnimationFillModeProperty | AnimationFillModeProperty[];\\n  \\n  \\"-webkit-animation-iteration-count\\"?: AnimationIterationCountProperty | AnimationIterationCountProperty[];\\n  \\n  \\"-webkit-animation-name\\"?: AnimationNameProperty | AnimationNameProperty[];\\n  \\n  \\"-webkit-animation-play-state\\"?: AnimationPlayStateProperty | AnimationPlayStateProperty[];\\n  \\n  \\"-webkit-animation-timing-function\\"?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[];\\n  \\n  \\"-webkit-appearance\\"?: WebkitAppearanceProperty | WebkitAppearanceProperty[];\\n  \\n  \\"-webkit-backdrop-filter\\"?: BackdropFilterProperty | BackdropFilterProperty[];\\n  \\n  \\"-webkit-backface-visibility\\"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[];\\n  \\n  \\"-webkit-background-clip\\"?: BackgroundClipProperty | BackgroundClipProperty[];\\n  \\n  \\"-webkit-background-origin\\"?: BackgroundOriginProperty | BackgroundOriginProperty[];\\n  \\n  \\"-webkit-background-size\\"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[];\\n  \\n  \\"-webkit-border-before-color\\"?: WebkitBorderBeforeColorProperty | WebkitBorderBeforeColorProperty[];\\n  \\n  \\"-webkit-border-before-style\\"?: WebkitBorderBeforeStyleProperty | WebkitBorderBeforeStyleProperty[];\\n  \\n  \\"-webkit-border-before-width\\"?: WebkitBorderBeforeWidthProperty<TLength> | WebkitBorderBeforeWidthProperty<TLength>[];\\n  \\n  \\"-webkit-border-bottom-left-radius\\"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[];\\n  \\n  \\"-webkit-border-bottom-right-radius\\"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[];\\n  \\n  \\"-webkit-border-image-slice\\"?: BorderImageSliceProperty | BorderImageSliceProperty[];\\n  \\n  \\"-webkit-border-top-left-radius\\"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[];\\n  \\n  \\"-webkit-border-top-right-radius\\"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[];\\n  \\n  \\"-webkit-box-decoration-break\\"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[];\\n  \\n  \\"-webkit-box-reflect\\"?: WebkitBoxReflectProperty<TLength> | WebkitBoxReflectProperty<TLength>[];\\n  \\n  \\"-webkit-box-shadow\\"?: BoxShadowProperty | BoxShadowProperty[];\\n  \\n  \\"-webkit-box-sizing\\"?: BoxSizingProperty | BoxSizingProperty[];\\n  \\n  \\"-webkit-clip-path\\"?: ClipPathProperty | ClipPathProperty[];\\n  \\n  \\"-webkit-color-adjust\\"?: ColorAdjustProperty | ColorAdjustProperty[];\\n  \\n  \\"-webkit-column-count\\"?: ColumnCountProperty | ColumnCountProperty[];\\n  \\n  \\"-webkit-column-fill\\"?: ColumnFillProperty | ColumnFillProperty[];\\n  \\n  \\"-webkit-column-gap\\"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[];\\n  \\n  \\"-webkit-column-rule-color\\"?: ColumnRuleColorProperty | ColumnRuleColorProperty[];\\n  \\n  \\"-webkit-column-rule-style\\"?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[];\\n  \\n  \\"-webkit-column-rule-width\\"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[];\\n  \\n  \\"-webkit-column-span\\"?: ColumnSpanProperty | ColumnSpanProperty[];\\n  \\n  \\"-webkit-column-width\\"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[];\\n  \\n  \\"-webkit-filter\\"?: FilterProperty | FilterProperty[];\\n  \\n  \\"-webkit-flex-basis\\"?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[];\\n  \\n  \\"-webkit-flex-direction\\"?: FlexDirectionProperty | FlexDirectionProperty[];\\n  \\n  \\"-webkit-flex-grow\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-webkit-flex-shrink\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-webkit-flex-wrap\\"?: FlexWrapProperty | FlexWrapProperty[];\\n  \\n  \\"-webkit-font-feature-settings\\"?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[];\\n  \\n  \\"-webkit-font-kerning\\"?: FontKerningProperty | FontKerningProperty[];\\n  \\n  \\"-webkit-font-variant-ligatures\\"?: FontVariantLigaturesProperty | FontVariantLigaturesProperty[];\\n  \\n  \\"-webkit-hyphens\\"?: HyphensProperty | HyphensProperty[];\\n  \\n  \\"-webkit-justify-content\\"?: JustifyContentProperty | JustifyContentProperty[];\\n  \\n  \\"-webkit-line-break\\"?: LineBreakProperty | LineBreakProperty[];\\n  \\n  \\"-webkit-line-clamp\\"?: WebkitLineClampProperty | WebkitLineClampProperty[];\\n  \\n  \\"-webkit-margin-end\\"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[];\\n  \\n  \\"-webkit-margin-start\\"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[];\\n  \\n  \\"-webkit-mask-attachment\\"?: WebkitMaskAttachmentProperty | WebkitMaskAttachmentProperty[];\\n  \\n  \\"-webkit-mask-clip\\"?: WebkitMaskClipProperty | WebkitMaskClipProperty[];\\n  \\n  \\"-webkit-mask-composite\\"?: WebkitMaskCompositeProperty | WebkitMaskCompositeProperty[];\\n  \\n  \\"-webkit-mask-image\\"?: WebkitMaskImageProperty | WebkitMaskImageProperty[];\\n  \\n  \\"-webkit-mask-origin\\"?: WebkitMaskOriginProperty | WebkitMaskOriginProperty[];\\n  \\n  \\"-webkit-mask-position\\"?: WebkitMaskPositionProperty<TLength> | WebkitMaskPositionProperty<TLength>[];\\n  \\n  \\"-webkit-mask-position-x\\"?: WebkitMaskPositionXProperty<TLength> | WebkitMaskPositionXProperty<TLength>[];\\n  \\n  \\"-webkit-mask-position-y\\"?: WebkitMaskPositionYProperty<TLength> | WebkitMaskPositionYProperty<TLength>[];\\n  \\n  \\"-webkit-mask-repeat\\"?: WebkitMaskRepeatProperty | WebkitMaskRepeatProperty[];\\n  \\n  \\"-webkit-mask-repeat-x\\"?: WebkitMaskRepeatXProperty | WebkitMaskRepeatXProperty[];\\n  \\n  \\"-webkit-mask-repeat-y\\"?: WebkitMaskRepeatYProperty | WebkitMaskRepeatYProperty[];\\n  \\n  \\"-webkit-mask-size\\"?: WebkitMaskSizeProperty<TLength> | WebkitMaskSizeProperty<TLength>[];\\n  \\n  \\"-webkit-max-inline-size\\"?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[];\\n  \\n  \\"-webkit-order\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-webkit-overflow-scrolling\\"?: WebkitOverflowScrollingProperty | WebkitOverflowScrollingProperty[];\\n  \\n  \\"-webkit-padding-end\\"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[];\\n  \\n  \\"-webkit-padding-start\\"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[];\\n  \\n  \\"-webkit-perspective\\"?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[];\\n  \\n  \\"-webkit-perspective-origin\\"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[];\\n  \\n  \\"-webkit-scroll-snap-type\\"?: ScrollSnapTypeProperty | ScrollSnapTypeProperty[];\\n  \\n  \\"-webkit-shape-margin\\"?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[];\\n  \\n  \\"-webkit-tap-highlight-color\\"?: WebkitTapHighlightColorProperty | WebkitTapHighlightColorProperty[];\\n  \\n  \\"-webkit-text-combine\\"?: TextCombineUprightProperty | TextCombineUprightProperty[];\\n  \\n  \\"-webkit-text-decoration-color\\"?: TextDecorationColorProperty | TextDecorationColorProperty[];\\n  \\n  \\"-webkit-text-decoration-line\\"?: TextDecorationLineProperty | TextDecorationLineProperty[];\\n  \\n  \\"-webkit-text-decoration-skip\\"?: TextDecorationSkipProperty | TextDecorationSkipProperty[];\\n  \\n  \\"-webkit-text-decoration-style\\"?: TextDecorationStyleProperty | TextDecorationStyleProperty[];\\n  \\n  \\"-webkit-text-emphasis-color\\"?: TextEmphasisColorProperty | TextEmphasisColorProperty[];\\n  \\n  \\"-webkit-text-emphasis-position\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-webkit-text-emphasis-style\\"?: TextEmphasisStyleProperty | TextEmphasisStyleProperty[];\\n  \\n  \\"-webkit-text-fill-color\\"?: WebkitTextFillColorProperty | WebkitTextFillColorProperty[];\\n  \\n  \\"-webkit-text-orientation\\"?: TextOrientationProperty | TextOrientationProperty[];\\n  \\n  \\"-webkit-text-size-adjust\\"?: TextSizeAdjustProperty | TextSizeAdjustProperty[];\\n  \\n  \\"-webkit-text-stroke-color\\"?: WebkitTextStrokeColorProperty | WebkitTextStrokeColorProperty[];\\n  \\n  \\"-webkit-text-stroke-width\\"?: WebkitTextStrokeWidthProperty<TLength> | WebkitTextStrokeWidthProperty<TLength>[];\\n  \\n  \\"-webkit-touch-callout\\"?: WebkitTouchCalloutProperty | WebkitTouchCalloutProperty[];\\n  \\n  \\"-webkit-transform\\"?: TransformProperty | TransformProperty[];\\n  \\n  \\"-webkit-transform-origin\\"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[];\\n  \\n  \\"-webkit-transform-style\\"?: TransformStyleProperty | TransformStyleProperty[];\\n  \\n  \\"-webkit-transition-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-webkit-transition-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-webkit-transition-property\\"?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  \\"-webkit-transition-timing-function\\"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  \\"-webkit-user-modify\\"?: WebkitUserModifyProperty | WebkitUserModifyProperty[];\\n  \\n  \\"-webkit-user-select\\"?: UserSelectProperty | UserSelectProperty[];\\n  \\n  \\"-webkit-writing-mode\\"?: WritingModeProperty | WritingModeProperty[];\\n  \\n  \\"-webkittext-underline-position\\"?: TextUnderlinePositionProperty | TextUnderlinePositionProperty[];\\n}\\n\\nexport interface VendorShorthandPropertiesHyphenFallback<TLength = string | 0> {\\n  \\n  \\"-moz-animation\\"?: AnimationProperty | AnimationProperty[];\\n  \\n  \\"-moz-border-image\\"?: BorderImageProperty | BorderImageProperty[];\\n  \\n  \\"-moz-column-rule\\"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[];\\n  \\n  \\"-moz-columns\\"?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[];\\n  \\n  \\"-moz-transition\\"?: TransitionProperty | TransitionProperty[];\\n  \\n  \\"-ms-content-zoom-limit\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-content-zoom-snap\\"?: MsContentZoomSnapProperty | MsContentZoomSnapProperty[];\\n  \\n  \\"-ms-flex\\"?: FlexProperty<TLength> | FlexProperty<TLength>[];\\n  \\n  \\"-ms-scroll-limit\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-scroll-snap-x\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-scroll-snap-y\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-ms-transition\\"?: TransitionProperty | TransitionProperty[];\\n  \\n  \\"-webkit-animation\\"?: AnimationProperty | AnimationProperty[];\\n  \\n  \\"-webkit-border-before\\"?: WebkitBorderBeforeProperty<TLength> | WebkitBorderBeforeProperty<TLength>[];\\n  \\n  \\"-webkit-border-image\\"?: BorderImageProperty | BorderImageProperty[];\\n  \\n  \\"-webkit-border-radius\\"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[];\\n  \\n  \\"-webkit-column-rule\\"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[];\\n  \\n  \\"-webkit-columns\\"?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[];\\n  \\n  \\"-webkit-flex\\"?: FlexProperty<TLength> | FlexProperty<TLength>[];\\n  \\n  \\"-webkit-flex-flow\\"?: FlexFlowProperty | FlexFlowProperty[];\\n  \\n  \\"-webkit-mask\\"?: WebkitMaskProperty<TLength> | WebkitMaskProperty<TLength>[];\\n  \\n  \\"-webkit-text-emphasis\\"?: TextEmphasisProperty | TextEmphasisProperty[];\\n  \\n  \\"-webkit-text-stroke\\"?: WebkitTextStrokeProperty<TLength> | WebkitTextStrokeProperty<TLength>[];\\n  \\n  \\"-webkit-transition\\"?: TransitionProperty | TransitionProperty[];\\n}\\n\\nexport interface VendorPropertiesHyphenFallback<TLength = string | 0> extends VendorLonghandPropertiesHyphenFallback<TLength>, VendorShorthandPropertiesHyphenFallback<TLength> {}\\n\\nexport interface ObsoletePropertiesHyphenFallback<TLength = string | 0> {\\n  \\n  \\"box-align\\"?: BoxAlignProperty | BoxAlignProperty[];\\n  \\n  \\"box-direction\\"?: BoxDirectionProperty | BoxDirectionProperty[];\\n  \\n  \\"box-flex\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"box-flex-group\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"box-lines\\"?: BoxLinesProperty | BoxLinesProperty[];\\n  \\n  \\"box-ordinal-group\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"box-orient\\"?: BoxOrientProperty | BoxOrientProperty[];\\n  \\n  \\"box-pack\\"?: BoxPackProperty | BoxPackProperty[];\\n  \\n  clip?: ClipProperty | ClipProperty[];\\n  \\n  \\"font-variant-alternates\\"?: FontVariantAlternatesProperty | FontVariantAlternatesProperty[];\\n  \\n  \\"grid-column-gap\\"?: GridColumnGapProperty<TLength> | GridColumnGapProperty<TLength>[];\\n  \\n  \\"grid-gap\\"?: GridGapProperty<TLength> | GridGapProperty<TLength>[];\\n  \\n  \\"grid-row-gap\\"?: GridRowGapProperty<TLength> | GridRowGapProperty<TLength>[];\\n  \\n  \\"ime-mode\\"?: ImeModeProperty | ImeModeProperty[];\\n  \\n  \\"offset-block\\"?: InsetBlockProperty<TLength> | InsetBlockProperty<TLength>[];\\n  \\n  \\"offset-block-end\\"?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[];\\n  \\n  \\"offset-block-start\\"?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[];\\n  \\n  \\"offset-inline\\"?: InsetInlineProperty<TLength> | InsetInlineProperty<TLength>[];\\n  \\n  \\"offset-inline-end\\"?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[];\\n  \\n  \\"offset-inline-start\\"?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[];\\n  \\n  \\"scroll-snap-coordinate\\"?: ScrollSnapCoordinateProperty<TLength> | ScrollSnapCoordinateProperty<TLength>[];\\n  \\n  \\"scroll-snap-destination\\"?: ScrollSnapDestinationProperty<TLength> | ScrollSnapDestinationProperty<TLength>[];\\n  \\n  \\"scroll-snap-points-x\\"?: ScrollSnapPointsXProperty | ScrollSnapPointsXProperty[];\\n  \\n  \\"scroll-snap-points-y\\"?: ScrollSnapPointsYProperty | ScrollSnapPointsYProperty[];\\n  \\n  \\"scroll-snap-type-x\\"?: ScrollSnapTypeXProperty | ScrollSnapTypeXProperty[];\\n  \\n  \\"scroll-snap-type-y\\"?: ScrollSnapTypeYProperty | ScrollSnapTypeYProperty[];\\n  \\n  \\"scrollbar-track-color\\"?: MsScrollbarTrackColorProperty | MsScrollbarTrackColorProperty[];\\n  \\n  \\"text-combine-horizontal\\"?: TextCombineUprightProperty | TextCombineUprightProperty[];\\n  \\n  \\"-khtml-box-align\\"?: BoxAlignProperty | BoxAlignProperty[];\\n  \\n  \\"-khtml-box-direction\\"?: BoxDirectionProperty | BoxDirectionProperty[];\\n  \\n  \\"-khtml-box-flex\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-khtml-box-flex-group\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-khtml-box-lines\\"?: BoxLinesProperty | BoxLinesProperty[];\\n  \\n  \\"-khtml-box-ordinal-group\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-khtml-box-orient\\"?: BoxOrientProperty | BoxOrientProperty[];\\n  \\n  \\"-khtml-box-pack\\"?: BoxPackProperty | BoxPackProperty[];\\n  \\n  \\"-khtml-line-break\\"?: LineBreakProperty | LineBreakProperty[];\\n  \\n  \\"-khtml-opacity\\"?: OpacityProperty | OpacityProperty[];\\n  \\n  \\"-khtml-user-select\\"?: UserSelectProperty | UserSelectProperty[];\\n  \\n  \\"-moz-background-clip\\"?: BackgroundClipProperty | BackgroundClipProperty[];\\n  \\n  \\"-moz-background-inline-policy\\"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[];\\n  \\n  \\"-moz-background-origin\\"?: BackgroundOriginProperty | BackgroundOriginProperty[];\\n  \\n  \\"-moz-background-size\\"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[];\\n  \\n  \\"-moz-binding\\"?: MozBindingProperty | MozBindingProperty[];\\n  \\n  \\"-moz-border-bottom-colors\\"?: MozBorderBottomColorsProperty | MozBorderBottomColorsProperty[];\\n  \\n  \\"-moz-border-left-colors\\"?: MozBorderLeftColorsProperty | MozBorderLeftColorsProperty[];\\n  \\n  \\"-moz-border-radius\\"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[];\\n  \\n  \\"-moz-border-radius-bottomleft\\"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[];\\n  \\n  \\"-moz-border-radius-bottomright\\"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[];\\n  \\n  \\"-moz-border-radius-topleft\\"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[];\\n  \\n  \\"-moz-border-radius-topright\\"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[];\\n  \\n  \\"-moz-border-right-colors\\"?: MozBorderRightColorsProperty | MozBorderRightColorsProperty[];\\n  \\n  \\"-moz-border-top-colors\\"?: MozBorderTopColorsProperty | MozBorderTopColorsProperty[];\\n  \\n  \\"-moz-box-align\\"?: BoxAlignProperty | BoxAlignProperty[];\\n  \\n  \\"-moz-box-direction\\"?: BoxDirectionProperty | BoxDirectionProperty[];\\n  \\n  \\"-moz-box-flex\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-moz-box-ordinal-group\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-moz-box-orient\\"?: BoxOrientProperty | BoxOrientProperty[];\\n  \\n  \\"-moz-box-pack\\"?: BoxPackProperty | BoxPackProperty[];\\n  \\n  \\"-moz-box-shadow\\"?: BoxShadowProperty | BoxShadowProperty[];\\n  \\n  \\"-moz-opacity\\"?: OpacityProperty | OpacityProperty[];\\n  \\n  \\"-moz-outline\\"?: OutlineProperty<TLength> | OutlineProperty<TLength>[];\\n  \\n  \\"-moz-outline-color\\"?: OutlineColorProperty | OutlineColorProperty[];\\n  \\n  \\"-moz-outline-radius\\"?: MozOutlineRadiusProperty<TLength> | MozOutlineRadiusProperty<TLength>[];\\n  \\n  \\"-moz-outline-style\\"?: OutlineStyleProperty | OutlineStyleProperty[];\\n  \\n  \\"-moz-outline-width\\"?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[];\\n  \\n  \\"-moz-text-align-last\\"?: TextAlignLastProperty | TextAlignLastProperty[];\\n  \\n  \\"-moz-text-blink\\"?: MozTextBlinkProperty | MozTextBlinkProperty[];\\n  \\n  \\"-moz-text-decoration-color\\"?: TextDecorationColorProperty | TextDecorationColorProperty[];\\n  \\n  \\"-moz-text-decoration-line\\"?: TextDecorationLineProperty | TextDecorationLineProperty[];\\n  \\n  \\"-moz-text-decoration-style\\"?: TextDecorationStyleProperty | TextDecorationStyleProperty[];\\n  \\n  \\"-moz-user-input\\"?: MozUserInputProperty | MozUserInputProperty[];\\n  \\n  \\"-moz-window-shadow\\"?: MozWindowShadowProperty | MozWindowShadowProperty[];\\n  \\n  \\"-ms-ime-mode\\"?: ImeModeProperty | ImeModeProperty[];\\n  \\n  \\"-ms-scrollbar-track-color\\"?: MsScrollbarTrackColorProperty | MsScrollbarTrackColorProperty[];\\n  \\n  \\"-o-animation\\"?: AnimationProperty | AnimationProperty[];\\n  \\n  \\"-o-animation-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-o-animation-direction\\"?: AnimationDirectionProperty | AnimationDirectionProperty[];\\n  \\n  \\"-o-animation-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-o-animation-fill-mode\\"?: AnimationFillModeProperty | AnimationFillModeProperty[];\\n  \\n  \\"-o-animation-iteration-count\\"?: AnimationIterationCountProperty | AnimationIterationCountProperty[];\\n  \\n  \\"-o-animation-name\\"?: AnimationNameProperty | AnimationNameProperty[];\\n  \\n  \\"-o-animation-play-state\\"?: AnimationPlayStateProperty | AnimationPlayStateProperty[];\\n  \\n  \\"-o-animation-timing-function\\"?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[];\\n  \\n  \\"-o-background-size\\"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[];\\n  \\n  \\"-o-border-image\\"?: BorderImageProperty | BorderImageProperty[];\\n  \\n  \\"-o-transform\\"?: TransformProperty | TransformProperty[];\\n  \\n  \\"-o-transition\\"?: TransitionProperty | TransitionProperty[];\\n  \\n  \\"-o-transition-delay\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-o-transition-duration\\"?: GlobalsString | GlobalsString[];\\n  \\n  \\"-o-transition-property\\"?: TransitionPropertyProperty | TransitionPropertyProperty[];\\n  \\n  \\"-o-transition-timing-function\\"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[];\\n  \\n  \\"-webkit-box-align\\"?: BoxAlignProperty | BoxAlignProperty[];\\n  \\n  \\"-webkit-box-direction\\"?: BoxDirectionProperty | BoxDirectionProperty[];\\n  \\n  \\"-webkit-box-flex\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-webkit-box-flex-group\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-webkit-box-lines\\"?: BoxLinesProperty | BoxLinesProperty[];\\n  \\n  \\"-webkit-box-ordinal-group\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\n  \\"-webkit-box-orient\\"?: BoxOrientProperty | BoxOrientProperty[];\\n  \\n  \\"-webkit-box-pack\\"?: BoxPackProperty | BoxPackProperty[];\\n  \\n  \\"-webkit-scroll-snap-points-x\\"?: ScrollSnapPointsXProperty | ScrollSnapPointsXProperty[];\\n  \\n  \\"-webkit-scroll-snap-points-y\\"?: ScrollSnapPointsYProperty | ScrollSnapPointsYProperty[];\\n}\\n\\nexport interface SvgPropertiesHyphenFallback<TLength = string | 0> {\\n  \\"alignment-baseline\\"?: AlignmentBaselineProperty | AlignmentBaselineProperty[];\\n  \\"baseline-shift\\"?: BaselineShiftProperty<TLength> | BaselineShiftProperty<TLength>[];\\n  clip?: ClipProperty | ClipProperty[];\\n  \\"clip-path\\"?: ClipPathProperty | ClipPathProperty[];\\n  \\"clip-rule\\"?: ClipRuleProperty | ClipRuleProperty[];\\n  color?: ColorProperty | ColorProperty[];\\n  \\"color-interpolation\\"?: ColorInterpolationProperty | ColorInterpolationProperty[];\\n  \\"color-rendering\\"?: ColorRenderingProperty | ColorRenderingProperty[];\\n  cursor?: CursorProperty | CursorProperty[];\\n  direction?: DirectionProperty | DirectionProperty[];\\n  display?: DisplayProperty | DisplayProperty[];\\n  \\"dominant-baseline\\"?: DominantBaselineProperty | DominantBaselineProperty[];\\n  fill?: FillProperty | FillProperty[];\\n  \\"fill-opacity\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\"fill-rule\\"?: FillRuleProperty | FillRuleProperty[];\\n  filter?: FilterProperty | FilterProperty[];\\n  \\"flood-color\\"?: FloodColorProperty | FloodColorProperty[];\\n  \\"flood-opacity\\"?: GlobalsNumber | GlobalsNumber[];\\n  font?: FontProperty | FontProperty[];\\n  \\"font-family\\"?: FontFamilyProperty | FontFamilyProperty[];\\n  \\"font-size\\"?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[];\\n  \\"font-size-adjust\\"?: FontSizeAdjustProperty | FontSizeAdjustProperty[];\\n  \\"font-stretch\\"?: FontStretchProperty | FontStretchProperty[];\\n  \\"font-style\\"?: FontStyleProperty | FontStyleProperty[];\\n  \\"font-variant\\"?: FontVariantProperty | FontVariantProperty[];\\n  \\"font-weight\\"?: FontWeightProperty | FontWeightProperty[];\\n  \\"glyph-orientation-vertical\\"?: GlyphOrientationVerticalProperty | GlyphOrientationVerticalProperty[];\\n  \\"image-rendering\\"?: ImageRenderingProperty | ImageRenderingProperty[];\\n  \\"letter-spacing\\"?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[];\\n  \\"lighting-color\\"?: LightingColorProperty | LightingColorProperty[];\\n  \\"line-height\\"?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[];\\n  marker?: MarkerProperty | MarkerProperty[];\\n  \\"marker-end\\"?: MarkerEndProperty | MarkerEndProperty[];\\n  \\"marker-mid\\"?: MarkerMidProperty | MarkerMidProperty[];\\n  \\"marker-start\\"?: MarkerStartProperty | MarkerStartProperty[];\\n  mask?: MaskProperty<TLength> | MaskProperty<TLength>[];\\n  opacity?: OpacityProperty | OpacityProperty[];\\n  overflow?: OverflowProperty | OverflowProperty[];\\n  \\"paint-order\\"?: PaintOrderProperty | PaintOrderProperty[];\\n  \\"pointer-events\\"?: PointerEventsProperty | PointerEventsProperty[];\\n  \\"shape-rendering\\"?: ShapeRenderingProperty | ShapeRenderingProperty[];\\n  \\"stop-color\\"?: StopColorProperty | StopColorProperty[];\\n  \\"stop-opacity\\"?: GlobalsNumber | GlobalsNumber[];\\n  stroke?: StrokeProperty | StrokeProperty[];\\n  \\"stroke-dasharray\\"?: StrokeDasharrayProperty<TLength> | StrokeDasharrayProperty<TLength>[];\\n  \\"stroke-dashoffset\\"?: StrokeDashoffsetProperty<TLength> | StrokeDashoffsetProperty<TLength>[];\\n  \\"stroke-linecap\\"?: StrokeLinecapProperty | StrokeLinecapProperty[];\\n  \\"stroke-linejoin\\"?: StrokeLinejoinProperty | StrokeLinejoinProperty[];\\n  \\"stroke-miterlimit\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\"stroke-opacity\\"?: GlobalsNumber | GlobalsNumber[];\\n  \\"stroke-width\\"?: StrokeWidthProperty<TLength> | StrokeWidthProperty<TLength>[];\\n  \\"text-anchor\\"?: TextAnchorProperty | TextAnchorProperty[];\\n  \\"text-decoration\\"?: TextDecorationProperty<TLength> | TextDecorationProperty<TLength>[];\\n  \\"text-rendering\\"?: TextRenderingProperty | TextRenderingProperty[];\\n  \\"unicode-bidi\\"?: UnicodeBidiProperty | UnicodeBidiProperty[];\\n  \\"vector-effect\\"?: VectorEffectProperty | VectorEffectProperty[];\\n  visibility?: VisibilityProperty | VisibilityProperty[];\\n  \\"white-space\\"?: WhiteSpaceProperty | WhiteSpaceProperty[];\\n  \\"word-spacing\\"?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[];\\n  \\"writing-mode\\"?: WritingModeProperty | WritingModeProperty[];\\n}\\n\\nexport interface PropertiesHyphenFallback<TLength = string | 0>\\n  extends StandardPropertiesHyphenFallback<TLength>,\\n    VendorPropertiesHyphenFallback<TLength>,\\n    ObsoletePropertiesHyphenFallback<TLength>,\\n    SvgPropertiesHyphenFallback<TLength> {}\\n\\nexport interface CounterStyle {\\n  additiveSymbols?: string;\\n  fallback?: string;\\n  negative?: string;\\n  pad?: string;\\n  prefix?: string;\\n  range?: CounterStyleRangeProperty;\\n  speakAs?: CounterStyleSpeakAsProperty;\\n  suffix?: string;\\n  symbols?: string;\\n  system?: CounterStyleSystemProperty;\\n}\\n\\nexport interface CounterStyleHyphen {\\n  \\"additive-symbols\\"?: string;\\n  fallback?: string;\\n  negative?: string;\\n  pad?: string;\\n  prefix?: string;\\n  range?: CounterStyleRangeProperty;\\n  \\"speak-as\\"?: CounterStyleSpeakAsProperty;\\n  suffix?: string;\\n  symbols?: string;\\n  system?: CounterStyleSystemProperty;\\n}\\n\\nexport interface CounterStyleFallback {\\n  additiveSymbols?: string | string[];\\n  fallback?: string | string[];\\n  negative?: string | string[];\\n  pad?: string | string[];\\n  prefix?: string | string[];\\n  range?: CounterStyleRangeProperty | CounterStyleRangeProperty[];\\n  speakAs?: CounterStyleSpeakAsProperty | CounterStyleSpeakAsProperty[];\\n  suffix?: string | string[];\\n  symbols?: string | string[];\\n  system?: CounterStyleSystemProperty | CounterStyleSystemProperty[];\\n}\\n\\nexport interface CounterStyleHyphenFallback {\\n  \\"additive-symbols\\"?: string | string[];\\n  fallback?: string | string[];\\n  negative?: string | string[];\\n  pad?: string | string[];\\n  prefix?: string | string[];\\n  range?: CounterStyleRangeProperty | CounterStyleRangeProperty[];\\n  \\"speak-as\\"?: CounterStyleSpeakAsProperty | CounterStyleSpeakAsProperty[];\\n  suffix?: string | string[];\\n  symbols?: string | string[];\\n  system?: CounterStyleSystemProperty | CounterStyleSystemProperty[];\\n}\\n\\nexport interface FontFace {\\n  MozFontFeatureSettings?: FontFaceFontFeatureSettingsProperty;\\n  fontDisplay?: FontFaceFontDisplayProperty;\\n  fontFamily?: string;\\n  fontFeatureSettings?: FontFaceFontFeatureSettingsProperty;\\n  fontStretch?: FontFaceFontStretchProperty;\\n  fontStyle?: FontFaceFontStyleProperty;\\n  fontVariant?: FontFaceFontVariantProperty;\\n  fontVariationSettings?: FontFaceFontVariationSettingsProperty;\\n  fontWeight?: FontFaceFontWeightProperty;\\n  src?: string;\\n  unicodeRange?: string;\\n}\\n\\nexport interface FontFaceHyphen {\\n  \\"-moz-font-feature-settings\\"?: FontFaceFontFeatureSettingsProperty;\\n  \\"font-display\\"?: FontFaceFontDisplayProperty;\\n  \\"font-family\\"?: string;\\n  \\"font-feature-settings\\"?: FontFaceFontFeatureSettingsProperty;\\n  \\"font-stretch\\"?: FontFaceFontStretchProperty;\\n  \\"font-style\\"?: FontFaceFontStyleProperty;\\n  \\"font-variant\\"?: FontFaceFontVariantProperty;\\n  \\"font-variation-settings\\"?: FontFaceFontVariationSettingsProperty;\\n  \\"font-weight\\"?: FontFaceFontWeightProperty;\\n  src?: string;\\n  \\"unicode-range\\"?: string;\\n}\\n\\nexport interface FontFaceFallback {\\n  MozFontFeatureSettings?: FontFaceFontFeatureSettingsProperty | FontFaceFontFeatureSettingsProperty[];\\n  fontDisplay?: FontFaceFontDisplayProperty | FontFaceFontDisplayProperty[];\\n  fontFamily?: string | string[];\\n  fontFeatureSettings?: FontFaceFontFeatureSettingsProperty | FontFaceFontFeatureSettingsProperty[];\\n  fontStretch?: FontFaceFontStretchProperty | FontFaceFontStretchProperty[];\\n  fontStyle?: FontFaceFontStyleProperty | FontFaceFontStyleProperty[];\\n  fontVariant?: FontFaceFontVariantProperty | FontFaceFontVariantProperty[];\\n  fontVariationSettings?: FontFaceFontVariationSettingsProperty | FontFaceFontVariationSettingsProperty[];\\n  fontWeight?: FontFaceFontWeightProperty | FontFaceFontWeightProperty[];\\n  src?: string | string[];\\n  unicodeRange?: string | string[];\\n}\\n\\nexport interface FontFaceHyphenFallback {\\n  \\"-moz-font-feature-settings\\"?: FontFaceFontFeatureSettingsProperty | FontFaceFontFeatureSettingsProperty[];\\n  \\"font-display\\"?: FontFaceFontDisplayProperty | FontFaceFontDisplayProperty[];\\n  \\"font-family\\"?: string | string[];\\n  \\"font-feature-settings\\"?: FontFaceFontFeatureSettingsProperty | FontFaceFontFeatureSettingsProperty[];\\n  \\"font-stretch\\"?: FontFaceFontStretchProperty | FontFaceFontStretchProperty[];\\n  \\"font-style\\"?: FontFaceFontStyleProperty | FontFaceFontStyleProperty[];\\n  \\"font-variant\\"?: FontFaceFontVariantProperty | FontFaceFontVariantProperty[];\\n  \\"font-variation-settings\\"?: FontFaceFontVariationSettingsProperty | FontFaceFontVariationSettingsProperty[];\\n  \\"font-weight\\"?: FontFaceFontWeightProperty | FontFaceFontWeightProperty[];\\n  src?: string | string[];\\n  \\"unicode-range\\"?: string | string[];\\n}\\n\\nexport interface Viewport<TLength = string | 0> {\\n  msHeight?: ViewportHeightProperty<TLength>;\\n  msMaxHeight?: ViewportMaxHeightProperty<TLength>;\\n  msMaxWidth?: ViewportMaxWidthProperty<TLength>;\\n  msMaxZoom?: ViewportMaxZoomProperty;\\n  msMinHeight?: ViewportMinHeightProperty<TLength>;\\n  msMinWidth?: ViewportMinWidthProperty<TLength>;\\n  msMinZoom?: ViewportMinZoomProperty;\\n  msOrientation?: ViewportOrientationProperty;\\n  msUserZoom?: ViewportUserZoomProperty;\\n  msWidth?: ViewportWidthProperty<TLength>;\\n  msZoom?: ViewportZoomProperty;\\n  OOrientation?: ViewportOrientationProperty;\\n  height?: ViewportHeightProperty<TLength>;\\n  maxHeight?: ViewportMaxHeightProperty<TLength>;\\n  maxWidth?: ViewportMaxWidthProperty<TLength>;\\n  maxZoom?: ViewportMaxZoomProperty;\\n  minHeight?: ViewportMinHeightProperty<TLength>;\\n  minWidth?: ViewportMinWidthProperty<TLength>;\\n  minZoom?: ViewportMinZoomProperty;\\n  orientation?: ViewportOrientationProperty;\\n  userZoom?: ViewportUserZoomProperty;\\n  width?: ViewportWidthProperty<TLength>;\\n  zoom?: ViewportZoomProperty;\\n}\\n\\nexport interface ViewportHyphen<TLength = string | 0> {\\n  \\"-ms-height\\"?: ViewportHeightProperty<TLength>;\\n  \\"-ms-max-height\\"?: ViewportMaxHeightProperty<TLength>;\\n  \\"-ms-max-width\\"?: ViewportMaxWidthProperty<TLength>;\\n  \\"-ms-max-zoom\\"?: ViewportMaxZoomProperty;\\n  \\"-ms-min-height\\"?: ViewportMinHeightProperty<TLength>;\\n  \\"-ms-min-width\\"?: ViewportMinWidthProperty<TLength>;\\n  \\"-ms-min-zoom\\"?: ViewportMinZoomProperty;\\n  \\"-ms-orientation\\"?: ViewportOrientationProperty;\\n  \\"-ms-user-zoom\\"?: ViewportUserZoomProperty;\\n  \\"-ms-width\\"?: ViewportWidthProperty<TLength>;\\n  \\"-ms-zoom\\"?: ViewportZoomProperty;\\n  \\"-o-orientation\\"?: ViewportOrientationProperty;\\n  height?: ViewportHeightProperty<TLength>;\\n  \\"max-height\\"?: ViewportMaxHeightProperty<TLength>;\\n  \\"max-width\\"?: ViewportMaxWidthProperty<TLength>;\\n  \\"max-zoom\\"?: ViewportMaxZoomProperty;\\n  \\"min-height\\"?: ViewportMinHeightProperty<TLength>;\\n  \\"min-width\\"?: ViewportMinWidthProperty<TLength>;\\n  \\"min-zoom\\"?: ViewportMinZoomProperty;\\n  orientation?: ViewportOrientationProperty;\\n  \\"user-zoom\\"?: ViewportUserZoomProperty;\\n  width?: ViewportWidthProperty<TLength>;\\n  zoom?: ViewportZoomProperty;\\n}\\n\\nexport interface ViewportFallback<TLength = string | 0> {\\n  msHeight?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[];\\n  msMaxHeight?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[];\\n  msMaxWidth?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[];\\n  msMaxZoom?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[];\\n  msMinHeight?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[];\\n  msMinWidth?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[];\\n  msMinZoom?: ViewportMinZoomProperty | ViewportMinZoomProperty[];\\n  msOrientation?: ViewportOrientationProperty | ViewportOrientationProperty[];\\n  msUserZoom?: ViewportUserZoomProperty | ViewportUserZoomProperty[];\\n  msWidth?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[];\\n  msZoom?: ViewportZoomProperty | ViewportZoomProperty[];\\n  OOrientation?: ViewportOrientationProperty | ViewportOrientationProperty[];\\n  height?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[];\\n  maxHeight?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[];\\n  maxWidth?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[];\\n  maxZoom?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[];\\n  minHeight?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[];\\n  minWidth?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[];\\n  minZoom?: ViewportMinZoomProperty | ViewportMinZoomProperty[];\\n  orientation?: ViewportOrientationProperty | ViewportOrientationProperty[];\\n  userZoom?: ViewportUserZoomProperty | ViewportUserZoomProperty[];\\n  width?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[];\\n  zoom?: ViewportZoomProperty | ViewportZoomProperty[];\\n}\\n\\nexport interface ViewportHyphenFallback<TLength = string | 0> {\\n  \\"-ms-height\\"?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[];\\n  \\"-ms-max-height\\"?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[];\\n  \\"-ms-max-width\\"?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[];\\n  \\"-ms-max-zoom\\"?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[];\\n  \\"-ms-min-height\\"?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[];\\n  \\"-ms-min-width\\"?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[];\\n  \\"-ms-min-zoom\\"?: ViewportMinZoomProperty | ViewportMinZoomProperty[];\\n  \\"-ms-orientation\\"?: ViewportOrientationProperty | ViewportOrientationProperty[];\\n  \\"-ms-user-zoom\\"?: ViewportUserZoomProperty | ViewportUserZoomProperty[];\\n  \\"-ms-width\\"?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[];\\n  \\"-ms-zoom\\"?: ViewportZoomProperty | ViewportZoomProperty[];\\n  \\"-o-orientation\\"?: ViewportOrientationProperty | ViewportOrientationProperty[];\\n  height?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[];\\n  \\"max-height\\"?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[];\\n  \\"max-width\\"?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[];\\n  \\"max-zoom\\"?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[];\\n  \\"min-height\\"?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[];\\n  \\"min-width\\"?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[];\\n  \\"min-zoom\\"?: ViewportMinZoomProperty | ViewportMinZoomProperty[];\\n  orientation?: ViewportOrientationProperty | ViewportOrientationProperty[];\\n  \\"user-zoom\\"?: ViewportUserZoomProperty | ViewportUserZoomProperty[];\\n  width?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[];\\n  zoom?: ViewportZoomProperty | ViewportZoomProperty[];\\n}\\n\\nexport type AtRules =\\n  | \\"@charset\\"\\n  | \\"@counter-style\\"\\n  | \\"@document\\"\\n  | \\"@font-face\\"\\n  | \\"@font-feature-values\\"\\n  | \\"@import\\"\\n  | \\"@keyframes\\"\\n  | \\"@media\\"\\n  | \\"@namespace\\"\\n  | \\"@page\\"\\n  | \\"@supports\\"\\n  | \\"@viewport\\";\\n\\nexport type AdvancedPseudos =\\n  | \\":-moz-any()\\"\\n  | \\":-moz-dir\\"\\n  | \\":-webkit-any()\\"\\n  | \\"::cue\\"\\n  | \\"::cue-region\\"\\n  | \\"::part\\"\\n  | \\"::slotted\\"\\n  | \\":dir\\"\\n  | \\":has\\"\\n  | \\":host\\"\\n  | \\":host-context\\"\\n  | \\":is\\"\\n  | \\":lang\\"\\n  | \\":matches()\\"\\n  | \\":not\\"\\n  | \\":nth-child\\"\\n  | \\":nth-last-child\\"\\n  | \\":nth-last-of-type\\"\\n  | \\":nth-of-type\\"\\n  | \\":where\\";\\n\\nexport type SimplePseudos =\\n  | \\":-khtml-any-link\\"\\n  | \\":-moz-any-link\\"\\n  | \\":-moz-focusring\\"\\n  | \\":-moz-full-screen\\"\\n  | \\":-moz-placeholder\\"\\n  | \\":-moz-read-only\\"\\n  | \\":-moz-read-write\\"\\n  | \\":-ms-fullscreen\\"\\n  | \\":-ms-input-placeholder\\"\\n  | \\":-webkit-any-link\\"\\n  | \\":-webkit-full-screen\\"\\n  | \\"::-moz-placeholder\\"\\n  | \\"::-moz-progress-bar\\"\\n  | \\"::-moz-range-progress\\"\\n  | \\"::-moz-range-thumb\\"\\n  | \\"::-moz-range-track\\"\\n  | \\"::-moz-selection\\"\\n  | \\"::-ms-backdrop\\"\\n  | \\"::-ms-browse\\"\\n  | \\"::-ms-check\\"\\n  | \\"::-ms-clear\\"\\n  | \\"::-ms-fill\\"\\n  | \\"::-ms-fill-lower\\"\\n  | \\"::-ms-fill-upper\\"\\n  | \\"::-ms-input-placeholder\\"\\n  | \\"::-ms-reveal\\"\\n  | \\"::-ms-thumb\\"\\n  | \\"::-ms-ticks-after\\"\\n  | \\"::-ms-ticks-before\\"\\n  | \\"::-ms-tooltip\\"\\n  | \\"::-ms-track\\"\\n  | \\"::-ms-value\\"\\n  | \\"::-webkit-backdrop\\"\\n  | \\"::-webkit-input-placeholder\\"\\n  | \\"::-webkit-progress-bar\\"\\n  | \\"::-webkit-progress-inner-value\\"\\n  | \\"::-webkit-progress-value\\"\\n  | \\"::-webkit-slider-runnable-track\\"\\n  | \\"::-webkit-slider-thumb\\"\\n  | \\"::after\\"\\n  | \\"::backdrop\\"\\n  | \\"::before\\"\\n  | \\"::cue\\"\\n  | \\"::cue-region\\"\\n  | \\"::first-letter\\"\\n  | \\"::first-line\\"\\n  | \\"::grammar-error\\"\\n  | \\"::marker\\"\\n  | \\"::placeholder\\"\\n  | \\"::selection\\"\\n  | \\"::spelling-error\\"\\n  | \\":active\\"\\n  | \\":after\\"\\n  | \\":any-link\\"\\n  | \\":before\\"\\n  | \\":blank\\"\\n  | \\":checked\\"\\n  | \\":default\\"\\n  | \\":defined\\"\\n  | \\":disabled\\"\\n  | \\":empty\\"\\n  | \\":enabled\\"\\n  | \\":first\\"\\n  | \\":first-child\\"\\n  | \\":first-letter\\"\\n  | \\":first-line\\"\\n  | \\":first-of-type\\"\\n  | \\":focus\\"\\n  | \\":focus-visible\\"\\n  | \\":focus-within\\"\\n  | \\":fullscreen\\"\\n  | \\":hover\\"\\n  | \\":in-range\\"\\n  | \\":indeterminate\\"\\n  | \\":invalid\\"\\n  | \\":last-child\\"\\n  | \\":last-of-type\\"\\n  | \\":left\\"\\n  | \\":link\\"\\n  | \\":only-child\\"\\n  | \\":only-of-type\\"\\n  | \\":optional\\"\\n  | \\":out-of-range\\"\\n  | \\":placeholder-shown\\"\\n  | \\":read-only\\"\\n  | \\":read-write\\"\\n  | \\":required\\"\\n  | \\":right\\"\\n  | \\":root\\"\\n  | \\":scope\\"\\n  | \\":target\\"\\n  | \\":valid\\"\\n  | \\":visited\\";\\n\\nexport type Pseudos = AdvancedPseudos | SimplePseudos;\\n\\nexport type HtmlAttributes =\\n  | \\"[-webkit-dropzone]\\"\\n  | \\"[-webkit-slot]\\"\\n  | \\"[abbr]\\"\\n  | \\"[accept-charset]\\"\\n  | \\"[accept]\\"\\n  | \\"[accesskey]\\"\\n  | \\"[action]\\"\\n  | \\"[align]\\"\\n  | \\"[alink]\\"\\n  | \\"[allow]\\"\\n  | \\"[allowfullscreen]\\"\\n  | \\"[allowpaymentrequest]\\"\\n  | \\"[alt]\\"\\n  | \\"[archive]\\"\\n  | \\"[async]\\"\\n  | \\"[autobuffer]\\"\\n  | \\"[autocapitalize]\\"\\n  | \\"[autocomplete]\\"\\n  | \\"[autofocus]\\"\\n  | \\"[autoplay]\\"\\n  | \\"[axis]\\"\\n  | \\"[background]\\"\\n  | \\"[behavior]\\"\\n  | \\"[bgcolor]\\"\\n  | \\"[border]\\"\\n  | \\"[bottommargin]\\"\\n  | \\"[buffered]\\"\\n  | \\"[cellpadding]\\"\\n  | \\"[cellspacing]\\"\\n  | \\"[char]\\"\\n  | \\"[charoff]\\"\\n  | \\"[charset]\\"\\n  | \\"[checked]\\"\\n  | \\"[cite]\\"\\n  | \\"[class]\\"\\n  | \\"[classid]\\"\\n  | \\"[clear]\\"\\n  | \\"[code]\\"\\n  | \\"[codebase]\\"\\n  | \\"[codetype]\\"\\n  | \\"[color]\\"\\n  | \\"[cols]\\"\\n  | \\"[colspan]\\"\\n  | \\"[command]\\"\\n  | \\"[compact]\\"\\n  | \\"[content]\\"\\n  | \\"[contenteditable]\\"\\n  | \\"[contextmenu]\\"\\n  | \\"[controls]\\"\\n  | \\"[coords]\\"\\n  | \\"[crossorigin]\\"\\n  | \\"[data]\\"\\n  | \\"[datafld]\\"\\n  | \\"[datasrc]\\"\\n  | \\"[datetime]\\"\\n  | \\"[declare]\\"\\n  | \\"[decoding]\\"\\n  | \\"[default]\\"\\n  | \\"[defer]\\"\\n  | \\"[dir]\\"\\n  | \\"[direction]\\"\\n  | \\"[disabled]\\"\\n  | \\"[download]\\"\\n  | \\"[draggable]\\"\\n  | \\"[dropzone]\\"\\n  | \\"[enctype]\\"\\n  | \\"[exportparts]\\"\\n  | \\"[face]\\"\\n  | \\"[for]\\"\\n  | \\"[form]\\"\\n  | \\"[formaction]\\"\\n  | \\"[formenctype]\\"\\n  | \\"[formmethod]\\"\\n  | \\"[formnovalidate]\\"\\n  | \\"[formtarget]\\"\\n  | \\"[frame]\\"\\n  | \\"[frameborder]\\"\\n  | \\"[headers]\\"\\n  | \\"[height]\\"\\n  | \\"[hidden]\\"\\n  | \\"[high]\\"\\n  | \\"[href]\\"\\n  | \\"[hreflang]\\"\\n  | \\"[hspace]\\"\\n  | \\"[http-equiv]\\"\\n  | \\"[icon]\\"\\n  | \\"[id]\\"\\n  | \\"[inputmode]\\"\\n  | \\"[integrity]\\"\\n  | \\"[intrinsicsize]\\"\\n  | \\"[is]\\"\\n  | \\"[ismap]\\"\\n  | \\"[itemid]\\"\\n  | \\"[itemprop]\\"\\n  | \\"[itemref]\\"\\n  | \\"[itemscope]\\"\\n  | \\"[itemtype]\\"\\n  | \\"[kind]\\"\\n  | \\"[label]\\"\\n  | \\"[lang]\\"\\n  | \\"[language]\\"\\n  | \\"[leftmargin]\\"\\n  | \\"[link]\\"\\n  | \\"[loading]\\"\\n  | \\"[longdesc]\\"\\n  | \\"[loop]\\"\\n  | \\"[low]\\"\\n  | \\"[manifest]\\"\\n  | \\"[marginheight]\\"\\n  | \\"[marginwidth]\\"\\n  | \\"[max]\\"\\n  | \\"[maxlength]\\"\\n  | \\"[mayscript]\\"\\n  | \\"[media]\\"\\n  | \\"[method]\\"\\n  | \\"[methods]\\"\\n  | \\"[min]\\"\\n  | \\"[minlength]\\"\\n  | \\"[moz-opaque]\\"\\n  | \\"[mozallowfullscreen]\\"\\n  | \\"[mozbrowser]\\"\\n  | \\"[mozcurrentsampleoffset]\\"\\n  | \\"[msallowfullscreen]\\"\\n  | \\"[multiple]\\"\\n  | \\"[muted]\\"\\n  | \\"[name]\\"\\n  | \\"[nohref]\\"\\n  | \\"[nomodule]\\"\\n  | \\"[noresize]\\"\\n  | \\"[noshade]\\"\\n  | \\"[novalidate]\\"\\n  | \\"[nowrap]\\"\\n  | \\"[object]\\"\\n  | \\"[onafterprint]\\"\\n  | \\"[onbeforeprint]\\"\\n  | \\"[onbeforeunload]\\"\\n  | \\"[onblur]\\"\\n  | \\"[onerror]\\"\\n  | \\"[onfocus]\\"\\n  | \\"[onhashchange]\\"\\n  | \\"[onlanguagechange]\\"\\n  | \\"[onload]\\"\\n  | \\"[onmessage]\\"\\n  | \\"[onoffline]\\"\\n  | \\"[ononline]\\"\\n  | \\"[onpopstate]\\"\\n  | \\"[onredo]\\"\\n  | \\"[onresize]\\"\\n  | \\"[onstorage]\\"\\n  | \\"[onundo]\\"\\n  | \\"[onunload]\\"\\n  | \\"[open]\\"\\n  | \\"[optimum]\\"\\n  | \\"[part]\\"\\n  | \\"[ping]\\"\\n  | \\"[placeholder]\\"\\n  | \\"[played]\\"\\n  | \\"[poster]\\"\\n  | \\"[prefetch]\\"\\n  | \\"[preload]\\"\\n  | \\"[profile]\\"\\n  | \\"[prompt]\\"\\n  | \\"[radiogroup]\\"\\n  | \\"[readonly]\\"\\n  | \\"[referrerPolicy]\\"\\n  | \\"[referrerpolicy]\\"\\n  | \\"[rel]\\"\\n  | \\"[required]\\"\\n  | \\"[rev]\\"\\n  | \\"[reversed]\\"\\n  | \\"[rightmargin]\\"\\n  | \\"[rows]\\"\\n  | \\"[rowspan]\\"\\n  | \\"[rules]\\"\\n  | \\"[sandbox-allow-modals]\\"\\n  | \\"[sandbox-allow-popups-to-escape-sandbox]\\"\\n  | \\"[sandbox-allow-popups]\\"\\n  | \\"[sandbox-allow-presentation]\\"\\n  | \\"[sandbox-allow-storage-access-by-user-activation]\\"\\n  | \\"[sandbox-allow-top-navigation-by-user-activation]\\"\\n  | \\"[sandbox]\\"\\n  | \\"[scope]\\"\\n  | \\"[scoped]\\"\\n  | \\"[scrollamount]\\"\\n  | \\"[scrolldelay]\\"\\n  | \\"[scrolling]\\"\\n  | \\"[selected]\\"\\n  | \\"[shape]\\"\\n  | \\"[size]\\"\\n  | \\"[sizes]\\"\\n  | \\"[slot]\\"\\n  | \\"[span]\\"\\n  | \\"[spellcheck]\\"\\n  | \\"[src]\\"\\n  | \\"[srcdoc]\\"\\n  | \\"[srclang]\\"\\n  | \\"[srcset]\\"\\n  | \\"[standby]\\"\\n  | \\"[start]\\"\\n  | \\"[style]\\"\\n  | \\"[summary]\\"\\n  | \\"[tabindex]\\"\\n  | \\"[target]\\"\\n  | \\"[text]\\"\\n  | \\"[title]\\"\\n  | \\"[topmargin]\\"\\n  | \\"[translate]\\"\\n  | \\"[truespeed]\\"\\n  | \\"[type]\\"\\n  | \\"[typemustmatch]\\"\\n  | \\"[usemap]\\"\\n  | \\"[valign]\\"\\n  | \\"[value]\\"\\n  | \\"[valuetype]\\"\\n  | \\"[version]\\"\\n  | \\"[vlink]\\"\\n  | \\"[volume]\\"\\n  | \\"[vspace]\\"\\n  | \\"[webkitallowfullscreen]\\"\\n  | \\"[width]\\"\\n  | \\"[wrap]\\"\\n  | \\"[xmlns]\\";\\n\\nexport type SvgAttributes =\\n  | \\"[accent-height]\\"\\n  | \\"[alignment-baseline]\\"\\n  | \\"[allowReorder]\\"\\n  | \\"[alphabetic]\\"\\n  | \\"[animation]\\"\\n  | \\"[arabic-form]\\"\\n  | \\"[ascent]\\"\\n  | \\"[attributeName]\\"\\n  | \\"[attributeType]\\"\\n  | \\"[azimuth]\\"\\n  | \\"[baseFrequency]\\"\\n  | \\"[baseProfile]\\"\\n  | \\"[baseline-shift]\\"\\n  | \\"[bbox]\\"\\n  | \\"[begin]\\"\\n  | \\"[bias]\\"\\n  | \\"[by]\\"\\n  | \\"[calcMode]\\"\\n  | \\"[cap-height]\\"\\n  | \\"[class]\\"\\n  | \\"[clip-path]\\"\\n  | \\"[clip-rule]\\"\\n  | \\"[clipPathUnits]\\"\\n  | \\"[clip]\\"\\n  | \\"[color-interpolation-filters]\\"\\n  | \\"[color-interpolation]\\"\\n  | \\"[color-profile]\\"\\n  | \\"[color-rendering]\\"\\n  | \\"[color]\\"\\n  | \\"[contentScriptType]\\"\\n  | \\"[contentStyleType]\\"\\n  | \\"[cursor]\\"\\n  | \\"[cx]\\"\\n  | \\"[cy]\\"\\n  | \\"[d]\\"\\n  | \\"[descent]\\"\\n  | \\"[diffuseConstant]\\"\\n  | \\"[direction]\\"\\n  | \\"[display]\\"\\n  | \\"[divisor]\\"\\n  | \\"[document]\\"\\n  | \\"[dominant-baseline]\\"\\n  | \\"[download]\\"\\n  | \\"[dur]\\"\\n  | \\"[dx]\\"\\n  | \\"[dy]\\"\\n  | \\"[edgeMode]\\"\\n  | \\"[elevation]\\"\\n  | \\"[enable-background]\\"\\n  | \\"[externalResourcesRequired]\\"\\n  | \\"[fill-opacity]\\"\\n  | \\"[fill-rule]\\"\\n  | \\"[fill]\\"\\n  | \\"[filterRes]\\"\\n  | \\"[filterUnits]\\"\\n  | \\"[filter]\\"\\n  | \\"[flood-color]\\"\\n  | \\"[flood-opacity]\\"\\n  | \\"[font-family]\\"\\n  | \\"[font-size-adjust]\\"\\n  | \\"[font-size]\\"\\n  | \\"[font-stretch]\\"\\n  | \\"[font-style]\\"\\n  | \\"[font-variant]\\"\\n  | \\"[font-weight]\\"\\n  | \\"[format]\\"\\n  | \\"[fr]\\"\\n  | \\"[from]\\"\\n  | \\"[fx]\\"\\n  | \\"[fy]\\"\\n  | \\"[g1]\\"\\n  | \\"[g2]\\"\\n  | \\"[global]\\"\\n  | \\"[glyph-name]\\"\\n  | \\"[glyph-orientation-horizontal]\\"\\n  | \\"[glyph-orientation-vertical]\\"\\n  | \\"[glyphRef]\\"\\n  | \\"[gradientTransform]\\"\\n  | \\"[gradientUnits]\\"\\n  | \\"[graphical]\\"\\n  | \\"[hanging]\\"\\n  | \\"[hatchContentUnits]\\"\\n  | \\"[hatchUnits]\\"\\n  | \\"[height]\\"\\n  | \\"[horiz-adv-x]\\"\\n  | \\"[horiz-origin-x]\\"\\n  | \\"[horiz-origin-y]\\"\\n  | \\"[href]\\"\\n  | \\"[hreflang]\\"\\n  | \\"[id]\\"\\n  | \\"[ideographic]\\"\\n  | \\"[image-rendering]\\"\\n  | \\"[in2]\\"\\n  | \\"[in]\\"\\n  | \\"[k1]\\"\\n  | \\"[k2]\\"\\n  | \\"[k3]\\"\\n  | \\"[k4]\\"\\n  | \\"[k]\\"\\n  | \\"[kernelMatrix]\\"\\n  | \\"[kernelUnitLength]\\"\\n  | \\"[kerning]\\"\\n  | \\"[keyPoints]\\"\\n  | \\"[lang]\\"\\n  | \\"[lengthAdjust]\\"\\n  | \\"[letter-spacing]\\"\\n  | \\"[lighterForError]\\"\\n  | \\"[lighting-color]\\"\\n  | \\"[limitingConeAngle]\\"\\n  | \\"[local]\\"\\n  | \\"[marker-end]\\"\\n  | \\"[marker-mid]\\"\\n  | \\"[marker-start]\\"\\n  | \\"[markerHeight]\\"\\n  | \\"[markerUnits]\\"\\n  | \\"[markerWidth]\\"\\n  | \\"[maskContentUnits]\\"\\n  | \\"[maskUnits]\\"\\n  | \\"[mask]\\"\\n  | \\"[mathematical]\\"\\n  | \\"[media]\\"\\n  | \\"[method]\\"\\n  | \\"[mode]\\"\\n  | \\"[name]\\"\\n  | \\"[numOctaves]\\"\\n  | \\"[offset]\\"\\n  | \\"[opacity]\\"\\n  | \\"[operator]\\"\\n  | \\"[order]\\"\\n  | \\"[orient]\\"\\n  | \\"[orientation]\\"\\n  | \\"[origin]\\"\\n  | \\"[overflow]\\"\\n  | \\"[overline-position]\\"\\n  | \\"[overline-thickness]\\"\\n  | \\"[paint-order]\\"\\n  | \\"[panose-1]\\"\\n  | \\"[path]\\"\\n  | \\"[patternContentUnits]\\"\\n  | \\"[patternTransform]\\"\\n  | \\"[patternUnits]\\"\\n  | \\"[ping]\\"\\n  | \\"[pitch]\\"\\n  | \\"[pointer-events]\\"\\n  | \\"[pointsAtX]\\"\\n  | \\"[pointsAtY]\\"\\n  | \\"[pointsAtZ]\\"\\n  | \\"[points]\\"\\n  | \\"[preserveAlpha]\\"\\n  | \\"[preserveAspectRatio]\\"\\n  | \\"[primitiveUnits]\\"\\n  | \\"[r]\\"\\n  | \\"[radius]\\"\\n  | \\"[refX]\\"\\n  | \\"[refY]\\"\\n  | \\"[referrerPolicy]\\"\\n  | \\"[rel]\\"\\n  | \\"[rendering-intent]\\"\\n  | \\"[repeatCount]\\"\\n  | \\"[requiredExtensions]\\"\\n  | \\"[requiredFeatures]\\"\\n  | \\"[rotate]\\"\\n  | \\"[rx]\\"\\n  | \\"[ry]\\"\\n  | \\"[scale]\\"\\n  | \\"[seed]\\"\\n  | \\"[shape-rendering]\\"\\n  | \\"[side]\\"\\n  | \\"[slope]\\"\\n  | \\"[solid-color]\\"\\n  | \\"[solid-opacity]\\"\\n  | \\"[spacing]\\"\\n  | \\"[specularConstant]\\"\\n  | \\"[specularExponent]\\"\\n  | \\"[spreadMethod]\\"\\n  | \\"[startOffset]\\"\\n  | \\"[stdDeviation]\\"\\n  | \\"[stemh]\\"\\n  | \\"[stemv]\\"\\n  | \\"[stitchTiles]\\"\\n  | \\"[stop-color]\\"\\n  | \\"[stop-opacity]\\"\\n  | \\"[strikethrough-position]\\"\\n  | \\"[strikethrough-thickness]\\"\\n  | \\"[string]\\"\\n  | \\"[stroke-dasharray]\\"\\n  | \\"[stroke-dashoffset]\\"\\n  | \\"[stroke-linecap]\\"\\n  | \\"[stroke-linejoin]\\"\\n  | \\"[stroke-miterlimit]\\"\\n  | \\"[stroke-opacity]\\"\\n  | \\"[stroke-width]\\"\\n  | \\"[stroke]\\"\\n  | \\"[style]\\"\\n  | \\"[surfaceScale]\\"\\n  | \\"[systemLanguage]\\"\\n  | \\"[tabindex]\\"\\n  | \\"[targetX]\\"\\n  | \\"[targetY]\\"\\n  | \\"[target]\\"\\n  | \\"[text-anchor]\\"\\n  | \\"[text-decoration]\\"\\n  | \\"[text-overflow]\\"\\n  | \\"[text-rendering]\\"\\n  | \\"[textLength]\\"\\n  | \\"[title]\\"\\n  | \\"[to]\\"\\n  | \\"[transform]\\"\\n  | \\"[type]\\"\\n  | \\"[u1]\\"\\n  | \\"[u2]\\"\\n  | \\"[underline-position]\\"\\n  | \\"[underline-thickness]\\"\\n  | \\"[unicode-bidi]\\"\\n  | \\"[unicode-range]\\"\\n  | \\"[unicode]\\"\\n  | \\"[units-per-em]\\"\\n  | \\"[v-alphabetic]\\"\\n  | \\"[v-hanging]\\"\\n  | \\"[v-ideographic]\\"\\n  | \\"[v-mathematical]\\"\\n  | \\"[values]\\"\\n  | \\"[vector-effect]\\"\\n  | \\"[version]\\"\\n  | \\"[vert-adv-y]\\"\\n  | \\"[vert-origin-x]\\"\\n  | \\"[vert-origin-y]\\"\\n  | \\"[viewBox]\\"\\n  | \\"[viewTarget]\\"\\n  | \\"[visibility]\\"\\n  | \\"[white-space]\\"\\n  | \\"[width]\\"\\n  | \\"[widths]\\"\\n  | \\"[word-spacing]\\"\\n  | \\"[writing-mode]\\"\\n  | \\"[x-height]\\"\\n  | \\"[x1]\\"\\n  | \\"[x2]\\"\\n  | \\"[xChannelSelector]\\"\\n  | \\"[x]\\"\\n  | \\"[y1]\\"\\n  | \\"[y2]\\"\\n  | \\"[yChannelSelector]\\"\\n  | \\"[y]\\"\\n  | \\"[z]\\"\\n  | \\"[zoomAndPan]\\";\\n\\nexport type Globals = \\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\";\\n\\ntype GlobalsString = Globals | string;\\n\\ntype GlobalsNumber = Globals | number;\\n\\nexport type AlignContentProperty = Globals | ContentDistribution | ContentPosition | \\"baseline\\" | \\"normal\\" | string;\\n\\nexport type AlignItemsProperty = Globals | SelfPosition | \\"baseline\\" | \\"normal\\" | \\"stretch\\" | string;\\n\\nexport type AlignSelfProperty = Globals | SelfPosition | \\"auto\\" | \\"baseline\\" | \\"normal\\" | \\"stretch\\" | string;\\n\\nexport type AnimationProperty = Globals | SingleAnimation | string;\\n\\nexport type AnimationDirectionProperty = Globals | SingleAnimationDirection | string;\\n\\nexport type AnimationFillModeProperty = Globals | SingleAnimationFillMode | string;\\n\\nexport type AnimationIterationCountProperty = Globals | \\"infinite\\" | string | number;\\n\\nexport type AnimationNameProperty = Globals | \\"none\\" | string;\\n\\nexport type AnimationPlayStateProperty = Globals | \\"paused\\" | \\"running\\" | string;\\n\\nexport type AnimationTimingFunctionProperty = Globals | TimingFunction | string;\\n\\nexport type AppearanceProperty = Globals | Compat | \\"button\\" | \\"none\\" | \\"textfield\\";\\n\\nexport type AspectRatioProperty = Globals | \\"auto\\" | string;\\n\\nexport type BackdropFilterProperty = Globals | \\"none\\" | string;\\n\\nexport type BackfaceVisibilityProperty = Globals | \\"hidden\\" | \\"visible\\";\\n\\nexport type BackgroundProperty<TLength> = Globals | FinalBgLayer<TLength> | string;\\n\\nexport type BackgroundAttachmentProperty = Globals | Attachment | string;\\n\\nexport type BackgroundBlendModeProperty = Globals | BlendMode | string;\\n\\nexport type BackgroundClipProperty = Globals | Box | string;\\n\\nexport type BackgroundColorProperty = Globals | Color;\\n\\nexport type BackgroundImageProperty = Globals | \\"none\\" | string;\\n\\nexport type BackgroundOriginProperty = Globals | Box | string;\\n\\nexport type BackgroundPositionProperty<TLength> = Globals | BgPosition<TLength> | string;\\n\\nexport type BackgroundPositionXProperty<TLength> = Globals | TLength | \\"center\\" | \\"left\\" | \\"right\\" | \\"x-end\\" | \\"x-start\\" | string;\\n\\nexport type BackgroundPositionYProperty<TLength> = Globals | TLength | \\"bottom\\" | \\"center\\" | \\"top\\" | \\"y-end\\" | \\"y-start\\" | string;\\n\\nexport type BackgroundRepeatProperty = Globals | RepeatStyle | string;\\n\\nexport type BackgroundSizeProperty<TLength> = Globals | BgSize<TLength> | string;\\n\\nexport type BlockOverflowProperty = Globals | \\"clip\\" | \\"ellipsis\\" | string;\\n\\nexport type BlockSizeProperty<TLength> = Globals | TLength | \\"-moz-max-content\\" | \\"-moz-min-content\\" | \\"auto\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\nexport type BorderProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderBlockProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderBlockColorProperty = Globals | Color | string;\\n\\nexport type BorderBlockEndProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderBlockEndColorProperty = Globals | Color;\\n\\nexport type BorderBlockEndStyleProperty = Globals | LineStyle;\\n\\nexport type BorderBlockEndWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderBlockStartProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderBlockStartColorProperty = Globals | Color;\\n\\nexport type BorderBlockStartStyleProperty = Globals | LineStyle;\\n\\nexport type BorderBlockStartWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderBlockStyleProperty = Globals | LineStyle;\\n\\nexport type BorderBlockWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderBottomProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderBottomColorProperty = Globals | Color;\\n\\nexport type BorderBottomLeftRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderBottomRightRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderBottomStyleProperty = Globals | LineStyle;\\n\\nexport type BorderBottomWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderCollapseProperty = Globals | \\"collapse\\" | \\"separate\\";\\n\\nexport type BorderColorProperty = Globals | Color | string;\\n\\nexport type BorderEndEndRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderEndStartRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderImageProperty = Globals | \\"none\\" | \\"repeat\\" | \\"round\\" | \\"space\\" | \\"stretch\\" | string | number;\\n\\nexport type BorderImageOutsetProperty<TLength> = Globals | TLength | string | number;\\n\\nexport type BorderImageRepeatProperty = Globals | \\"repeat\\" | \\"round\\" | \\"space\\" | \\"stretch\\" | string;\\n\\nexport type BorderImageSliceProperty = Globals | string | number;\\n\\nexport type BorderImageSourceProperty = Globals | \\"none\\" | string;\\n\\nexport type BorderImageWidthProperty<TLength> = Globals | TLength | \\"auto\\" | string | number;\\n\\nexport type BorderInlineProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderInlineColorProperty = Globals | Color | string;\\n\\nexport type BorderInlineEndProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderInlineEndColorProperty = Globals | Color;\\n\\nexport type BorderInlineEndStyleProperty = Globals | LineStyle;\\n\\nexport type BorderInlineEndWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderInlineStartProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderInlineStartColorProperty = Globals | Color;\\n\\nexport type BorderInlineStartStyleProperty = Globals | LineStyle;\\n\\nexport type BorderInlineStartWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderInlineStyleProperty = Globals | LineStyle;\\n\\nexport type BorderInlineWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderLeftProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderLeftColorProperty = Globals | Color;\\n\\nexport type BorderLeftStyleProperty = Globals | LineStyle;\\n\\nexport type BorderLeftWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderRightProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderRightColorProperty = Globals | Color;\\n\\nexport type BorderRightStyleProperty = Globals | LineStyle;\\n\\nexport type BorderRightWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderSpacingProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderStartEndRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderStartStartRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderStyleProperty = Globals | LineStyle | string;\\n\\nexport type BorderTopProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type BorderTopColorProperty = Globals | Color;\\n\\nexport type BorderTopLeftRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderTopRightRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type BorderTopStyleProperty = Globals | LineStyle;\\n\\nexport type BorderTopWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type BorderWidthProperty<TLength> = Globals | LineWidth<TLength> | string;\\n\\nexport type BottomProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type BoxAlignProperty = Globals | \\"baseline\\" | \\"center\\" | \\"end\\" | \\"start\\" | \\"stretch\\";\\n\\nexport type BoxDecorationBreakProperty = Globals | \\"clone\\" | \\"slice\\";\\n\\nexport type BoxDirectionProperty = Globals | \\"inherit\\" | \\"normal\\" | \\"reverse\\";\\n\\nexport type BoxLinesProperty = Globals | \\"multiple\\" | \\"single\\";\\n\\nexport type BoxOrientProperty = Globals | \\"block-axis\\" | \\"horizontal\\" | \\"inherit\\" | \\"inline-axis\\" | \\"vertical\\";\\n\\nexport type BoxPackProperty = Globals | \\"center\\" | \\"end\\" | \\"justify\\" | \\"start\\";\\n\\nexport type BoxShadowProperty = Globals | \\"none\\" | string;\\n\\nexport type BoxSizingProperty = Globals | \\"border-box\\" | \\"content-box\\";\\n\\nexport type BreakAfterProperty =\\n  | Globals\\n  | \\"all\\"\\n  | \\"always\\"\\n  | \\"auto\\"\\n  | \\"avoid\\"\\n  | \\"avoid-column\\"\\n  | \\"avoid-page\\"\\n  | \\"avoid-region\\"\\n  | \\"column\\"\\n  | \\"left\\"\\n  | \\"page\\"\\n  | \\"recto\\"\\n  | \\"region\\"\\n  | \\"right\\"\\n  | \\"verso\\";\\n\\nexport type BreakBeforeProperty =\\n  | Globals\\n  | \\"all\\"\\n  | \\"always\\"\\n  | \\"auto\\"\\n  | \\"avoid\\"\\n  | \\"avoid-column\\"\\n  | \\"avoid-page\\"\\n  | \\"avoid-region\\"\\n  | \\"column\\"\\n  | \\"left\\"\\n  | \\"page\\"\\n  | \\"recto\\"\\n  | \\"region\\"\\n  | \\"right\\"\\n  | \\"verso\\";\\n\\nexport type BreakInsideProperty = Globals | \\"auto\\" | \\"avoid\\" | \\"avoid-column\\" | \\"avoid-page\\" | \\"avoid-region\\";\\n\\nexport type CaptionSideProperty = Globals | \\"block-end\\" | \\"block-start\\" | \\"bottom\\" | \\"inline-end\\" | \\"inline-start\\" | \\"top\\";\\n\\nexport type CaretColorProperty = Globals | Color | \\"auto\\";\\n\\nexport type ClearProperty = Globals | \\"both\\" | \\"inline-end\\" | \\"inline-start\\" | \\"left\\" | \\"none\\" | \\"right\\";\\n\\nexport type ClipProperty = Globals | \\"auto\\" | string;\\n\\nexport type ClipPathProperty = Globals | GeometryBox | \\"none\\" | string;\\n\\nexport type ColorProperty = Globals | Color;\\n\\nexport type ColorAdjustProperty = Globals | \\"economy\\" | \\"exact\\";\\n\\nexport type ColumnCountProperty = Globals | \\"auto\\" | number;\\n\\nexport type ColumnFillProperty = Globals | \\"auto\\" | \\"balance\\" | \\"balance-all\\";\\n\\nexport type ColumnGapProperty<TLength> = Globals | TLength | \\"normal\\" | string;\\n\\nexport type ColumnRuleProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type ColumnRuleColorProperty = Globals | Color;\\n\\nexport type ColumnRuleStyleProperty = Globals | LineStyle | string;\\n\\nexport type ColumnRuleWidthProperty<TLength> = Globals | LineWidth<TLength> | string;\\n\\nexport type ColumnSpanProperty = Globals | \\"all\\" | \\"none\\";\\n\\nexport type ColumnWidthProperty<TLength> = Globals | TLength | \\"auto\\";\\n\\nexport type ColumnsProperty<TLength> = Globals | TLength | \\"auto\\" | string | number;\\n\\nexport type ContainProperty = Globals | \\"content\\" | \\"layout\\" | \\"none\\" | \\"paint\\" | \\"size\\" | \\"strict\\" | \\"style\\" | string;\\n\\nexport type ContentProperty = Globals | ContentList | \\"none\\" | \\"normal\\" | string;\\n\\nexport type CounterIncrementProperty = Globals | \\"none\\" | string;\\n\\nexport type CounterResetProperty = Globals | \\"none\\" | string;\\n\\nexport type CounterSetProperty = Globals | \\"none\\" | string;\\n\\nexport type CursorProperty =\\n  | Globals\\n  | \\"-moz-grab\\"\\n  | \\"-webkit-grab\\"\\n  | \\"alias\\"\\n  | \\"all-scroll\\"\\n  | \\"auto\\"\\n  | \\"cell\\"\\n  | \\"col-resize\\"\\n  | \\"context-menu\\"\\n  | \\"copy\\"\\n  | \\"crosshair\\"\\n  | \\"default\\"\\n  | \\"e-resize\\"\\n  | \\"ew-resize\\"\\n  | \\"grab\\"\\n  | \\"grabbing\\"\\n  | \\"help\\"\\n  | \\"move\\"\\n  | \\"n-resize\\"\\n  | \\"ne-resize\\"\\n  | \\"nesw-resize\\"\\n  | \\"no-drop\\"\\n  | \\"none\\"\\n  | \\"not-allowed\\"\\n  | \\"ns-resize\\"\\n  | \\"nw-resize\\"\\n  | \\"nwse-resize\\"\\n  | \\"pointer\\"\\n  | \\"progress\\"\\n  | \\"row-resize\\"\\n  | \\"s-resize\\"\\n  | \\"se-resize\\"\\n  | \\"sw-resize\\"\\n  | \\"text\\"\\n  | \\"vertical-text\\"\\n  | \\"w-resize\\"\\n  | \\"wait\\"\\n  | \\"zoom-in\\"\\n  | \\"zoom-out\\"\\n  | string;\\n\\nexport type DirectionProperty = Globals | \\"ltr\\" | \\"rtl\\";\\n\\nexport type DisplayProperty = Globals | DisplayOutside | DisplayInside | DisplayInternal | DisplayLegacy | \\"contents\\" | \\"list-item\\" | \\"none\\" | string;\\n\\nexport type EmptyCellsProperty = Globals | \\"hide\\" | \\"show\\";\\n\\nexport type FilterProperty = Globals | \\"none\\" | string;\\n\\nexport type FlexProperty<TLength> = Globals | TLength | \\"auto\\" | \\"content\\" | \\"max-content\\" | \\"min-content\\" | \\"none\\" | string | number;\\n\\nexport type FlexBasisProperty<TLength> = Globals | TLength | \\"-moz-max-content\\" | \\"-moz-min-content\\" | \\"-webkit-auto\\" | \\"auto\\" | \\"content\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\nexport type FlexDirectionProperty = Globals | \\"column\\" | \\"column-reverse\\" | \\"row\\" | \\"row-reverse\\";\\n\\nexport type FlexFlowProperty = Globals | \\"column\\" | \\"column-reverse\\" | \\"nowrap\\" | \\"row\\" | \\"row-reverse\\" | \\"wrap\\" | \\"wrap-reverse\\" | string;\\n\\nexport type FlexWrapProperty = Globals | \\"nowrap\\" | \\"wrap\\" | \\"wrap-reverse\\";\\n\\nexport type FloatProperty = Globals | \\"inline-end\\" | \\"inline-start\\" | \\"left\\" | \\"none\\" | \\"right\\";\\n\\nexport type FontProperty = Globals | \\"caption\\" | \\"icon\\" | \\"menu\\" | \\"message-box\\" | \\"small-caption\\" | \\"status-bar\\" | string;\\n\\nexport type FontFamilyProperty = Globals | GenericFamily | string;\\n\\nexport type FontFeatureSettingsProperty = Globals | \\"normal\\" | string;\\n\\nexport type FontKerningProperty = Globals | \\"auto\\" | \\"none\\" | \\"normal\\";\\n\\nexport type FontLanguageOverrideProperty = Globals | \\"normal\\" | string;\\n\\nexport type FontOpticalSizingProperty = Globals | \\"auto\\" | \\"none\\";\\n\\nexport type FontSizeProperty<TLength> = Globals | AbsoluteSize | TLength | \\"larger\\" | \\"smaller\\" | string;\\n\\nexport type FontSizeAdjustProperty = Globals | \\"none\\" | number;\\n\\nexport type FontStretchProperty = Globals | FontStretchAbsolute;\\n\\nexport type FontStyleProperty = Globals | \\"italic\\" | \\"normal\\" | \\"oblique\\" | string;\\n\\nexport type FontSynthesisProperty = Globals | \\"none\\" | \\"style\\" | \\"weight\\" | string;\\n\\nexport type FontVariantProperty =\\n  | Globals\\n  | EastAsianVariantValues\\n  | \\"all-petite-caps\\"\\n  | \\"all-small-caps\\"\\n  | \\"common-ligatures\\"\\n  | \\"contextual\\"\\n  | \\"diagonal-fractions\\"\\n  | \\"discretionary-ligatures\\"\\n  | \\"full-width\\"\\n  | \\"historical-forms\\"\\n  | \\"historical-ligatures\\"\\n  | \\"lining-nums\\"\\n  | \\"no-common-ligatures\\"\\n  | \\"no-contextual\\"\\n  | \\"no-discretionary-ligatures\\"\\n  | \\"no-historical-ligatures\\"\\n  | \\"none\\"\\n  | \\"normal\\"\\n  | \\"oldstyle-nums\\"\\n  | \\"ordinal\\"\\n  | \\"petite-caps\\"\\n  | \\"proportional-nums\\"\\n  | \\"proportional-width\\"\\n  | \\"ruby\\"\\n  | \\"slashed-zero\\"\\n  | \\"small-caps\\"\\n  | \\"stacked-fractions\\"\\n  | \\"tabular-nums\\"\\n  | \\"titling-caps\\"\\n  | \\"unicase\\"\\n  | string;\\n\\nexport type FontVariantAlternatesProperty = Globals | \\"historical-forms\\" | \\"normal\\" | string;\\n\\nexport type FontVariantCapsProperty = Globals | \\"all-petite-caps\\" | \\"all-small-caps\\" | \\"normal\\" | \\"petite-caps\\" | \\"small-caps\\" | \\"titling-caps\\" | \\"unicase\\";\\n\\nexport type FontVariantEastAsianProperty = Globals | EastAsianVariantValues | \\"full-width\\" | \\"normal\\" | \\"proportional-width\\" | \\"ruby\\" | string;\\n\\nexport type FontVariantLigaturesProperty =\\n  | Globals\\n  | \\"common-ligatures\\"\\n  | \\"contextual\\"\\n  | \\"discretionary-ligatures\\"\\n  | \\"historical-ligatures\\"\\n  | \\"no-common-ligatures\\"\\n  | \\"no-contextual\\"\\n  | \\"no-discretionary-ligatures\\"\\n  | \\"no-historical-ligatures\\"\\n  | \\"none\\"\\n  | \\"normal\\"\\n  | string;\\n\\nexport type FontVariantNumericProperty =\\n  | Globals\\n  | \\"diagonal-fractions\\"\\n  | \\"lining-nums\\"\\n  | \\"normal\\"\\n  | \\"oldstyle-nums\\"\\n  | \\"ordinal\\"\\n  | \\"proportional-nums\\"\\n  | \\"slashed-zero\\"\\n  | \\"stacked-fractions\\"\\n  | \\"tabular-nums\\"\\n  | string;\\n\\nexport type FontVariantPositionProperty = Globals | \\"normal\\" | \\"sub\\" | \\"super\\";\\n\\nexport type FontVariationSettingsProperty = Globals | \\"normal\\" | string;\\n\\nexport type FontWeightProperty = Globals | FontWeightAbsolute | \\"bolder\\" | \\"lighter\\";\\n\\nexport type GapProperty<TLength> = Globals | TLength | \\"normal\\" | string;\\n\\nexport type GridProperty = Globals | \\"none\\" | string;\\n\\nexport type GridAreaProperty = Globals | GridLine | string;\\n\\nexport type GridAutoColumnsProperty<TLength> = Globals | TrackBreadth<TLength> | string;\\n\\nexport type GridAutoFlowProperty = Globals | \\"column\\" | \\"dense\\" | \\"row\\" | string;\\n\\nexport type GridAutoRowsProperty<TLength> = Globals | TrackBreadth<TLength> | string;\\n\\nexport type GridColumnProperty = Globals | GridLine | string;\\n\\nexport type GridColumnEndProperty = Globals | GridLine;\\n\\nexport type GridColumnGapProperty<TLength> = Globals | TLength | string;\\n\\nexport type GridColumnStartProperty = Globals | GridLine;\\n\\nexport type GridGapProperty<TLength> = Globals | TLength | string;\\n\\nexport type GridRowProperty = Globals | GridLine | string;\\n\\nexport type GridRowEndProperty = Globals | GridLine;\\n\\nexport type GridRowGapProperty<TLength> = Globals | TLength | string;\\n\\nexport type GridRowStartProperty = Globals | GridLine;\\n\\nexport type GridTemplateProperty = Globals | \\"none\\" | string;\\n\\nexport type GridTemplateAreasProperty = Globals | \\"none\\" | string;\\n\\nexport type GridTemplateColumnsProperty<TLength> = Globals | TrackBreadth<TLength> | \\"none\\" | \\"subgrid\\" | string;\\n\\nexport type GridTemplateRowsProperty<TLength> = Globals | TrackBreadth<TLength> | \\"none\\" | \\"subgrid\\" | string;\\n\\nexport type HangingPunctuationProperty = Globals | \\"allow-end\\" | \\"first\\" | \\"force-end\\" | \\"last\\" | \\"none\\" | string;\\n\\nexport type HeightProperty<TLength> = Globals | TLength | \\"-moz-max-content\\" | \\"-moz-min-content\\" | \\"auto\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\nexport type HyphensProperty = Globals | \\"auto\\" | \\"manual\\" | \\"none\\";\\n\\nexport type ImageOrientationProperty = Globals | \\"flip\\" | \\"from-image\\" | string;\\n\\nexport type ImageRenderingProperty = Globals | \\"-moz-crisp-edges\\" | \\"-webkit-optimize-contrast\\" | \\"auto\\" | \\"crisp-edges\\" | \\"pixelated\\";\\n\\nexport type ImageResolutionProperty = Globals | \\"from-image\\" | string;\\n\\nexport type ImeModeProperty = Globals | \\"active\\" | \\"auto\\" | \\"disabled\\" | \\"inactive\\" | \\"normal\\";\\n\\nexport type InitialLetterProperty = Globals | \\"normal\\" | string | number;\\n\\nexport type InlineSizeProperty<TLength> = Globals | TLength | \\"-moz-max-content\\" | \\"-moz-min-content\\" | \\"auto\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\nexport type InsetProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type InsetBlockProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type InsetBlockEndProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type InsetBlockStartProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type InsetInlineProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type InsetInlineEndProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type InsetInlineStartProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type IsolationProperty = Globals | \\"auto\\" | \\"isolate\\";\\n\\nexport type JustifyContentProperty = Globals | ContentDistribution | ContentPosition | \\"left\\" | \\"normal\\" | \\"right\\" | string;\\n\\nexport type JustifyItemsProperty = Globals | SelfPosition | \\"baseline\\" | \\"left\\" | \\"legacy\\" | \\"normal\\" | \\"right\\" | \\"stretch\\" | string;\\n\\nexport type JustifySelfProperty = Globals | SelfPosition | \\"auto\\" | \\"baseline\\" | \\"left\\" | \\"normal\\" | \\"right\\" | \\"stretch\\" | string;\\n\\nexport type LeftProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type LetterSpacingProperty<TLength> = Globals | TLength | \\"normal\\";\\n\\nexport type LineBreakProperty = Globals | \\"anywhere\\" | \\"auto\\" | \\"loose\\" | \\"normal\\" | \\"strict\\";\\n\\nexport type LineClampProperty = Globals | \\"none\\" | number;\\n\\nexport type LineHeightProperty<TLength> = Globals | TLength | \\"normal\\" | string | number;\\n\\nexport type LineHeightStepProperty<TLength> = Globals | TLength;\\n\\nexport type ListStyleProperty = Globals | \\"inside\\" | \\"none\\" | \\"outside\\" | string;\\n\\nexport type ListStyleImageProperty = Globals | \\"none\\" | string;\\n\\nexport type ListStylePositionProperty = Globals | \\"inside\\" | \\"outside\\";\\n\\nexport type ListStyleTypeProperty = Globals | \\"none\\" | string;\\n\\nexport type MarginProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginBlockProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginBlockEndProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginBlockStartProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginBottomProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginInlineProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginInlineEndProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginInlineStartProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginLeftProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginRightProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MarginTopProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type MaskProperty<TLength> = Globals | MaskLayer<TLength> | string;\\n\\nexport type MaskBorderProperty = Globals | \\"alpha\\" | \\"luminance\\" | \\"none\\" | \\"repeat\\" | \\"round\\" | \\"space\\" | \\"stretch\\" | string | number;\\n\\nexport type MaskBorderModeProperty = Globals | \\"alpha\\" | \\"luminance\\";\\n\\nexport type MaskBorderOutsetProperty<TLength> = Globals | TLength | string | number;\\n\\nexport type MaskBorderRepeatProperty = Globals | \\"repeat\\" | \\"round\\" | \\"space\\" | \\"stretch\\" | string;\\n\\nexport type MaskBorderSliceProperty = Globals | string | number;\\n\\nexport type MaskBorderSourceProperty = Globals | \\"none\\" | string;\\n\\nexport type MaskBorderWidthProperty<TLength> = Globals | TLength | \\"auto\\" | string | number;\\n\\nexport type MaskClipProperty = Globals | GeometryBox | \\"no-clip\\" | string;\\n\\nexport type MaskCompositeProperty = Globals | CompositingOperator | string;\\n\\nexport type MaskImageProperty = Globals | \\"none\\" | string;\\n\\nexport type MaskModeProperty = Globals | MaskingMode | string;\\n\\nexport type MaskOriginProperty = Globals | Box | \\"margin-box\\" | string;\\n\\nexport type MaskPositionProperty<TLength> = Globals | Position<TLength> | string;\\n\\nexport type MaskRepeatProperty = Globals | RepeatStyle | string;\\n\\nexport type MaskSizeProperty<TLength> = Globals | BgSize<TLength> | string;\\n\\nexport type MaskTypeProperty = Globals | \\"alpha\\" | \\"luminance\\";\\n\\nexport type MaxBlockSizeProperty<TLength> = Globals | TLength | \\"-moz-max-content\\" | \\"-moz-min-content\\" | \\"auto\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\nexport type MaxHeightProperty<TLength> =\\n  | Globals\\n  | TLength\\n  | \\"-moz-max-content\\"\\n  | \\"-moz-min-content\\"\\n  | \\"-webkit-max-content\\"\\n  | \\"-webkit-min-content\\"\\n  | \\"auto\\"\\n  | \\"max-content\\"\\n  | \\"min-content\\"\\n  | string;\\n\\nexport type MaxInlineSizeProperty<TLength> = Globals | TLength | \\"-moz-max-content\\" | \\"-moz-min-content\\" | \\"auto\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\nexport type MaxLinesProperty = Globals | \\"none\\" | number;\\n\\nexport type MaxWidthProperty<TLength> =\\n  | Globals\\n  | TLength\\n  | \\"-moz-max-content\\"\\n  | \\"-moz-min-content\\"\\n  | \\"-webkit-max-content\\"\\n  | \\"-webkit-min-content\\"\\n  | \\"auto\\"\\n  | \\"intrinsic\\"\\n  | \\"max-content\\"\\n  | \\"min-content\\"\\n  | string;\\n\\nexport type MinBlockSizeProperty<TLength> = Globals | TLength | \\"-moz-max-content\\" | \\"-moz-min-content\\" | \\"auto\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\nexport type MinHeightProperty<TLength> =\\n  | Globals\\n  | TLength\\n  | \\"-moz-max-content\\"\\n  | \\"-moz-min-content\\"\\n  | \\"-webkit-max-content\\"\\n  | \\"-webkit-min-content\\"\\n  | \\"auto\\"\\n  | \\"max-content\\"\\n  | \\"min-content\\"\\n  | string;\\n\\nexport type MinInlineSizeProperty<TLength> = Globals | TLength | \\"-moz-max-content\\" | \\"-moz-min-content\\" | \\"auto\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\nexport type MinWidthProperty<TLength> =\\n  | Globals\\n  | TLength\\n  | \\"-moz-max-content\\"\\n  | \\"-moz-min-content\\"\\n  | \\"-webkit-max-content\\"\\n  | \\"-webkit-min-content\\"\\n  | \\"auto\\"\\n  | \\"intrinsic\\"\\n  | \\"max-content\\"\\n  | \\"min-content\\"\\n  | \\"min-intrinsic\\"\\n  | string;\\n\\nexport type MixBlendModeProperty = Globals | BlendMode;\\n\\nexport type OffsetProperty<TLength> = Globals | Position<TLength> | GeometryBox | \\"auto\\" | \\"none\\" | string;\\n\\nexport type OffsetDistanceProperty<TLength> = Globals | TLength | string;\\n\\nexport type OffsetPathProperty = Globals | GeometryBox | \\"none\\" | string;\\n\\nexport type OffsetRotateProperty = Globals | \\"auto\\" | \\"reverse\\" | string;\\n\\nexport type ObjectFitProperty = Globals | \\"contain\\" | \\"cover\\" | \\"fill\\" | \\"none\\" | \\"scale-down\\";\\n\\nexport type ObjectPositionProperty<TLength> = Globals | Position<TLength>;\\n\\nexport type OffsetAnchorProperty<TLength> = Globals | Position<TLength> | \\"auto\\";\\n\\nexport type OpacityProperty = Globals | string | number;\\n\\nexport type OutlineProperty<TLength> = Globals | Color | LineStyle | LineWidth<TLength> | \\"auto\\" | \\"invert\\" | string;\\n\\nexport type OutlineColorProperty = Globals | Color | \\"invert\\";\\n\\nexport type OutlineOffsetProperty<TLength> = Globals | TLength;\\n\\nexport type OutlineStyleProperty = Globals | LineStyle | \\"auto\\" | string;\\n\\nexport type OutlineWidthProperty<TLength> = Globals | LineWidth<TLength>;\\n\\nexport type OverflowProperty = Globals | \\"auto\\" | \\"hidden\\" | \\"scroll\\" | \\"visible\\" | string;\\n\\nexport type OverflowAnchorProperty = Globals | \\"auto\\" | \\"none\\";\\n\\nexport type OverflowBlockProperty = Globals | \\"auto\\" | \\"clip\\" | \\"hidden\\" | \\"scroll\\" | \\"visible\\";\\n\\nexport type OverflowClipBoxProperty = Globals | \\"content-box\\" | \\"padding-box\\";\\n\\nexport type OverflowInlineProperty = Globals | \\"auto\\" | \\"clip\\" | \\"hidden\\" | \\"scroll\\" | \\"visible\\";\\n\\nexport type OverflowWrapProperty = Globals | \\"anywhere\\" | \\"break-word\\" | \\"normal\\";\\n\\nexport type OverflowXProperty = Globals | \\"auto\\" | \\"hidden\\" | \\"scroll\\" | \\"visible\\";\\n\\nexport type OverflowYProperty = Globals | \\"auto\\" | \\"hidden\\" | \\"scroll\\" | \\"visible\\";\\n\\nexport type OverscrollBehaviorProperty = Globals | \\"auto\\" | \\"contain\\" | \\"none\\" | string;\\n\\nexport type OverscrollBehaviorBlockProperty = Globals | \\"auto\\" | \\"contain\\" | \\"none\\";\\n\\nexport type OverscrollBehaviorInlineProperty = Globals | \\"auto\\" | \\"contain\\" | \\"none\\";\\n\\nexport type OverscrollBehaviorXProperty = Globals | \\"auto\\" | \\"contain\\" | \\"none\\";\\n\\nexport type OverscrollBehaviorYProperty = Globals | \\"auto\\" | \\"contain\\" | \\"none\\";\\n\\nexport type PaddingProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingBlockProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingBlockEndProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingBlockStartProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingBottomProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingInlineProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingInlineEndProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingInlineStartProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingLeftProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingRightProperty<TLength> = Globals | TLength | string;\\n\\nexport type PaddingTopProperty<TLength> = Globals | TLength | string;\\n\\nexport type PageBreakAfterProperty = Globals | \\"always\\" | \\"auto\\" | \\"avoid\\" | \\"left\\" | \\"recto\\" | \\"right\\" | \\"verso\\";\\n\\nexport type PageBreakBeforeProperty = Globals | \\"always\\" | \\"auto\\" | \\"avoid\\" | \\"left\\" | \\"recto\\" | \\"right\\" | \\"verso\\";\\n\\nexport type PageBreakInsideProperty = Globals | \\"auto\\" | \\"avoid\\";\\n\\nexport type PaintOrderProperty = Globals | \\"fill\\" | \\"markers\\" | \\"normal\\" | \\"stroke\\" | string;\\n\\nexport type PerspectiveProperty<TLength> = Globals | TLength | \\"none\\";\\n\\nexport type PerspectiveOriginProperty<TLength> = Globals | Position<TLength>;\\n\\nexport type PlaceContentProperty = Globals | ContentDistribution | ContentPosition | \\"baseline\\" | \\"normal\\" | string;\\n\\nexport type PlaceItemsProperty = Globals | SelfPosition | \\"baseline\\" | \\"normal\\" | \\"stretch\\" | string;\\n\\nexport type PlaceSelfProperty = Globals | SelfPosition | \\"auto\\" | \\"baseline\\" | \\"normal\\" | \\"stretch\\" | string;\\n\\nexport type PointerEventsProperty = Globals | \\"all\\" | \\"auto\\" | \\"fill\\" | \\"inherit\\" | \\"none\\" | \\"painted\\" | \\"stroke\\" | \\"visible\\" | \\"visibleFill\\" | \\"visiblePainted\\" | \\"visibleStroke\\";\\n\\nexport type PositionProperty = Globals | \\"-webkit-sticky\\" | \\"absolute\\" | \\"fixed\\" | \\"relative\\" | \\"static\\" | \\"sticky\\";\\n\\nexport type QuotesProperty = Globals | \\"auto\\" | \\"none\\" | string;\\n\\nexport type ResizeProperty = Globals | \\"block\\" | \\"both\\" | \\"horizontal\\" | \\"inline\\" | \\"none\\" | \\"vertical\\";\\n\\nexport type RightProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type RotateProperty = Globals | \\"none\\" | string;\\n\\nexport type RowGapProperty<TLength> = Globals | TLength | \\"normal\\" | string;\\n\\nexport type RubyAlignProperty = Globals | \\"center\\" | \\"space-around\\" | \\"space-between\\" | \\"start\\";\\n\\nexport type RubyMergeProperty = Globals | \\"auto\\" | \\"collapse\\" | \\"separate\\";\\n\\nexport type RubyPositionProperty = Globals | \\"over\\" | \\"under\\";\\n\\nexport type ScaleProperty = Globals | \\"none\\" | string | number;\\n\\nexport type ScrollBehaviorProperty = Globals | \\"auto\\" | \\"smooth\\";\\n\\nexport type ScrollMarginProperty<TLength> = Globals | TLength | string;\\n\\nexport type ScrollMarginBlockProperty<TLength> = Globals | TLength | string;\\n\\nexport type ScrollMarginBlockEndProperty<TLength> = Globals | TLength;\\n\\nexport type ScrollMarginBlockStartProperty<TLength> = Globals | TLength;\\n\\nexport type ScrollMarginBottomProperty<TLength> = Globals | TLength;\\n\\nexport type ScrollMarginInlineProperty<TLength> = Globals | TLength | string;\\n\\nexport type ScrollMarginInlineEndProperty<TLength> = Globals | TLength;\\n\\nexport type ScrollMarginInlineStartProperty<TLength> = Globals | TLength;\\n\\nexport type ScrollMarginLeftProperty<TLength> = Globals | TLength;\\n\\nexport type ScrollMarginRightProperty<TLength> = Globals | TLength;\\n\\nexport type ScrollMarginTopProperty<TLength> = Globals | TLength;\\n\\nexport type ScrollPaddingProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingBlockProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingBlockEndProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingBlockStartProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingBottomProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingInlineProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingInlineEndProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingInlineStartProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingLeftProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingRightProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollPaddingTopProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type ScrollSnapAlignProperty = Globals | \\"center\\" | \\"end\\" | \\"none\\" | \\"start\\" | string;\\n\\nexport type ScrollSnapCoordinateProperty<TLength> = Globals | Position<TLength> | \\"none\\" | string;\\n\\nexport type ScrollSnapDestinationProperty<TLength> = Globals | Position<TLength>;\\n\\nexport type ScrollSnapPointsXProperty = Globals | \\"none\\" | string;\\n\\nexport type ScrollSnapPointsYProperty = Globals | \\"none\\" | string;\\n\\nexport type ScrollSnapStopProperty = Globals | \\"always\\" | \\"normal\\";\\n\\nexport type ScrollSnapTypeProperty = Globals | \\"block\\" | \\"both\\" | \\"inline\\" | \\"none\\" | \\"x\\" | \\"y\\" | string;\\n\\nexport type ScrollSnapTypeXProperty = Globals | \\"mandatory\\" | \\"none\\" | \\"proximity\\";\\n\\nexport type ScrollSnapTypeYProperty = Globals | \\"mandatory\\" | \\"none\\" | \\"proximity\\";\\n\\nexport type ScrollbarColorProperty = Globals | Color | \\"auto\\" | \\"dark\\" | \\"light\\";\\n\\nexport type MsScrollbarTrackColorProperty = Globals | Color;\\n\\nexport type ScrollbarWidthProperty = Globals | \\"auto\\" | \\"none\\" | \\"thin\\";\\n\\nexport type ShapeImageThresholdProperty = Globals | string | number;\\n\\nexport type ShapeMarginProperty<TLength> = Globals | TLength | string;\\n\\nexport type ShapeOutsideProperty = Globals | Box | \\"margin-box\\" | \\"none\\" | string;\\n\\nexport type TabSizeProperty<TLength> = Globals | TLength | number;\\n\\nexport type TableLayoutProperty = Globals | \\"auto\\" | \\"fixed\\";\\n\\nexport type TextAlignProperty = Globals | \\"center\\" | \\"end\\" | \\"justify\\" | \\"left\\" | \\"match-parent\\" | \\"right\\" | \\"start\\";\\n\\nexport type TextAlignLastProperty = Globals | \\"auto\\" | \\"center\\" | \\"end\\" | \\"justify\\" | \\"left\\" | \\"right\\" | \\"start\\";\\n\\nexport type TextCombineUprightProperty = Globals | \\"all\\" | \\"digits\\" | \\"none\\" | string;\\n\\nexport type TextDecorationProperty<TLength> =\\n  | Globals\\n  | Color\\n  | TLength\\n  | \\"auto\\"\\n  | \\"blink\\"\\n  | \\"dashed\\"\\n  | \\"dotted\\"\\n  | \\"double\\"\\n  | \\"from-font\\"\\n  | \\"grammar-error\\"\\n  | \\"line-through\\"\\n  | \\"none\\"\\n  | \\"overline\\"\\n  | \\"solid\\"\\n  | \\"spelling-error\\"\\n  | \\"underline\\"\\n  | \\"wavy\\"\\n  | string;\\n\\nexport type TextDecorationColorProperty = Globals | Color;\\n\\nexport type TextDecorationLineProperty = Globals | \\"blink\\" | \\"grammar-error\\" | \\"line-through\\" | \\"none\\" | \\"overline\\" | \\"spelling-error\\" | \\"underline\\" | string;\\n\\nexport type TextDecorationSkipProperty = Globals | \\"box-decoration\\" | \\"edges\\" | \\"leading-spaces\\" | \\"none\\" | \\"objects\\" | \\"spaces\\" | \\"trailing-spaces\\" | string;\\n\\nexport type TextDecorationSkipInkProperty = Globals | \\"all\\" | \\"auto\\" | \\"none\\";\\n\\nexport type TextDecorationStyleProperty = Globals | \\"dashed\\" | \\"dotted\\" | \\"double\\" | \\"solid\\" | \\"wavy\\";\\n\\nexport type TextDecorationThicknessProperty<TLength> = Globals | TLength | \\"auto\\" | \\"from-font\\" | string;\\n\\nexport type TextEmphasisProperty = Globals | Color | \\"circle\\" | \\"dot\\" | \\"double-circle\\" | \\"filled\\" | \\"none\\" | \\"open\\" | \\"sesame\\" | \\"triangle\\" | string;\\n\\nexport type TextEmphasisColorProperty = Globals | Color;\\n\\nexport type TextEmphasisStyleProperty = Globals | \\"circle\\" | \\"dot\\" | \\"double-circle\\" | \\"filled\\" | \\"none\\" | \\"open\\" | \\"sesame\\" | \\"triangle\\" | string;\\n\\nexport type TextIndentProperty<TLength> = Globals | TLength | string;\\n\\nexport type TextJustifyProperty = Globals | \\"auto\\" | \\"inter-character\\" | \\"inter-word\\" | \\"none\\";\\n\\nexport type TextOrientationProperty = Globals | \\"mixed\\" | \\"sideways\\" | \\"upright\\";\\n\\nexport type TextOverflowProperty = Globals | \\"clip\\" | \\"ellipsis\\" | string;\\n\\nexport type TextRenderingProperty = Globals | \\"auto\\" | \\"geometricPrecision\\" | \\"optimizeLegibility\\" | \\"optimizeSpeed\\";\\n\\nexport type TextShadowProperty = Globals | \\"none\\" | string;\\n\\nexport type TextSizeAdjustProperty = Globals | \\"auto\\" | \\"none\\" | string;\\n\\nexport type TextTransformProperty = Globals | \\"capitalize\\" | \\"full-size-kana\\" | \\"full-width\\" | \\"lowercase\\" | \\"none\\" | \\"uppercase\\";\\n\\nexport type TextUnderlineOffsetProperty<TLength> = Globals | TLength | \\"auto\\" | \\"from-font\\" | string;\\n\\nexport type TextUnderlinePositionProperty = Globals | \\"auto\\" | \\"from-font\\" | \\"left\\" | \\"right\\" | \\"under\\" | string;\\n\\nexport type TopProperty<TLength> = Globals | TLength | \\"auto\\" | string;\\n\\nexport type TouchActionProperty =\\n  | Globals\\n  | \\"-ms-manipulation\\"\\n  | \\"-ms-none\\"\\n  | \\"-ms-pinch-zoom\\"\\n  | \\"auto\\"\\n  | \\"manipulation\\"\\n  | \\"none\\"\\n  | \\"pan-down\\"\\n  | \\"pan-left\\"\\n  | \\"pan-right\\"\\n  | \\"pan-up\\"\\n  | \\"pan-x\\"\\n  | \\"pan-y\\"\\n  | \\"pinch-zoom\\"\\n  | string;\\n\\nexport type TransformProperty = Globals | \\"none\\" | string;\\n\\nexport type TransformBoxProperty = Globals | \\"border-box\\" | \\"fill-box\\" | \\"view-box\\";\\n\\nexport type TransformOriginProperty<TLength> = Globals | TLength | \\"bottom\\" | \\"center\\" | \\"left\\" | \\"right\\" | \\"top\\" | string;\\n\\nexport type TransformStyleProperty = Globals | \\"flat\\" | \\"preserve-3d\\";\\n\\nexport type TransitionProperty = Globals | SingleTransition | string;\\n\\nexport type TransitionPropertyProperty = Globals | \\"all\\" | \\"none\\" | string;\\n\\nexport type TransitionTimingFunctionProperty = Globals | TimingFunction | string;\\n\\nexport type TranslateProperty<TLength> = Globals | TLength | \\"none\\" | string;\\n\\nexport type UnicodeBidiProperty =\\n  | Globals\\n  | \\"-moz-isolate\\"\\n  | \\"-moz-isolate-override\\"\\n  | \\"-moz-plaintext\\"\\n  | \\"-webkit-isolate\\"\\n  | \\"bidi-override\\"\\n  | \\"embed\\"\\n  | \\"isolate\\"\\n  | \\"isolate-override\\"\\n  | \\"normal\\"\\n  | \\"plaintext\\";\\n\\nexport type UserSelectProperty = Globals | \\"-moz-none\\" | \\"all\\" | \\"auto\\" | \\"contain\\" | \\"element\\" | \\"none\\" | \\"text\\";\\n\\nexport type VerticalAlignProperty<TLength> = Globals | TLength | \\"baseline\\" | \\"bottom\\" | \\"middle\\" | \\"sub\\" | \\"super\\" | \\"text-bottom\\" | \\"text-top\\" | \\"top\\" | string;\\n\\nexport type VisibilityProperty = Globals | \\"collapse\\" | \\"hidden\\" | \\"visible\\";\\n\\nexport type WhiteSpaceProperty = Globals | \\"-moz-pre-wrap\\" | \\"break-spaces\\" | \\"normal\\" | \\"nowrap\\" | \\"pre\\" | \\"pre-line\\" | \\"pre-wrap\\";\\n\\nexport type WidthProperty<TLength> =\\n  | Globals\\n  | TLength\\n  | \\"-moz-max-content\\"\\n  | \\"-moz-min-content\\"\\n  | \\"-webkit-max-content\\"\\n  | \\"auto\\"\\n  | \\"intrinsic\\"\\n  | \\"max-content\\"\\n  | \\"min-content\\"\\n  | \\"min-intrinsic\\"\\n  | string;\\n\\nexport type WillChangeProperty = Globals | AnimateableFeature | \\"auto\\" | string;\\n\\nexport type WordBreakProperty = Globals | \\"break-all\\" | \\"break-word\\" | \\"keep-all\\" | \\"normal\\";\\n\\nexport type WordSpacingProperty<TLength> = Globals | TLength | \\"normal\\" | string;\\n\\nexport type WordWrapProperty = Globals | \\"break-word\\" | \\"normal\\";\\n\\nexport type WritingModeProperty = Globals | \\"horizontal-tb\\" | \\"sideways-lr\\" | \\"sideways-rl\\" | \\"vertical-lr\\" | \\"vertical-rl\\";\\n\\nexport type ZIndexProperty = Globals | \\"auto\\" | number;\\n\\nexport type ZoomProperty = Globals | \\"normal\\" | \\"reset\\" | string | number;\\n\\nexport type MozAppearanceProperty =\\n  | Globals\\n  | \\"-moz-mac-unified-toolbar\\"\\n  | \\"-moz-win-borderless-glass\\"\\n  | \\"-moz-win-browsertabbar-toolbox\\"\\n  | \\"-moz-win-communications-toolbox\\"\\n  | \\"-moz-win-communicationstext\\"\\n  | \\"-moz-win-exclude-glass\\"\\n  | \\"-moz-win-glass\\"\\n  | \\"-moz-win-media-toolbox\\"\\n  | \\"-moz-win-mediatext\\"\\n  | \\"-moz-window-button-box\\"\\n  | \\"-moz-window-button-box-maximized\\"\\n  | \\"-moz-window-button-close\\"\\n  | \\"-moz-window-button-maximize\\"\\n  | \\"-moz-window-button-minimize\\"\\n  | \\"-moz-window-button-restore\\"\\n  | \\"-moz-window-frame-bottom\\"\\n  | \\"-moz-window-frame-left\\"\\n  | \\"-moz-window-frame-right\\"\\n  | \\"-moz-window-titlebar\\"\\n  | \\"-moz-window-titlebar-maximized\\"\\n  | \\"button\\"\\n  | \\"button-arrow-down\\"\\n  | \\"button-arrow-next\\"\\n  | \\"button-arrow-previous\\"\\n  | \\"button-arrow-up\\"\\n  | \\"button-bevel\\"\\n  | \\"button-focus\\"\\n  | \\"caret\\"\\n  | \\"checkbox\\"\\n  | \\"checkbox-container\\"\\n  | \\"checkbox-label\\"\\n  | \\"checkmenuitem\\"\\n  | \\"dualbutton\\"\\n  | \\"groupbox\\"\\n  | \\"listbox\\"\\n  | \\"listitem\\"\\n  | \\"menuarrow\\"\\n  | \\"menubar\\"\\n  | \\"menucheckbox\\"\\n  | \\"menuimage\\"\\n  | \\"menuitem\\"\\n  | \\"menuitemtext\\"\\n  | \\"menulist\\"\\n  | \\"menulist-button\\"\\n  | \\"menulist-text\\"\\n  | \\"menulist-textfield\\"\\n  | \\"menupopup\\"\\n  | \\"menuradio\\"\\n  | \\"menuseparator\\"\\n  | \\"meterbar\\"\\n  | \\"meterchunk\\"\\n  | \\"none\\"\\n  | \\"progressbar\\"\\n  | \\"progressbar-vertical\\"\\n  | \\"progresschunk\\"\\n  | \\"progresschunk-vertical\\"\\n  | \\"radio\\"\\n  | \\"radio-container\\"\\n  | \\"radio-label\\"\\n  | \\"radiomenuitem\\"\\n  | \\"range\\"\\n  | \\"range-thumb\\"\\n  | \\"resizer\\"\\n  | \\"resizerpanel\\"\\n  | \\"scale-horizontal\\"\\n  | \\"scale-vertical\\"\\n  | \\"scalethumb-horizontal\\"\\n  | \\"scalethumb-vertical\\"\\n  | \\"scalethumbend\\"\\n  | \\"scalethumbstart\\"\\n  | \\"scalethumbtick\\"\\n  | \\"scrollbarbutton-down\\"\\n  | \\"scrollbarbutton-left\\"\\n  | \\"scrollbarbutton-right\\"\\n  | \\"scrollbarbutton-up\\"\\n  | \\"scrollbarthumb-horizontal\\"\\n  | \\"scrollbarthumb-vertical\\"\\n  | \\"scrollbartrack-horizontal\\"\\n  | \\"scrollbartrack-vertical\\"\\n  | \\"searchfield\\"\\n  | \\"separator\\"\\n  | \\"sheet\\"\\n  | \\"spinner\\"\\n  | \\"spinner-downbutton\\"\\n  | \\"spinner-textfield\\"\\n  | \\"spinner-upbutton\\"\\n  | \\"splitter\\"\\n  | \\"statusbar\\"\\n  | \\"statusbarpanel\\"\\n  | \\"tab\\"\\n  | \\"tab-scroll-arrow-back\\"\\n  | \\"tab-scroll-arrow-forward\\"\\n  | \\"tabpanel\\"\\n  | \\"tabpanels\\"\\n  | \\"textfield\\"\\n  | \\"textfield-multiline\\"\\n  | \\"toolbar\\"\\n  | \\"toolbarbutton\\"\\n  | \\"toolbarbutton-dropdown\\"\\n  | \\"toolbargripper\\"\\n  | \\"toolbox\\"\\n  | \\"tooltip\\"\\n  | \\"treeheader\\"\\n  | \\"treeheadercell\\"\\n  | \\"treeheadersortarrow\\"\\n  | \\"treeitem\\"\\n  | \\"treeline\\"\\n  | \\"treetwisty\\"\\n  | \\"treetwistyopen\\"\\n  | \\"treeview\\";\\n\\nexport type MozBindingProperty = Globals | \\"none\\" | string;\\n\\nexport type MozBorderBottomColorsProperty = Globals | Color | \\"none\\" | string;\\n\\nexport type MozBorderLeftColorsProperty = Globals | Color | \\"none\\" | string;\\n\\nexport type MozBorderRightColorsProperty = Globals | Color | \\"none\\" | string;\\n\\nexport type MozBorderTopColorsProperty = Globals | Color | \\"none\\" | string;\\n\\nexport type MozContextPropertiesProperty = Globals | \\"fill\\" | \\"fill-opacity\\" | \\"none\\" | \\"stroke\\" | \\"stroke-opacity\\" | string;\\n\\nexport type MozFloatEdgeProperty = Globals | \\"border-box\\" | \\"content-box\\" | \\"margin-box\\" | \\"padding-box\\";\\n\\nexport type MozImageRegionProperty = Globals | \\"auto\\" | string;\\n\\nexport type MozOrientProperty = Globals | \\"block\\" | \\"horizontal\\" | \\"inline\\" | \\"vertical\\";\\n\\nexport type MozOutlineRadiusProperty<TLength> = Globals | TLength | string;\\n\\nexport type MozOutlineRadiusBottomleftProperty<TLength> = Globals | TLength | string;\\n\\nexport type MozOutlineRadiusBottomrightProperty<TLength> = Globals | TLength | string;\\n\\nexport type MozOutlineRadiusTopleftProperty<TLength> = Globals | TLength | string;\\n\\nexport type MozOutlineRadiusToprightProperty<TLength> = Globals | TLength | string;\\n\\nexport type MozStackSizingProperty = Globals | \\"ignore\\" | \\"stretch-to-fit\\";\\n\\nexport type MozTextBlinkProperty = Globals | \\"blink\\" | \\"none\\";\\n\\nexport type MozUserFocusProperty = Globals | \\"ignore\\" | \\"none\\" | \\"normal\\" | \\"select-after\\" | \\"select-all\\" | \\"select-before\\" | \\"select-menu\\" | \\"select-same\\";\\n\\nexport type MozUserInputProperty = Globals | \\"auto\\" | \\"disabled\\" | \\"enabled\\" | \\"none\\";\\n\\nexport type MozUserModifyProperty = Globals | \\"read-only\\" | \\"read-write\\" | \\"write-only\\";\\n\\nexport type MozWindowDraggingProperty = Globals | \\"drag\\" | \\"no-drag\\";\\n\\nexport type MozWindowShadowProperty = Globals | \\"default\\" | \\"menu\\" | \\"none\\" | \\"sheet\\" | \\"tooltip\\";\\n\\nexport type MsAcceleratorProperty = Globals | \\"false\\" | \\"true\\";\\n\\nexport type MsBlockProgressionProperty = Globals | \\"bt\\" | \\"lr\\" | \\"rl\\" | \\"tb\\";\\n\\nexport type MsContentZoomChainingProperty = Globals | \\"chained\\" | \\"none\\";\\n\\nexport type MsContentZoomSnapProperty = Globals | \\"mandatory\\" | \\"none\\" | \\"proximity\\" | string;\\n\\nexport type MsContentZoomSnapTypeProperty = Globals | \\"mandatory\\" | \\"none\\" | \\"proximity\\";\\n\\nexport type MsContentZoomingProperty = Globals | \\"none\\" | \\"zoom\\";\\n\\nexport type MsFlowFromProperty = Globals | \\"none\\" | string;\\n\\nexport type MsFlowIntoProperty = Globals | \\"none\\" | string;\\n\\nexport type MsHighContrastAdjustProperty = Globals | \\"auto\\" | \\"none\\";\\n\\nexport type MsHyphenateLimitCharsProperty = Globals | \\"auto\\" | string | number;\\n\\nexport type MsHyphenateLimitLinesProperty = Globals | \\"no-limit\\" | number;\\n\\nexport type MsHyphenateLimitZoneProperty<TLength> = Globals | TLength | string;\\n\\nexport type MsImeAlignProperty = Globals | \\"after\\" | \\"auto\\";\\n\\nexport type MsOverflowStyleProperty = Globals | \\"-ms-autohiding-scrollbar\\" | \\"auto\\" | \\"none\\" | \\"scrollbar\\";\\n\\nexport type MsScrollChainingProperty = Globals | \\"chained\\" | \\"none\\";\\n\\nexport type MsScrollLimitXMaxProperty<TLength> = Globals | TLength | \\"auto\\";\\n\\nexport type MsScrollLimitXMinProperty<TLength> = Globals | TLength;\\n\\nexport type MsScrollLimitYMaxProperty<TLength> = Globals | TLength | \\"auto\\";\\n\\nexport type MsScrollLimitYMinProperty<TLength> = Globals | TLength;\\n\\nexport type MsScrollRailsProperty = Globals | \\"none\\" | \\"railed\\";\\n\\nexport type MsScrollSnapTypeProperty = Globals | \\"mandatory\\" | \\"none\\" | \\"proximity\\";\\n\\nexport type MsScrollTranslationProperty = Globals | \\"none\\" | \\"vertical-to-horizontal\\";\\n\\nexport type MsScrollbar3dlightColorProperty = Globals | Color;\\n\\nexport type MsScrollbarArrowColorProperty = Globals | Color;\\n\\nexport type MsScrollbarBaseColorProperty = Globals | Color;\\n\\nexport type MsScrollbarDarkshadowColorProperty = Globals | Color;\\n\\nexport type MsScrollbarFaceColorProperty = Globals | Color;\\n\\nexport type MsScrollbarHighlightColorProperty = Globals | Color;\\n\\nexport type MsScrollbarShadowColorProperty = Globals | Color;\\n\\nexport type MsTextAutospaceProperty = Globals | \\"ideograph-alpha\\" | \\"ideograph-numeric\\" | \\"ideograph-parenthesis\\" | \\"ideograph-space\\" | \\"none\\";\\n\\nexport type MsTouchSelectProperty = Globals | \\"grippers\\" | \\"none\\";\\n\\nexport type MsUserSelectProperty = Globals | \\"element\\" | \\"none\\" | \\"text\\";\\n\\nexport type MsWrapFlowProperty = Globals | \\"auto\\" | \\"both\\" | \\"clear\\" | \\"end\\" | \\"maximum\\" | \\"start\\";\\n\\nexport type MsWrapMarginProperty<TLength> = Globals | TLength;\\n\\nexport type MsWrapThroughProperty = Globals | \\"none\\" | \\"wrap\\";\\n\\nexport type WebkitAppearanceProperty =\\n  | Globals\\n  | \\"button\\"\\n  | \\"button-bevel\\"\\n  | \\"caret\\"\\n  | \\"checkbox\\"\\n  | \\"default-button\\"\\n  | \\"inner-spin-button\\"\\n  | \\"listbox\\"\\n  | \\"listitem\\"\\n  | \\"media-controls-background\\"\\n  | \\"media-controls-fullscreen-background\\"\\n  | \\"media-current-time-display\\"\\n  | \\"media-enter-fullscreen-button\\"\\n  | \\"media-exit-fullscreen-button\\"\\n  | \\"media-fullscreen-button\\"\\n  | \\"media-mute-button\\"\\n  | \\"media-overlay-play-button\\"\\n  | \\"media-play-button\\"\\n  | \\"media-seek-back-button\\"\\n  | \\"media-seek-forward-button\\"\\n  | \\"media-slider\\"\\n  | \\"media-sliderthumb\\"\\n  | \\"media-time-remaining-display\\"\\n  | \\"media-toggle-closed-captions-button\\"\\n  | \\"media-volume-slider\\"\\n  | \\"media-volume-slider-container\\"\\n  | \\"media-volume-sliderthumb\\"\\n  | \\"menulist\\"\\n  | \\"menulist-button\\"\\n  | \\"menulist-text\\"\\n  | \\"menulist-textfield\\"\\n  | \\"meter\\"\\n  | \\"none\\"\\n  | \\"progress-bar\\"\\n  | \\"progress-bar-value\\"\\n  | \\"push-button\\"\\n  | \\"radio\\"\\n  | \\"searchfield\\"\\n  | \\"searchfield-cancel-button\\"\\n  | \\"searchfield-decoration\\"\\n  | \\"searchfield-results-button\\"\\n  | \\"searchfield-results-decoration\\"\\n  | \\"slider-horizontal\\"\\n  | \\"slider-vertical\\"\\n  | \\"sliderthumb-horizontal\\"\\n  | \\"sliderthumb-vertical\\"\\n  | \\"square-button\\"\\n  | \\"textarea\\"\\n  | \\"textfield\\";\\n\\nexport type WebkitBorderBeforeProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;\\n\\nexport type WebkitBorderBeforeColorProperty = Globals | Color;\\n\\nexport type WebkitBorderBeforeStyleProperty = Globals | LineStyle | string;\\n\\nexport type WebkitBorderBeforeWidthProperty<TLength> = Globals | LineWidth<TLength> | string;\\n\\nexport type WebkitBoxReflectProperty<TLength> = Globals | TLength | \\"above\\" | \\"below\\" | \\"left\\" | \\"right\\" | string;\\n\\nexport type WebkitLineClampProperty = Globals | \\"none\\" | number;\\n\\nexport type WebkitMaskProperty<TLength> = Globals | Position<TLength> | RepeatStyle | Box | \\"border\\" | \\"content\\" | \\"none\\" | \\"padding\\" | \\"text\\" | string;\\n\\nexport type WebkitMaskAttachmentProperty = Globals | Attachment | string;\\n\\nexport type WebkitMaskClipProperty = Globals | Box | \\"border\\" | \\"content\\" | \\"padding\\" | \\"text\\" | string;\\n\\nexport type WebkitMaskCompositeProperty = Globals | CompositeStyle | string;\\n\\nexport type WebkitMaskImageProperty = Globals | \\"none\\" | string;\\n\\nexport type WebkitMaskOriginProperty = Globals | Box | \\"border\\" | \\"content\\" | \\"padding\\" | string;\\n\\nexport type WebkitMaskPositionProperty<TLength> = Globals | Position<TLength> | string;\\n\\nexport type WebkitMaskPositionXProperty<TLength> = Globals | TLength | \\"center\\" | \\"left\\" | \\"right\\" | string;\\n\\nexport type WebkitMaskPositionYProperty<TLength> = Globals | TLength | \\"bottom\\" | \\"center\\" | \\"top\\" | string;\\n\\nexport type WebkitMaskRepeatProperty = Globals | RepeatStyle | string;\\n\\nexport type WebkitMaskRepeatXProperty = Globals | \\"no-repeat\\" | \\"repeat\\" | \\"round\\" | \\"space\\";\\n\\nexport type WebkitMaskRepeatYProperty = Globals | \\"no-repeat\\" | \\"repeat\\" | \\"round\\" | \\"space\\";\\n\\nexport type WebkitMaskSizeProperty<TLength> = Globals | BgSize<TLength> | string;\\n\\nexport type WebkitOverflowScrollingProperty = Globals | \\"auto\\" | \\"touch\\";\\n\\nexport type WebkitTapHighlightColorProperty = Globals | Color;\\n\\nexport type WebkitTextFillColorProperty = Globals | Color;\\n\\nexport type WebkitTextStrokeProperty<TLength> = Globals | Color | TLength | string;\\n\\nexport type WebkitTextStrokeColorProperty = Globals | Color;\\n\\nexport type WebkitTextStrokeWidthProperty<TLength> = Globals | TLength;\\n\\nexport type WebkitTouchCalloutProperty = Globals | \\"default\\" | \\"none\\";\\n\\nexport type WebkitUserModifyProperty = Globals | \\"read-only\\" | \\"read-write\\" | \\"read-write-plaintext-only\\";\\n\\nexport type AlignmentBaselineProperty =\\n  | Globals\\n  | \\"after-edge\\"\\n  | \\"alphabetic\\"\\n  | \\"auto\\"\\n  | \\"baseline\\"\\n  | \\"before-edge\\"\\n  | \\"central\\"\\n  | \\"hanging\\"\\n  | \\"ideographic\\"\\n  | \\"mathematical\\"\\n  | \\"middle\\"\\n  | \\"text-after-edge\\"\\n  | \\"text-before-edge\\";\\n\\nexport type BaselineShiftProperty<TLength> = Globals | TLength | \\"baseline\\" | \\"sub\\" | \\"super\\" | string;\\n\\nexport type ClipRuleProperty = Globals | \\"evenodd\\" | \\"nonzero\\";\\n\\nexport type ColorInterpolationProperty = Globals | \\"auto\\" | \\"linearRGB\\" | \\"sRGB\\";\\n\\nexport type ColorRenderingProperty = Globals | \\"auto\\" | \\"optimizeQuality\\" | \\"optimizeSpeed\\";\\n\\nexport type DominantBaselineProperty =\\n  | Globals\\n  | \\"alphabetic\\"\\n  | \\"auto\\"\\n  | \\"central\\"\\n  | \\"hanging\\"\\n  | \\"ideographic\\"\\n  | \\"mathematical\\"\\n  | \\"middle\\"\\n  | \\"no-change\\"\\n  | \\"reset-size\\"\\n  | \\"text-after-edge\\"\\n  | \\"text-before-edge\\"\\n  | \\"use-script\\";\\n\\nexport type FillProperty = Globals | Paint;\\n\\nexport type FillRuleProperty = Globals | \\"evenodd\\" | \\"nonzero\\";\\n\\nexport type FloodColorProperty = Globals | Color | \\"currentColor\\";\\n\\nexport type GlyphOrientationVerticalProperty = Globals | \\"auto\\" | string | number;\\n\\nexport type LightingColorProperty = Globals | Color | \\"currentColor\\";\\n\\nexport type MarkerProperty = Globals | \\"none\\" | string;\\n\\nexport type MarkerEndProperty = Globals | \\"none\\" | string;\\n\\nexport type MarkerMidProperty = Globals | \\"none\\" | string;\\n\\nexport type MarkerStartProperty = Globals | \\"none\\" | string;\\n\\nexport type ShapeRenderingProperty = Globals | \\"auto\\" | \\"crispEdges\\" | \\"geometricPrecision\\" | \\"optimizeSpeed\\";\\n\\nexport type StopColorProperty = Globals | Color | \\"currentColor\\";\\n\\nexport type StrokeProperty = Globals | Paint;\\n\\nexport type StrokeDasharrayProperty<TLength> = Globals | Dasharray<TLength> | \\"none\\";\\n\\nexport type StrokeDashoffsetProperty<TLength> = Globals | TLength | string;\\n\\nexport type StrokeLinecapProperty = Globals | \\"butt\\" | \\"round\\" | \\"square\\";\\n\\nexport type StrokeLinejoinProperty = Globals | \\"bevel\\" | \\"miter\\" | \\"round\\";\\n\\nexport type StrokeWidthProperty<TLength> = Globals | TLength | string;\\n\\nexport type TextAnchorProperty = Globals | \\"end\\" | \\"middle\\" | \\"start\\";\\n\\nexport type VectorEffectProperty = Globals | \\"non-scaling-stroke\\" | \\"none\\";\\n\\ntype CounterStyleRangeProperty = \\"auto\\" | \\"infinite\\" | string | number;\\n\\ntype CounterStyleSpeakAsProperty = \\"auto\\" | \\"bullets\\" | \\"numbers\\" | \\"spell-out\\" | \\"words\\" | string;\\n\\ntype CounterStyleSystemProperty = \\"additive\\" | \\"alphabetic\\" | \\"cyclic\\" | \\"fixed\\" | \\"numeric\\" | \\"symbolic\\" | string;\\n\\ntype FontFaceFontFeatureSettingsProperty = \\"normal\\" | string;\\n\\ntype FontFaceFontDisplayProperty = \\"auto\\" | \\"block\\" | \\"fallback\\" | \\"optional\\" | \\"swap\\";\\n\\ntype FontFaceFontStretchProperty = FontStretchAbsolute | string;\\n\\ntype FontFaceFontStyleProperty = \\"italic\\" | \\"normal\\" | \\"oblique\\" | string;\\n\\ntype FontFaceFontVariantProperty =\\n  | EastAsianVariantValues\\n  | \\"all-petite-caps\\"\\n  | \\"all-small-caps\\"\\n  | \\"common-ligatures\\"\\n  | \\"contextual\\"\\n  | \\"diagonal-fractions\\"\\n  | \\"discretionary-ligatures\\"\\n  | \\"full-width\\"\\n  | \\"historical-forms\\"\\n  | \\"historical-ligatures\\"\\n  | \\"lining-nums\\"\\n  | \\"no-common-ligatures\\"\\n  | \\"no-contextual\\"\\n  | \\"no-discretionary-ligatures\\"\\n  | \\"no-historical-ligatures\\"\\n  | \\"none\\"\\n  | \\"normal\\"\\n  | \\"oldstyle-nums\\"\\n  | \\"ordinal\\"\\n  | \\"petite-caps\\"\\n  | \\"proportional-nums\\"\\n  | \\"proportional-width\\"\\n  | \\"ruby\\"\\n  | \\"slashed-zero\\"\\n  | \\"small-caps\\"\\n  | \\"stacked-fractions\\"\\n  | \\"tabular-nums\\"\\n  | \\"titling-caps\\"\\n  | \\"unicase\\"\\n  | string;\\n\\ntype FontFaceFontVariationSettingsProperty = \\"normal\\" | string;\\n\\ntype FontFaceFontWeightProperty = FontWeightAbsolute | string;\\n\\ntype ViewportHeightProperty<TLength> = ViewportLength<TLength> | string;\\n\\ntype ViewportMaxHeightProperty<TLength> = ViewportLength<TLength>;\\n\\ntype ViewportMaxWidthProperty<TLength> = ViewportLength<TLength>;\\n\\ntype ViewportMaxZoomProperty = \\"auto\\" | string | number;\\n\\ntype ViewportMinHeightProperty<TLength> = ViewportLength<TLength>;\\n\\ntype ViewportMinWidthProperty<TLength> = ViewportLength<TLength>;\\n\\ntype ViewportMinZoomProperty = \\"auto\\" | string | number;\\n\\ntype ViewportOrientationProperty = \\"auto\\" | \\"landscape\\" | \\"portrait\\";\\n\\ntype ViewportUserZoomProperty = \\"-ms-zoom\\" | \\"fixed\\" | \\"zoom\\";\\n\\ntype ViewportWidthProperty<TLength> = ViewportLength<TLength> | string;\\n\\ntype ViewportZoomProperty = \\"auto\\" | string | number;\\n\\ntype AbsoluteSize = \\"large\\" | \\"medium\\" | \\"small\\" | \\"x-large\\" | \\"x-small\\" | \\"xx-large\\" | \\"xx-small\\" | \\"xxx-large\\";\\n\\ntype AnimateableFeature = \\"contents\\" | \\"scroll-position\\" | string;\\n\\ntype Attachment = \\"fixed\\" | \\"local\\" | \\"scroll\\";\\n\\ntype BgPosition<TLength> = TLength | \\"bottom\\" | \\"center\\" | \\"left\\" | \\"right\\" | \\"top\\" | string;\\n\\ntype BgSize<TLength> = TLength | \\"auto\\" | \\"contain\\" | \\"cover\\" | string;\\n\\ntype BlendMode =\\n  | \\"color\\"\\n  | \\"color-burn\\"\\n  | \\"color-dodge\\"\\n  | \\"darken\\"\\n  | \\"difference\\"\\n  | \\"exclusion\\"\\n  | \\"hard-light\\"\\n  | \\"hue\\"\\n  | \\"lighten\\"\\n  | \\"luminosity\\"\\n  | \\"multiply\\"\\n  | \\"normal\\"\\n  | \\"overlay\\"\\n  | \\"saturation\\"\\n  | \\"screen\\"\\n  | \\"soft-light\\";\\n\\ntype Box = \\"border-box\\" | \\"content-box\\" | \\"padding-box\\";\\n\\ntype Color = NamedColor | DeprecatedSystemColor | \\"currentcolor\\" | string;\\n\\ntype Compat =\\n  | \\"button-bevel\\"\\n  | \\"checkbox\\"\\n  | \\"listbox\\"\\n  | \\"menulist\\"\\n  | \\"menulist-button\\"\\n  | \\"meter\\"\\n  | \\"progress-bar\\"\\n  | \\"push-button\\"\\n  | \\"radio\\"\\n  | \\"searchfield\\"\\n  | \\"slider-horizontal\\"\\n  | \\"square-button\\"\\n  | \\"textarea\\";\\n\\ntype CompositeStyle =\\n  | \\"clear\\"\\n  | \\"copy\\"\\n  | \\"destination-atop\\"\\n  | \\"destination-in\\"\\n  | \\"destination-out\\"\\n  | \\"destination-over\\"\\n  | \\"source-atop\\"\\n  | \\"source-in\\"\\n  | \\"source-out\\"\\n  | \\"source-over\\"\\n  | \\"xor\\";\\n\\ntype CompositingOperator = \\"add\\" | \\"exclude\\" | \\"intersect\\" | \\"subtract\\";\\n\\ntype ContentDistribution = \\"space-around\\" | \\"space-between\\" | \\"space-evenly\\" | \\"stretch\\";\\n\\ntype ContentList = Quote | \\"contents\\" | string;\\n\\ntype ContentPosition = \\"center\\" | \\"end\\" | \\"flex-end\\" | \\"flex-start\\" | \\"start\\";\\n\\ntype CubicBezierTimingFunction = \\"ease\\" | \\"ease-in\\" | \\"ease-in-out\\" | \\"ease-out\\" | string;\\n\\ntype Dasharray<TLength> = TLength | string | number;\\n\\ntype DeprecatedSystemColor =\\n  | \\"ActiveBorder\\"\\n  | \\"ActiveCaption\\"\\n  | \\"AppWorkspace\\"\\n  | \\"Background\\"\\n  | \\"ButtonFace\\"\\n  | \\"ButtonHighlight\\"\\n  | \\"ButtonShadow\\"\\n  | \\"ButtonText\\"\\n  | \\"CaptionText\\"\\n  | \\"GrayText\\"\\n  | \\"Highlight\\"\\n  | \\"HighlightText\\"\\n  | \\"InactiveBorder\\"\\n  | \\"InactiveCaption\\"\\n  | \\"InactiveCaptionText\\"\\n  | \\"InfoBackground\\"\\n  | \\"InfoText\\"\\n  | \\"Menu\\"\\n  | \\"MenuText\\"\\n  | \\"Scrollbar\\"\\n  | \\"ThreeDDarkShadow\\"\\n  | \\"ThreeDFace\\"\\n  | \\"ThreeDHighlight\\"\\n  | \\"ThreeDLightShadow\\"\\n  | \\"ThreeDShadow\\"\\n  | \\"Window\\"\\n  | \\"WindowFrame\\"\\n  | \\"WindowText\\";\\n\\ntype DisplayInside = \\"-ms-flexbox\\" | \\"-ms-grid\\" | \\"-webkit-flex\\" | \\"flex\\" | \\"flow\\" | \\"flow-root\\" | \\"grid\\" | \\"ruby\\" | \\"table\\";\\n\\ntype DisplayInternal =\\n  | \\"ruby-base\\"\\n  | \\"ruby-base-container\\"\\n  | \\"ruby-text\\"\\n  | \\"ruby-text-container\\"\\n  | \\"table-caption\\"\\n  | \\"table-cell\\"\\n  | \\"table-column\\"\\n  | \\"table-column-group\\"\\n  | \\"table-footer-group\\"\\n  | \\"table-header-group\\"\\n  | \\"table-row\\"\\n  | \\"table-row-group\\";\\n\\ntype DisplayLegacy = \\"-ms-inline-flexbox\\" | \\"-ms-inline-grid\\" | \\"-webkit-inline-flex\\" | \\"inline-block\\" | \\"inline-flex\\" | \\"inline-grid\\" | \\"inline-list-item\\" | \\"inline-table\\";\\n\\ntype DisplayOutside = \\"block\\" | \\"inline\\" | \\"run-in\\";\\n\\ntype EastAsianVariantValues = \\"jis04\\" | \\"jis78\\" | \\"jis83\\" | \\"jis90\\" | \\"simplified\\" | \\"traditional\\";\\n\\ntype FinalBgLayer<TLength> = Color | BgPosition<TLength> | RepeatStyle | Attachment | Box | \\"none\\" | string;\\n\\ntype FontStretchAbsolute =\\n  | \\"condensed\\"\\n  | \\"expanded\\"\\n  | \\"extra-condensed\\"\\n  | \\"extra-expanded\\"\\n  | \\"normal\\"\\n  | \\"semi-condensed\\"\\n  | \\"semi-expanded\\"\\n  | \\"ultra-condensed\\"\\n  | \\"ultra-expanded\\"\\n  | string;\\n\\ntype FontWeightAbsolute = \\"bold\\" | \\"normal\\" | number;\\n\\ntype GenericFamily = \\"cursive\\" | \\"fantasy\\" | \\"monospace\\" | \\"sans-serif\\" | \\"serif\\";\\n\\ntype GeometryBox = Box | \\"fill-box\\" | \\"margin-box\\" | \\"stroke-box\\" | \\"view-box\\";\\n\\ntype GridLine = \\"auto\\" | string | number;\\n\\ntype LineStyle = \\"dashed\\" | \\"dotted\\" | \\"double\\" | \\"groove\\" | \\"hidden\\" | \\"inset\\" | \\"none\\" | \\"outset\\" | \\"ridge\\" | \\"solid\\";\\n\\ntype LineWidth<TLength> = TLength | \\"medium\\" | \\"thick\\" | \\"thin\\";\\n\\ntype MaskLayer<TLength> = Position<TLength> | RepeatStyle | GeometryBox | CompositingOperator | MaskingMode | \\"no-clip\\" | \\"none\\" | string;\\n\\ntype MaskingMode = \\"alpha\\" | \\"luminance\\" | \\"match-source\\";\\n\\ntype NamedColor =\\n  | \\"aliceblue\\"\\n  | \\"antiquewhite\\"\\n  | \\"aqua\\"\\n  | \\"aquamarine\\"\\n  | \\"azure\\"\\n  | \\"beige\\"\\n  | \\"bisque\\"\\n  | \\"black\\"\\n  | \\"blanchedalmond\\"\\n  | \\"blue\\"\\n  | \\"blueviolet\\"\\n  | \\"brown\\"\\n  | \\"burlywood\\"\\n  | \\"cadetblue\\"\\n  | \\"chartreuse\\"\\n  | \\"chocolate\\"\\n  | \\"coral\\"\\n  | \\"cornflowerblue\\"\\n  | \\"cornsilk\\"\\n  | \\"crimson\\"\\n  | \\"cyan\\"\\n  | \\"darkblue\\"\\n  | \\"darkcyan\\"\\n  | \\"darkgoldenrod\\"\\n  | \\"darkgray\\"\\n  | \\"darkgreen\\"\\n  | \\"darkgrey\\"\\n  | \\"darkkhaki\\"\\n  | \\"darkmagenta\\"\\n  | \\"darkolivegreen\\"\\n  | \\"darkorange\\"\\n  | \\"darkorchid\\"\\n  | \\"darkred\\"\\n  | \\"darksalmon\\"\\n  | \\"darkseagreen\\"\\n  | \\"darkslateblue\\"\\n  | \\"darkslategray\\"\\n  | \\"darkslategrey\\"\\n  | \\"darkturquoise\\"\\n  | \\"darkviolet\\"\\n  | \\"deeppink\\"\\n  | \\"deepskyblue\\"\\n  | \\"dimgray\\"\\n  | \\"dimgrey\\"\\n  | \\"dodgerblue\\"\\n  | \\"firebrick\\"\\n  | \\"floralwhite\\"\\n  | \\"forestgreen\\"\\n  | \\"fuchsia\\"\\n  | \\"gainsboro\\"\\n  | \\"ghostwhite\\"\\n  | \\"gold\\"\\n  | \\"goldenrod\\"\\n  | \\"gray\\"\\n  | \\"green\\"\\n  | \\"greenyellow\\"\\n  | \\"grey\\"\\n  | \\"honeydew\\"\\n  | \\"hotpink\\"\\n  | \\"indianred\\"\\n  | \\"indigo\\"\\n  | \\"ivory\\"\\n  | \\"khaki\\"\\n  | \\"lavender\\"\\n  | \\"lavenderblush\\"\\n  | \\"lawngreen\\"\\n  | \\"lemonchiffon\\"\\n  | \\"lightblue\\"\\n  | \\"lightcoral\\"\\n  | \\"lightcyan\\"\\n  | \\"lightgoldenrodyellow\\"\\n  | \\"lightgray\\"\\n  | \\"lightgreen\\"\\n  | \\"lightgrey\\"\\n  | \\"lightpink\\"\\n  | \\"lightsalmon\\"\\n  | \\"lightseagreen\\"\\n  | \\"lightskyblue\\"\\n  | \\"lightslategray\\"\\n  | \\"lightslategrey\\"\\n  | \\"lightsteelblue\\"\\n  | \\"lightyellow\\"\\n  | \\"lime\\"\\n  | \\"limegreen\\"\\n  | \\"linen\\"\\n  | \\"magenta\\"\\n  | \\"maroon\\"\\n  | \\"mediumaquamarine\\"\\n  | \\"mediumblue\\"\\n  | \\"mediumorchid\\"\\n  | \\"mediumpurple\\"\\n  | \\"mediumseagreen\\"\\n  | \\"mediumslateblue\\"\\n  | \\"mediumspringgreen\\"\\n  | \\"mediumturquoise\\"\\n  | \\"mediumvioletred\\"\\n  | \\"midnightblue\\"\\n  | \\"mintcream\\"\\n  | \\"mistyrose\\"\\n  | \\"moccasin\\"\\n  | \\"navajowhite\\"\\n  | \\"navy\\"\\n  | \\"oldlace\\"\\n  | \\"olive\\"\\n  | \\"olivedrab\\"\\n  | \\"orange\\"\\n  | \\"orangered\\"\\n  | \\"orchid\\"\\n  | \\"palegoldenrod\\"\\n  | \\"palegreen\\"\\n  | \\"paleturquoise\\"\\n  | \\"palevioletred\\"\\n  | \\"papayawhip\\"\\n  | \\"peachpuff\\"\\n  | \\"peru\\"\\n  | \\"pink\\"\\n  | \\"plum\\"\\n  | \\"powderblue\\"\\n  | \\"purple\\"\\n  | \\"rebeccapurple\\"\\n  | \\"red\\"\\n  | \\"rosybrown\\"\\n  | \\"royalblue\\"\\n  | \\"saddlebrown\\"\\n  | \\"salmon\\"\\n  | \\"sandybrown\\"\\n  | \\"seagreen\\"\\n  | \\"seashell\\"\\n  | \\"sienna\\"\\n  | \\"silver\\"\\n  | \\"skyblue\\"\\n  | \\"slateblue\\"\\n  | \\"slategray\\"\\n  | \\"slategrey\\"\\n  | \\"snow\\"\\n  | \\"springgreen\\"\\n  | \\"steelblue\\"\\n  | \\"tan\\"\\n  | \\"teal\\"\\n  | \\"thistle\\"\\n  | \\"tomato\\"\\n  | \\"transparent\\"\\n  | \\"turquoise\\"\\n  | \\"violet\\"\\n  | \\"wheat\\"\\n  | \\"white\\"\\n  | \\"whitesmoke\\"\\n  | \\"yellow\\"\\n  | \\"yellowgreen\\";\\n\\ntype Paint = Color | \\"child\\" | \\"context-fill\\" | \\"context-stroke\\" | \\"none\\" | string;\\n\\ntype Position<TLength> = TLength | \\"bottom\\" | \\"center\\" | \\"left\\" | \\"right\\" | \\"top\\" | string;\\n\\ntype Quote = \\"close-quote\\" | \\"no-close-quote\\" | \\"no-open-quote\\" | \\"open-quote\\";\\n\\ntype RepeatStyle = \\"no-repeat\\" | \\"repeat\\" | \\"repeat-x\\" | \\"repeat-y\\" | \\"round\\" | \\"space\\" | string;\\n\\ntype SelfPosition = \\"center\\" | \\"end\\" | \\"flex-end\\" | \\"flex-start\\" | \\"self-end\\" | \\"self-start\\" | \\"start\\";\\n\\ntype SingleAnimation = TimingFunction | SingleAnimationDirection | SingleAnimationFillMode | \\"infinite\\" | \\"none\\" | \\"paused\\" | \\"running\\" | string | number;\\n\\ntype SingleAnimationDirection = \\"alternate\\" | \\"alternate-reverse\\" | \\"normal\\" | \\"reverse\\";\\n\\ntype SingleAnimationFillMode = \\"backwards\\" | \\"both\\" | \\"forwards\\" | \\"none\\";\\n\\ntype SingleTransition = TimingFunction | \\"all\\" | \\"none\\" | string;\\n\\ntype StepTimingFunction = \\"step-end\\" | \\"step-start\\" | string;\\n\\ntype TimingFunction = CubicBezierTimingFunction | StepTimingFunction | \\"linear\\";\\n\\ntype TrackBreadth<TLength> = TLength | \\"auto\\" | \\"max-content\\" | \\"min-content\\" | string;\\n\\ntype ViewportLength<TLength> = TLength | \\"auto\\" | string; \\n  \\n}","moduleName":"csstype"},{"code":"\\n declare module \\"prop-types\\" { \\n\\n\\nexport type ReactComponentLike =\\n    | string\\n    | ((props: any, context?: any) => any)\\n    | (new (props: any, context?: any) => any);\\n\\nexport interface ReactElementLike {\\n    type: ReactComponentLike;\\n    props: any;\\n    key: string | number | null;\\n}\\n\\nexport interface ReactNodeArray extends Array<ReactNodeLike> {}\\n\\nexport type ReactNodeLike =\\n    | {}\\n    | ReactElementLike\\n    | ReactNodeArray\\n    | string\\n    | number\\n    | boolean\\n    | null\\n    | undefined;\\n\\nexport const nominalTypeHack: unique symbol;\\n\\nexport type IsOptional<T> = undefined extends T ? true : false;\\n\\nexport type RequiredKeys<V> = { [K in keyof V]-?: Exclude<V[K], undefined> extends Validator<infer T> ? IsOptional<T> extends true ? never : K : never }[keyof V];\\nexport type OptionalKeys<V> = Exclude<keyof V, RequiredKeys<V>>;\\nexport type InferPropsInner<V> = { [K in keyof V]-?: InferType<V[K]>; };\\n\\nexport interface Validator<T> {\\n    (props: { [key: string]: any }, propName: string, componentName: string, location: string, propFullName: string): Error | null;\\n    [nominalTypeHack]?: {\\n        type: T;\\n    };\\n}\\n\\nexport interface Requireable<T> extends Validator<T | undefined | null> {\\n    isRequired: Validator<NonNullable<T>>;\\n}\\n\\nexport type ValidationMap<T> = { [K in keyof T]?: Validator<T[K]> };\\n\\nexport type InferType<V> = V extends Validator<infer T> ? T : any;\\nexport type InferProps<V> =\\n    & InferPropsInner<Pick<V, RequiredKeys<V>>>\\n    & Partial<InferPropsInner<Pick<V, OptionalKeys<V>>>>;\\n\\nexport const any: Requireable<any>;\\nexport const array: Requireable<any[]>;\\nexport const bool: Requireable<boolean>;\\nexport const func: Requireable<(...args: any[]) => any>;\\nexport const number: Requireable<number>;\\nexport const object: Requireable<object>;\\nexport const string: Requireable<string>;\\nexport const node: Requireable<ReactNodeLike>;\\nexport const element: Requireable<ReactElementLike>;\\nexport const symbol: Requireable<symbol>;\\nexport const elementType: Requireable<ReactComponentLike>;\\nexport function instanceOf<T>(expectedClass: new (...args: any[]) => T): Requireable<T>;\\nexport function oneOf<T>(types: ReadonlyArray<T>): Requireable<T>;\\nexport function oneOfType<T extends Validator<any>>(types: T[]): Requireable<NonNullable<InferType<T>>>;\\nexport function arrayOf<T>(type: Validator<T>): Requireable<T[]>;\\nexport function objectOf<T>(type: Validator<T>): Requireable<{ [K in keyof any]: T; }>;\\nexport function shape<P extends ValidationMap<any>>(type: P): Requireable<InferProps<P>>;\\nexport function exact<P extends ValidationMap<any>>(type: P): Requireable<Required<InferProps<P>>>;\\n\\n\\nexport function checkPropTypes(typeSpecs: any, values: any, location: string, componentName: string, getStack?: () => any): void;\\n\\n\\nexport function resetWarningCache(): void; \\n  \\n}","moduleName":"prop-types"},{"code":"\\n declare module \\"react\\" { \\n\\n\\n\\n\\nimport * as CSS from \'csstype\';\\nimport * as PropTypes from \'prop-types\';\\n\\ntype NativeAnimationEvent = AnimationEvent;\\ntype NativeClipboardEvent = ClipboardEvent;\\ntype NativeCompositionEvent = CompositionEvent;\\ntype NativeDragEvent = DragEvent;\\ntype NativeFocusEvent = FocusEvent;\\ntype NativeKeyboardEvent = KeyboardEvent;\\ntype NativeMouseEvent = MouseEvent;\\ntype NativeTouchEvent = TouchEvent;\\ntype NativePointerEvent = PointerEvent;\\ntype NativeTransitionEvent = TransitionEvent;\\ntype NativeUIEvent = UIEvent;\\ntype NativeWheelEvent = WheelEvent;\\ntype Booleanish = boolean | \'true\' | \'false\';\\n\\n\\ninterface SchedulerInteraction {\\n    id: number;\\n    name: string;\\n    timestamp: number;\\n}\\n\\nexport = React;\\nexport as namespace React;\\n\\ndeclare namespace React {\\n   \\n   \\n\\n    type ElementType<P = any> =\\n        {\\n            [K in keyof JSX.IntrinsicElements]: P extends JSX.IntrinsicElements[K] ? K : never\\n        }[keyof JSX.IntrinsicElements] |\\n        ComponentType<P>;\\n    \\n    type ReactType<P = any> = ElementType<P>;\\n    type ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P>;\\n\\n    type JSXElementConstructor<P> =\\n        | ((props: P) => ReactElement | null)\\n        | (new (props: P) => Component<P, any>);\\n\\n    interface RefObject<T> {\\n        readonly current: T | null;\\n    }\\n    type RefCallback<T> = { bivarianceHack(instance: T | null): void }[\\"bivarianceHack\\"];\\n    type Ref<T> = RefCallback<T> | RefObject<T> | null;\\n    type LegacyRef<T> = string | Ref<T>;\\n    \\n    type ElementRef<\\n        C extends\\n            | ForwardRefExoticComponent<any>\\n            | { new (props: any): Component<any> }\\n            | ((props: any, context?: any) => ReactElement | null)\\n            | keyof JSX.IntrinsicElements\\n    > = C extends ForwardRefExoticComponent<infer FP>\\n        ? FP extends RefAttributes<infer FC>\\n            ? FC\\n            : never\\n        : C extends { new (props: any): Component<any> }\\n        ? InstanceType<C>\\n        : C extends ((props: any, context?: any) => ReactElement | null)\\n        ? undefined\\n        : C extends keyof JSX.IntrinsicElements\\n        ? JSX.IntrinsicElements[C] extends DOMAttributes<infer E>\\n            ? E\\n            : never\\n        : never;\\n\\n    type ComponentState = any;\\n\\n    type Key = string | number;\\n\\n    \\n    interface Attributes {\\n        key?: Key;\\n    }\\n    interface RefAttributes<T> extends Attributes {\\n        ref?: Ref<T>;\\n    }\\n    interface ClassAttributes<T> extends Attributes {\\n        ref?: LegacyRef<T>;\\n    }\\n\\n    interface ReactElement<P = any, T extends string | JSXElementConstructor<any> = string | JSXElementConstructor<any>> {\\n        type: T;\\n        props: P;\\n        key: Key | null;\\n    }\\n\\n    interface ReactComponentElement<\\n        T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>,\\n        P = Pick<ComponentProps<T>, Exclude<keyof ComponentProps<T>, \'key\' | \'ref\'>>\\n    > extends ReactElement<P, Exclude<T, number>> { }\\n\\n    \\n    type SFCElement<P> = FunctionComponentElement<P>;\\n\\n    interface FunctionComponentElement<P> extends ReactElement<P, FunctionComponent<P>> {\\n        ref?: \'ref\' extends keyof P ? P extends { ref?: infer R } ? R : never : never;\\n    }\\n\\n    type CElement<P, T extends Component<P, ComponentState>> = ComponentElement<P, T>;\\n    interface ComponentElement<P, T extends Component<P, ComponentState>> extends ReactElement<P, ComponentClass<P>> {\\n        ref?: LegacyRef<T>;\\n    }\\n\\n    type ClassicElement<P> = CElement<P, ClassicComponent<P, ComponentState>>;\\n\\n   \\n    interface DOMElement<P extends HTMLAttributes<T> | SVGAttributes<T>, T extends Element> extends ReactElement<P, string> {\\n        ref: LegacyRef<T>;\\n    }\\n\\n   \\n   \\n    interface ReactHTMLElement<T extends HTMLElement> extends DetailedReactHTMLElement<AllHTMLAttributes<T>, T> { }\\n\\n    interface DetailedReactHTMLElement<P extends HTMLAttributes<T>, T extends HTMLElement> extends DOMElement<P, T> {\\n        type: keyof ReactHTML;\\n    }\\n\\n   \\n    interface ReactSVGElement extends DOMElement<SVGAttributes<SVGElement>, SVGElement> {\\n        type: keyof ReactSVG;\\n    }\\n\\n    interface ReactPortal extends ReactElement {\\n        key: Key | null;\\n        children: ReactNode;\\n    }\\n\\n   \\n   \\n\\n    type Factory<P> = (props?: Attributes & P, ...children: ReactNode[]) => ReactElement<P>;\\n\\n    \\n    type SFCFactory<P> = FunctionComponentFactory<P>;\\n\\n    type FunctionComponentFactory<P> = (props?: Attributes & P, ...children: ReactNode[]) => FunctionComponentElement<P>;\\n\\n    type ComponentFactory<P, T extends Component<P, ComponentState>> =\\n        (props?: ClassAttributes<T> & P, ...children: ReactNode[]) => CElement<P, T>;\\n\\n    type CFactory<P, T extends Component<P, ComponentState>> = ComponentFactory<P, T>;\\n    type ClassicFactory<P> = CFactory<P, ClassicComponent<P, ComponentState>>;\\n\\n    type DOMFactory<P extends DOMAttributes<T>, T extends Element> =\\n        (props?: ClassAttributes<T> & P | null, ...children: ReactNode[]) => DOMElement<P, T>;\\n\\n   \\n    interface HTMLFactory<T extends HTMLElement> extends DetailedHTMLFactory<AllHTMLAttributes<T>, T> {}\\n\\n    interface DetailedHTMLFactory<P extends HTMLAttributes<T>, T extends HTMLElement> extends DOMFactory<P, T> {\\n        (props?: ClassAttributes<T> & P | null, ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;\\n    }\\n\\n    interface SVGFactory extends DOMFactory<SVGAttributes<SVGElement>, SVGElement> {\\n        (props?: ClassAttributes<SVGElement> & SVGAttributes<SVGElement> | null, ...children: ReactNode[]): ReactSVGElement;\\n    }\\n\\n   \\n   \\n   \\n\\n    type ReactText = string | number;\\n    type ReactChild = ReactElement | ReactText;\\n\\n    interface ReactNodeArray extends Array<ReactNode> {}\\n    type ReactFragment = {} | ReactNodeArray;\\n    type ReactNode = ReactChild | ReactFragment | ReactPortal | boolean | null | undefined;\\n\\n   \\n   \\n\\n   \\n    function createFactory<T extends HTMLElement>(\\n        type: keyof ReactHTML): HTMLFactory<T>;\\n    function createFactory(\\n        type: keyof ReactSVG): SVGFactory;\\n    function createFactory<P extends DOMAttributes<T>, T extends Element>(\\n        type: string): DOMFactory<P, T>;\\n\\n   \\n    function createFactory<P>(type: FunctionComponent<P>): FunctionComponentFactory<P>;\\n    function createFactory<P>(\\n        type: ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>): CFactory<P, ClassicComponent<P, ComponentState>>;\\n    function createFactory<P, T extends Component<P, ComponentState>, C extends ComponentClass<P>>(\\n        type: ClassType<P, T, C>): CFactory<P, T>;\\n    function createFactory<P>(type: ComponentClass<P>): Factory<P>;\\n\\n   \\n   \\n    function createElement(\\n        type: \\"input\\",\\n        props?: InputHTMLAttributes<HTMLInputElement> & ClassAttributes<HTMLInputElement> | null,\\n        ...children: ReactNode[]): DetailedReactHTMLElement<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\\n    function createElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\\n        type: keyof ReactHTML,\\n        props?: ClassAttributes<T> & P | null,\\n        ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;\\n    function createElement<P extends SVGAttributes<T>, T extends SVGElement>(\\n        type: keyof ReactSVG,\\n        props?: ClassAttributes<T> & P | null,\\n        ...children: ReactNode[]): ReactSVGElement;\\n    function createElement<P extends DOMAttributes<T>, T extends Element>(\\n        type: string,\\n        props?: ClassAttributes<T> & P | null,\\n        ...children: ReactNode[]): DOMElement<P, T>;\\n\\n   \\n\\n    function createElement<P extends {}>(\\n        type: FunctionComponent<P>,\\n        props?: Attributes & P | null,\\n        ...children: ReactNode[]): FunctionComponentElement<P>;\\n    function createElement<P extends {}>(\\n        type: ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>,\\n        props?: ClassAttributes<ClassicComponent<P, ComponentState>> & P | null,\\n        ...children: ReactNode[]): CElement<P, ClassicComponent<P, ComponentState>>;\\n    function createElement<P extends {}, T extends Component<P, ComponentState>, C extends ComponentClass<P>>(\\n        type: ClassType<P, T, C>,\\n        props?: ClassAttributes<T> & P | null,\\n        ...children: ReactNode[]): CElement<P, T>;\\n    function createElement<P extends {}>(\\n        type: FunctionComponent<P> | ComponentClass<P> | string,\\n        props?: Attributes & P | null,\\n        ...children: ReactNode[]): ReactElement<P>;\\n\\n   \\n   \\n    function cloneElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\\n        element: DetailedReactHTMLElement<P, T>,\\n        props?: P,\\n        ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;\\n   \\n    function cloneElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\\n        element: ReactHTMLElement<T>,\\n        props?: P,\\n        ...children: ReactNode[]): ReactHTMLElement<T>;\\n   \\n    function cloneElement<P extends SVGAttributes<T>, T extends SVGElement>(\\n        element: ReactSVGElement,\\n        props?: P,\\n        ...children: ReactNode[]): ReactSVGElement;\\n   \\n    function cloneElement<P extends DOMAttributes<T>, T extends Element>(\\n        element: DOMElement<P, T>,\\n        props?: DOMAttributes<T> & P,\\n        ...children: ReactNode[]): DOMElement<P, T>;\\n\\n   \\n    function cloneElement<P>(\\n        element: FunctionComponentElement<P>,\\n        props?: Partial<P> & Attributes,\\n        ...children: ReactNode[]): FunctionComponentElement<P>;\\n    function cloneElement<P, T extends Component<P, ComponentState>>(\\n        element: CElement<P, T>,\\n        props?: Partial<P> & ClassAttributes<T>,\\n        ...children: ReactNode[]): CElement<P, T>;\\n    function cloneElement<P>(\\n        element: ReactElement<P>,\\n        props?: Partial<P> & Attributes,\\n        ...children: ReactNode[]): ReactElement<P>;\\n\\n   \\n    interface ProviderProps<T> {\\n        value: T;\\n        children?: ReactNode;\\n    }\\n\\n    interface ConsumerProps<T> {\\n        children: (value: T) => ReactNode;\\n        unstable_observedBits?: number;\\n    }\\n\\n   \\n   \\n   \\n   \\n   \\n   \\n   \\n   \\n   \\n    interface ExoticComponent<P = {}> {\\n        \\n        (props: P): (ReactElement|null);\\n        readonly $$typeof: symbol;\\n    }\\n\\n    interface NamedExoticComponent<P = {}> extends ExoticComponent<P> {\\n        displayName?: string;\\n    }\\n\\n    interface ProviderExoticComponent<P> extends ExoticComponent<P> {\\n        propTypes?: WeakValidationMap<P>;\\n    }\\n\\n    type ContextType<C extends Context<any>> = C extends Context<infer T> ? T : never;\\n\\n   \\n   \\n    type Provider<T> = ProviderExoticComponent<ProviderProps<T>>;\\n    type Consumer<T> = ExoticComponent<ConsumerProps<T>>;\\n    interface Context<T> {\\n        Provider: Provider<T>;\\n        Consumer: Consumer<T>;\\n        displayName?: string;\\n    }\\n    function createContext<T>(\\n       \\n       \\n        defaultValue: T,\\n        calculateChangedBits?: (prev: T, next: T) => number\\n    ): Context<T>;\\n\\n    function isValidElement<P>(object: {} | null | undefined): object is ReactElement<P>;\\n\\n    const Children: ReactChildren;\\n    const Fragment: ExoticComponent<{ children?: ReactNode }>;\\n    const StrictMode: ExoticComponent<{ children?: ReactNode }>;\\n\\n    interface SuspenseProps {\\n        children?: ReactNode;\\n\\n        \\n        fallback: NonNullable<ReactNode>|null;\\n        \\n       \\n        unstable_avoidThisFallback?: boolean;\\n    }\\n    \\n    const Suspense: ExoticComponent<SuspenseProps>;\\n    const version: string;\\n\\n    \\n    type ProfilerOnRenderCallback = (\\n        id: string,\\n        phase: \\"mount\\" | \\"update\\",\\n        actualDuration: number,\\n        baseDuration: number,\\n        startTime: number,\\n        commitTime: number,\\n        interactions: Set<SchedulerInteraction>,\\n    ) => void;\\n    interface ProfilerProps {\\n        children?: ReactNode;\\n        id: string;\\n        onRender: ProfilerOnRenderCallback;\\n    }\\n\\n    const Profiler: ExoticComponent<ProfilerProps>;\\n\\n   \\n   \\n\\n    type ReactInstance = Component<any> | Element;\\n\\n   \\n   \\n    interface Component<P = {}, S = {}, SS = any> extends ComponentLifecycle<P, S, SS> { }\\n    class Component<P, S> {\\n       \\n        \\n        static contextType?: Context<any>;\\n\\n        \\n       \\n        context: any;\\n\\n        constructor(props: Readonly<P>);\\n        \\n        constructor(props: P, context?: any);\\n\\n       \\n       \\n       \\n        setState<K extends keyof S>(\\n            state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null)) | (Pick<S, K> | S | null),\\n            callback?: () => void\\n        ): void;\\n\\n        forceUpdate(callback?: () => void): void;\\n        render(): ReactNode;\\n\\n       \\n       \\n       \\n       \\n       \\n        readonly props: Readonly<P> & Readonly<{ children?: ReactNode }>;\\n        state: Readonly<S>;\\n        \\n        refs: {\\n            [key: string]: ReactInstance\\n        };\\n    }\\n\\n    class PureComponent<P = {}, S = {}, SS = any> extends Component<P, S, SS> { }\\n\\n    interface ClassicComponent<P = {}, S = {}> extends Component<P, S> {\\n        replaceState(nextState: S, callback?: () => void): void;\\n        isMounted(): boolean;\\n        getInitialState?(): S;\\n    }\\n\\n    interface ChildContextProvider<CC> {\\n        getChildContext(): CC;\\n    }\\n\\n   \\n   \\n\\n    \\n    type SFC<P = {}> = FunctionComponent<P>;\\n\\n    \\n    type StatelessComponent<P = {}> = FunctionComponent<P>;\\n\\n    type FC<P = {}> = FunctionComponent<P>;\\n\\n    interface FunctionComponent<P = {}> {\\n        (props: PropsWithChildren<P>, context?: any): ReactElement | null;\\n        propTypes?: WeakValidationMap<P>;\\n        contextTypes?: ValidationMap<any>;\\n        defaultProps?: Partial<P>;\\n        displayName?: string;\\n    }\\n\\n    interface ForwardRefRenderFunction<T, P = {}> {\\n        (props: PropsWithChildren<P>, ref: ((instance: T | null) => void) | MutableRefObject<T | null> | null): ReactElement | null;\\n        displayName?: string;\\n       \\n       \\n        \\n        defaultProps?: never;\\n        \\n        propTypes?: never;\\n    }\\n\\n    \\n    interface RefForwardingComponent <T, P = {}> extends ForwardRefRenderFunction<T, P> {}\\n\\n    interface ComponentClass<P = {}, S = ComponentState> extends StaticLifecycle<P, S> {\\n        new (props: P, context?: any): Component<P, S>;\\n        propTypes?: WeakValidationMap<P>;\\n        contextType?: Context<any>;\\n        contextTypes?: ValidationMap<any>;\\n        childContextTypes?: ValidationMap<any>;\\n        defaultProps?: Partial<P>;\\n        displayName?: string;\\n    }\\n\\n    interface ClassicComponentClass<P = {}> extends ComponentClass<P> {\\n        new (props: P, context?: any): ClassicComponent<P, ComponentState>;\\n        getDefaultProps?(): P;\\n    }\\n\\n    \\n    type ClassType<P, T extends Component<P, ComponentState>, C extends ComponentClass<P>> =\\n        C &\\n        (new (props: P, context?: any) => T);\\n\\n   \\n   \\n\\n   \\n   \\n   \\n    interface ComponentLifecycle<P, S, SS = any> extends NewLifecycle<P, S, SS>, DeprecatedLifecycle<P, S> {\\n        \\n        componentDidMount?(): void;\\n        \\n        shouldComponentUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): boolean;\\n        \\n        componentWillUnmount?(): void;\\n        \\n        componentDidCatch?(error: Error, errorInfo: ErrorInfo): void;\\n    }\\n\\n   \\n    interface StaticLifecycle<P, S> {\\n        getDerivedStateFromProps?: GetDerivedStateFromProps<P, S>;\\n        getDerivedStateFromError?: GetDerivedStateFromError<P, S>;\\n    }\\n\\n    type GetDerivedStateFromProps<P, S> =\\n        \\n        (nextProps: Readonly<P>, prevState: S) => Partial<S> | null;\\n\\n    type GetDerivedStateFromError<P, S> =\\n        \\n        (error: any) => Partial<S> | null;\\n\\n   \\n    interface NewLifecycle<P, S, SS> {\\n        \\n        getSnapshotBeforeUpdate?(prevProps: Readonly<P>, prevState: Readonly<S>): SS | null;\\n        \\n        componentDidUpdate?(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot?: SS): void;\\n    }\\n\\n    interface DeprecatedLifecycle<P, S> {\\n        \\n        componentWillMount?(): void;\\n        \\n        UNSAFE_componentWillMount?(): void;\\n        \\n        componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;\\n        \\n        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;\\n        \\n        componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;\\n        \\n        UNSAFE_componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;\\n    }\\n\\n    interface Mixin<P, S> extends ComponentLifecycle<P, S> {\\n        mixins?: Array<Mixin<P, S>>;\\n        statics?: {\\n            [key: string]: any;\\n        };\\n\\n        displayName?: string;\\n        propTypes?: ValidationMap<any>;\\n        contextTypes?: ValidationMap<any>;\\n        childContextTypes?: ValidationMap<any>;\\n\\n        getDefaultProps?(): P;\\n        getInitialState?(): S;\\n    }\\n\\n    interface ComponentSpec<P, S> extends Mixin<P, S> {\\n        render(): ReactNode;\\n\\n        [propertyName: string]: any;\\n    }\\n\\n    function createRef<T>(): RefObject<T>;\\n\\n   \\n   \\n    interface ForwardRefExoticComponent<P> extends NamedExoticComponent<P> {\\n        defaultProps?: Partial<P>;\\n        propTypes?: WeakValidationMap<P>;\\n    }\\n\\n    function forwardRef<T, P = {}>(render: ForwardRefRenderFunction<T, P>): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;\\n\\n    \\n    type PropsWithoutRef<P> =\\n       \\n       \\n        \'ref\' extends keyof P\\n            ? Pick<P, Exclude<keyof P, \'ref\'>>\\n            : P;\\n    \\n    type PropsWithRef<P> =\\n       \\n        \'ref\' extends keyof P\\n            ? P extends { ref?: infer R }\\n                ? string extends R\\n                    ? PropsWithoutRef<P> & { ref?: Exclude<R, string> }\\n                    : P\\n                : P\\n            : P;\\n\\n    type PropsWithChildren<P> = P & { children?: ReactNode };\\n\\n    \\n    type ComponentProps<T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>> =\\n        T extends JSXElementConstructor<infer P>\\n            ? P\\n            : T extends keyof JSX.IntrinsicElements\\n                ? JSX.IntrinsicElements[T]\\n                : {};\\n    type ComponentPropsWithRef<T extends ElementType> =\\n        T extends ComponentClass<infer P>\\n            ? PropsWithoutRef<P> & RefAttributes<InstanceType<T>>\\n            : PropsWithRef<ComponentProps<T>>;\\n    type ComponentPropsWithoutRef<T extends ElementType> =\\n        PropsWithoutRef<ComponentProps<T>>;\\n\\n   \\n   \\n    type MemoExoticComponent<T extends ComponentType<any>> = NamedExoticComponent<ComponentPropsWithRef<T>> & {\\n        readonly type: T;\\n    };\\n\\n    function memo<P extends object>(\\n        Component: SFC<P>,\\n        propsAreEqual?: (prevProps: Readonly<PropsWithChildren<P>>, nextProps: Readonly<PropsWithChildren<P>>) => boolean\\n    ): NamedExoticComponent<P>;\\n    function memo<T extends ComponentType<any>>(\\n        Component: T,\\n        propsAreEqual?: (prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean\\n    ): MemoExoticComponent<T>;\\n\\n    type LazyExoticComponent<T extends ComponentType<any>> = ExoticComponent<ComponentPropsWithRef<T>> & {\\n        readonly _result: T;\\n    };\\n\\n    function lazy<T extends ComponentType<any>>(\\n        factory: () => Promise<{ default: T }>\\n    ): LazyExoticComponent<T>;\\n\\n   \\n   \\n\\n   \\n\\n   \\n    type SetStateAction<S> = S | ((prevState: S) => S);\\n   \\n   \\n    type Dispatch<A> = (value: A) => void;\\n   \\n    type DispatchWithoutAction = () => void;\\n   \\n    type Reducer<S, A> = (prevState: S, action: A) => S;\\n   \\n    type ReducerWithoutAction<S> = (prevState: S) => S;\\n   \\n   \\n    type ReducerState<R extends Reducer<any, any>> = R extends Reducer<infer S, any> ? S : never;\\n    type ReducerAction<R extends Reducer<any, any>> = R extends Reducer<any, infer A> ? A : never;\\n   \\n    type ReducerStateWithoutAction<R extends ReducerWithoutAction<any>> =\\n        R extends ReducerWithoutAction<infer S> ? S : never;\\n   \\n    type DependencyList = ReadonlyArray<any>;\\n\\n   \\n   \\n    type EffectCallback = () => (void | (() => void | undefined));\\n\\n    interface MutableRefObject<T> {\\n        current: T;\\n    }\\n\\n   \\n    \\n    function useContext<T>(context: Context<T>): T;\\n    \\n    function useState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>];\\n   \\n    \\n    function useState<S = undefined>(): [S | undefined, Dispatch<SetStateAction<S | undefined>>];\\n    \\n   \\n    function useReducer<R extends ReducerWithoutAction<any>, I>(\\n        reducer: R,\\n        initializerArg: I,\\n        initializer: (arg: I) => ReducerStateWithoutAction<R>\\n    ): [ReducerStateWithoutAction<R>, DispatchWithoutAction];\\n    \\n   \\n    function useReducer<R extends ReducerWithoutAction<any>>(\\n        reducer: R,\\n        initializerArg: ReducerStateWithoutAction<R>,\\n        initializer?: undefined\\n    ): [ReducerStateWithoutAction<R>, DispatchWithoutAction];\\n    \\n   \\n   \\n   \\n    function useReducer<R extends Reducer<any, any>, I>(\\n        reducer: R,\\n        initializerArg: I & ReducerState<R>,\\n        initializer: (arg: I & ReducerState<R>) => ReducerState<R>\\n    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\\n    \\n   \\n    function useReducer<R extends Reducer<any, any>, I>(\\n        reducer: R,\\n        initializerArg: I,\\n        initializer: (arg: I) => ReducerState<R>\\n    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\\n    \\n\\n   \\n   \\n\\n   \\n   \\n   \\n\\n   \\n   \\n    function useReducer<R extends Reducer<any, any>>(\\n        reducer: R,\\n        initialState: ReducerState<R>,\\n        initializer?: undefined\\n    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\\n    \\n   \\n    function useRef<T>(initialValue: T): MutableRefObject<T>;\\n   \\n    \\n   \\n    function useRef<T>(initialValue: T|null): RefObject<T>;\\n   \\n   \\n    \\n   \\n    function useRef<T = undefined>(): MutableRefObject<T | undefined>;\\n    \\n    function useLayoutEffect(effect: EffectCallback, deps?: DependencyList): void;\\n    \\n    function useEffect(effect: EffectCallback, deps?: DependencyList): void;\\n   \\n    \\n    function useImperativeHandle<T, R extends T>(ref: Ref<T>|undefined, init: () => R, deps?: DependencyList): void;\\n   \\n   \\n    \\n   \\n    function useCallback<T extends (...args: any[]) => any>(callback: T, deps: DependencyList): T;\\n    \\n   \\n    function useMemo<T>(factory: () => T, deps: DependencyList | undefined): T;\\n    \\n   \\n   \\n    function useDebugValue<T>(value: T, format?: (value: T) => any): void;\\n\\n   \\n   \\n   \\n    interface BaseSyntheticEvent<E = object, C = any, T = any> {\\n        nativeEvent: E;\\n        currentTarget: C;\\n        target: T;\\n        bubbles: boolean;\\n        cancelable: boolean;\\n        defaultPrevented: boolean;\\n        eventPhase: number;\\n        isTrusted: boolean;\\n        preventDefault(): void;\\n        isDefaultPrevented(): boolean;\\n        stopPropagation(): void;\\n        isPropagationStopped(): boolean;\\n        persist(): void;\\n        timeStamp: number;\\n        type: string;\\n    }\\n\\n    \\n    interface SyntheticEvent<T = Element, E = Event> extends BaseSyntheticEvent<E, EventTarget & T, EventTarget> {}\\n\\n    interface ClipboardEvent<T = Element> extends SyntheticEvent<T, NativeClipboardEvent> {\\n        clipboardData: DataTransfer;\\n    }\\n\\n    interface CompositionEvent<T = Element> extends SyntheticEvent<T, NativeCompositionEvent> {\\n        data: string;\\n    }\\n\\n    interface DragEvent<T = Element> extends MouseEvent<T, NativeDragEvent> {\\n        dataTransfer: DataTransfer;\\n    }\\n\\n    interface PointerEvent<T = Element> extends MouseEvent<T, NativePointerEvent> {\\n        pointerId: number;\\n        pressure: number;\\n        tiltX: number;\\n        tiltY: number;\\n        width: number;\\n        height: number;\\n        pointerType: \'mouse\' | \'pen\' | \'touch\';\\n        isPrimary: boolean;\\n    }\\n\\n    interface FocusEvent<T = Element> extends SyntheticEvent<T, NativeFocusEvent> {\\n        relatedTarget: EventTarget | null;\\n        target: EventTarget & T;\\n    }\\n\\n   \\n    interface FormEvent<T = Element> extends SyntheticEvent<T> {\\n    }\\n\\n    interface InvalidEvent<T = Element> extends SyntheticEvent<T> {\\n        target: EventTarget & T;\\n    }\\n\\n    interface ChangeEvent<T = Element> extends SyntheticEvent<T> {\\n        target: EventTarget & T;\\n    }\\n\\n    interface KeyboardEvent<T = Element> extends SyntheticEvent<T, NativeKeyboardEvent> {\\n        altKey: boolean;\\n        charCode: number;\\n        ctrlKey: boolean;\\n        \\n        getModifierState(key: string): boolean;\\n        \\n        key: string;\\n        keyCode: number;\\n        locale: string;\\n        location: number;\\n        metaKey: boolean;\\n        repeat: boolean;\\n        shiftKey: boolean;\\n        which: number;\\n    }\\n\\n    interface MouseEvent<T = Element, E = NativeMouseEvent> extends UIEvent<T, E> {\\n        altKey: boolean;\\n        button: number;\\n        buttons: number;\\n        clientX: number;\\n        clientY: number;\\n        ctrlKey: boolean;\\n        \\n        getModifierState(key: string): boolean;\\n        metaKey: boolean;\\n        movementX: number;\\n        movementY: number;\\n        pageX: number;\\n        pageY: number;\\n        relatedTarget: EventTarget | null;\\n        screenX: number;\\n        screenY: number;\\n        shiftKey: boolean;\\n    }\\n\\n    interface TouchEvent<T = Element> extends SyntheticEvent<T, NativeTouchEvent> {\\n        altKey: boolean;\\n        changedTouches: TouchList;\\n        ctrlKey: boolean;\\n        \\n        getModifierState(key: string): boolean;\\n        metaKey: boolean;\\n        shiftKey: boolean;\\n        targetTouches: TouchList;\\n        touches: TouchList;\\n    }\\n\\n    interface UIEvent<T = Element, E = NativeUIEvent> extends SyntheticEvent<T, E> {\\n        detail: number;\\n        view: AbstractView;\\n    }\\n\\n    interface WheelEvent<T = Element> extends MouseEvent<T, NativeWheelEvent> {\\n        deltaMode: number;\\n        deltaX: number;\\n        deltaY: number;\\n        deltaZ: number;\\n    }\\n\\n    interface AnimationEvent<T = Element> extends SyntheticEvent<T, NativeAnimationEvent> {\\n        animationName: string;\\n        elapsedTime: number;\\n        pseudoElement: string;\\n    }\\n\\n    interface TransitionEvent<T = Element> extends SyntheticEvent<T, NativeTransitionEvent> {\\n        elapsedTime: number;\\n        propertyName: string;\\n        pseudoElement: string;\\n    }\\n\\n   \\n   \\n\\n    type EventHandler<E extends SyntheticEvent<any>> = { bivarianceHack(event: E): void }[\\"bivarianceHack\\"];\\n\\n    type ReactEventHandler<T = Element> = EventHandler<SyntheticEvent<T>>;\\n\\n    type ClipboardEventHandler<T = Element> = EventHandler<ClipboardEvent<T>>;\\n    type CompositionEventHandler<T = Element> = EventHandler<CompositionEvent<T>>;\\n    type DragEventHandler<T = Element> = EventHandler<DragEvent<T>>;\\n    type FocusEventHandler<T = Element> = EventHandler<FocusEvent<T>>;\\n    type FormEventHandler<T = Element> = EventHandler<FormEvent<T>>;\\n    type ChangeEventHandler<T = Element> = EventHandler<ChangeEvent<T>>;\\n    type KeyboardEventHandler<T = Element> = EventHandler<KeyboardEvent<T>>;\\n    type MouseEventHandler<T = Element> = EventHandler<MouseEvent<T>>;\\n    type TouchEventHandler<T = Element> = EventHandler<TouchEvent<T>>;\\n    type PointerEventHandler<T = Element> = EventHandler<PointerEvent<T>>;\\n    type UIEventHandler<T = Element> = EventHandler<UIEvent<T>>;\\n    type WheelEventHandler<T = Element> = EventHandler<WheelEvent<T>>;\\n    type AnimationEventHandler<T = Element> = EventHandler<AnimationEvent<T>>;\\n    type TransitionEventHandler<T = Element> = EventHandler<TransitionEvent<T>>;\\n\\n   \\n   \\n\\n    \\n    interface Props<T> {\\n        children?: ReactNode;\\n        key?: Key;\\n        ref?: LegacyRef<T>;\\n    }\\n\\n    interface HTMLProps<T> extends AllHTMLAttributes<T>, ClassAttributes<T> {\\n    }\\n\\n    type DetailedHTMLProps<E extends HTMLAttributes<T>, T> = ClassAttributes<T> & E;\\n\\n    interface SVGProps<T> extends SVGAttributes<T>, ClassAttributes<T> {\\n    }\\n\\n    interface DOMAttributes<T> {\\n        children?: ReactNode;\\n        dangerouslySetInnerHTML?: {\\n            __html: string;\\n        };\\n\\n       \\n        onCopy?: ClipboardEventHandler<T>;\\n        onCopyCapture?: ClipboardEventHandler<T>;\\n        onCut?: ClipboardEventHandler<T>;\\n        onCutCapture?: ClipboardEventHandler<T>;\\n        onPaste?: ClipboardEventHandler<T>;\\n        onPasteCapture?: ClipboardEventHandler<T>;\\n\\n       \\n        onCompositionEnd?: CompositionEventHandler<T>;\\n        onCompositionEndCapture?: CompositionEventHandler<T>;\\n        onCompositionStart?: CompositionEventHandler<T>;\\n        onCompositionStartCapture?: CompositionEventHandler<T>;\\n        onCompositionUpdate?: CompositionEventHandler<T>;\\n        onCompositionUpdateCapture?: CompositionEventHandler<T>;\\n\\n       \\n        onFocus?: FocusEventHandler<T>;\\n        onFocusCapture?: FocusEventHandler<T>;\\n        onBlur?: FocusEventHandler<T>;\\n        onBlurCapture?: FocusEventHandler<T>;\\n\\n       \\n        onChange?: FormEventHandler<T>;\\n        onChangeCapture?: FormEventHandler<T>;\\n        onBeforeInput?: FormEventHandler<T>;\\n        onBeforeInputCapture?: FormEventHandler<T>;\\n        onInput?: FormEventHandler<T>;\\n        onInputCapture?: FormEventHandler<T>;\\n        onReset?: FormEventHandler<T>;\\n        onResetCapture?: FormEventHandler<T>;\\n        onSubmit?: FormEventHandler<T>;\\n        onSubmitCapture?: FormEventHandler<T>;\\n        onInvalid?: FormEventHandler<T>;\\n        onInvalidCapture?: FormEventHandler<T>;\\n\\n       \\n        onLoad?: ReactEventHandler<T>;\\n        onLoadCapture?: ReactEventHandler<T>;\\n        onError?: ReactEventHandler<T>;\\n        onErrorCapture?: ReactEventHandler<T>;\\n\\n       \\n        onKeyDown?: KeyboardEventHandler<T>;\\n        onKeyDownCapture?: KeyboardEventHandler<T>;\\n        onKeyPress?: KeyboardEventHandler<T>;\\n        onKeyPressCapture?: KeyboardEventHandler<T>;\\n        onKeyUp?: KeyboardEventHandler<T>;\\n        onKeyUpCapture?: KeyboardEventHandler<T>;\\n\\n       \\n        onAbort?: ReactEventHandler<T>;\\n        onAbortCapture?: ReactEventHandler<T>;\\n        onCanPlay?: ReactEventHandler<T>;\\n        onCanPlayCapture?: ReactEventHandler<T>;\\n        onCanPlayThrough?: ReactEventHandler<T>;\\n        onCanPlayThroughCapture?: ReactEventHandler<T>;\\n        onDurationChange?: ReactEventHandler<T>;\\n        onDurationChangeCapture?: ReactEventHandler<T>;\\n        onEmptied?: ReactEventHandler<T>;\\n        onEmptiedCapture?: ReactEventHandler<T>;\\n        onEncrypted?: ReactEventHandler<T>;\\n        onEncryptedCapture?: ReactEventHandler<T>;\\n        onEnded?: ReactEventHandler<T>;\\n        onEndedCapture?: ReactEventHandler<T>;\\n        onLoadedData?: ReactEventHandler<T>;\\n        onLoadedDataCapture?: ReactEventHandler<T>;\\n        onLoadedMetadata?: ReactEventHandler<T>;\\n        onLoadedMetadataCapture?: ReactEventHandler<T>;\\n        onLoadStart?: ReactEventHandler<T>;\\n        onLoadStartCapture?: ReactEventHandler<T>;\\n        onPause?: ReactEventHandler<T>;\\n        onPauseCapture?: ReactEventHandler<T>;\\n        onPlay?: ReactEventHandler<T>;\\n        onPlayCapture?: ReactEventHandler<T>;\\n        onPlaying?: ReactEventHandler<T>;\\n        onPlayingCapture?: ReactEventHandler<T>;\\n        onProgress?: ReactEventHandler<T>;\\n        onProgressCapture?: ReactEventHandler<T>;\\n        onRateChange?: ReactEventHandler<T>;\\n        onRateChangeCapture?: ReactEventHandler<T>;\\n        onSeeked?: ReactEventHandler<T>;\\n        onSeekedCapture?: ReactEventHandler<T>;\\n        onSeeking?: ReactEventHandler<T>;\\n        onSeekingCapture?: ReactEventHandler<T>;\\n        onStalled?: ReactEventHandler<T>;\\n        onStalledCapture?: ReactEventHandler<T>;\\n        onSuspend?: ReactEventHandler<T>;\\n        onSuspendCapture?: ReactEventHandler<T>;\\n        onTimeUpdate?: ReactEventHandler<T>;\\n        onTimeUpdateCapture?: ReactEventHandler<T>;\\n        onVolumeChange?: ReactEventHandler<T>;\\n        onVolumeChangeCapture?: ReactEventHandler<T>;\\n        onWaiting?: ReactEventHandler<T>;\\n        onWaitingCapture?: ReactEventHandler<T>;\\n\\n       \\n        onAuxClick?: MouseEventHandler<T>;\\n        onAuxClickCapture?: MouseEventHandler<T>;\\n        onClick?: MouseEventHandler<T>;\\n        onClickCapture?: MouseEventHandler<T>;\\n        onContextMenu?: MouseEventHandler<T>;\\n        onContextMenuCapture?: MouseEventHandler<T>;\\n        onDoubleClick?: MouseEventHandler<T>;\\n        onDoubleClickCapture?: MouseEventHandler<T>;\\n        onDrag?: DragEventHandler<T>;\\n        onDragCapture?: DragEventHandler<T>;\\n        onDragEnd?: DragEventHandler<T>;\\n        onDragEndCapture?: DragEventHandler<T>;\\n        onDragEnter?: DragEventHandler<T>;\\n        onDragEnterCapture?: DragEventHandler<T>;\\n        onDragExit?: DragEventHandler<T>;\\n        onDragExitCapture?: DragEventHandler<T>;\\n        onDragLeave?: DragEventHandler<T>;\\n        onDragLeaveCapture?: DragEventHandler<T>;\\n        onDragOver?: DragEventHandler<T>;\\n        onDragOverCapture?: DragEventHandler<T>;\\n        onDragStart?: DragEventHandler<T>;\\n        onDragStartCapture?: DragEventHandler<T>;\\n        onDrop?: DragEventHandler<T>;\\n        onDropCapture?: DragEventHandler<T>;\\n        onMouseDown?: MouseEventHandler<T>;\\n        onMouseDownCapture?: MouseEventHandler<T>;\\n        onMouseEnter?: MouseEventHandler<T>;\\n        onMouseLeave?: MouseEventHandler<T>;\\n        onMouseMove?: MouseEventHandler<T>;\\n        onMouseMoveCapture?: MouseEventHandler<T>;\\n        onMouseOut?: MouseEventHandler<T>;\\n        onMouseOutCapture?: MouseEventHandler<T>;\\n        onMouseOver?: MouseEventHandler<T>;\\n        onMouseOverCapture?: MouseEventHandler<T>;\\n        onMouseUp?: MouseEventHandler<T>;\\n        onMouseUpCapture?: MouseEventHandler<T>;\\n\\n       \\n        onSelect?: ReactEventHandler<T>;\\n        onSelectCapture?: ReactEventHandler<T>;\\n\\n       \\n        onTouchCancel?: TouchEventHandler<T>;\\n        onTouchCancelCapture?: TouchEventHandler<T>;\\n        onTouchEnd?: TouchEventHandler<T>;\\n        onTouchEndCapture?: TouchEventHandler<T>;\\n        onTouchMove?: TouchEventHandler<T>;\\n        onTouchMoveCapture?: TouchEventHandler<T>;\\n        onTouchStart?: TouchEventHandler<T>;\\n        onTouchStartCapture?: TouchEventHandler<T>;\\n\\n       \\n        onPointerDown?: PointerEventHandler<T>;\\n        onPointerDownCapture?: PointerEventHandler<T>;\\n        onPointerMove?: PointerEventHandler<T>;\\n        onPointerMoveCapture?: PointerEventHandler<T>;\\n        onPointerUp?: PointerEventHandler<T>;\\n        onPointerUpCapture?: PointerEventHandler<T>;\\n        onPointerCancel?: PointerEventHandler<T>;\\n        onPointerCancelCapture?: PointerEventHandler<T>;\\n        onPointerEnter?: PointerEventHandler<T>;\\n        onPointerEnterCapture?: PointerEventHandler<T>;\\n        onPointerLeave?: PointerEventHandler<T>;\\n        onPointerLeaveCapture?: PointerEventHandler<T>;\\n        onPointerOver?: PointerEventHandler<T>;\\n        onPointerOverCapture?: PointerEventHandler<T>;\\n        onPointerOut?: PointerEventHandler<T>;\\n        onPointerOutCapture?: PointerEventHandler<T>;\\n        onGotPointerCapture?: PointerEventHandler<T>;\\n        onGotPointerCaptureCapture?: PointerEventHandler<T>;\\n        onLostPointerCapture?: PointerEventHandler<T>;\\n        onLostPointerCaptureCapture?: PointerEventHandler<T>;\\n\\n       \\n        onScroll?: UIEventHandler<T>;\\n        onScrollCapture?: UIEventHandler<T>;\\n\\n       \\n        onWheel?: WheelEventHandler<T>;\\n        onWheelCapture?: WheelEventHandler<T>;\\n\\n       \\n        onAnimationStart?: AnimationEventHandler<T>;\\n        onAnimationStartCapture?: AnimationEventHandler<T>;\\n        onAnimationEnd?: AnimationEventHandler<T>;\\n        onAnimationEndCapture?: AnimationEventHandler<T>;\\n        onAnimationIteration?: AnimationEventHandler<T>;\\n        onAnimationIterationCapture?: AnimationEventHandler<T>;\\n\\n       \\n        onTransitionEnd?: TransitionEventHandler<T>;\\n        onTransitionEndCapture?: TransitionEventHandler<T>;\\n    }\\n\\n    export interface CSSProperties extends CSS.Properties<string | number> {\\n        \\n    }\\n\\n   \\n    interface AriaAttributes {\\n        \\n        \'aria-activedescendant\'?: string;\\n        \\n        \'aria-atomic\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-autocomplete\'?: \'none\' | \'inline\' | \'list\' | \'both\';\\n        \\n        \'aria-busy\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-checked\'?: boolean | \'false\' | \'mixed\' | \'true\';\\n        \\n        \'aria-colcount\'?: number;\\n        \\n        \'aria-colindex\'?: number;\\n        \\n        \'aria-colspan\'?: number;\\n        \\n        \'aria-controls\'?: string;\\n        \\n        \'aria-current\'?: boolean | \'false\' | \'true\' | \'page\' | \'step\' | \'location\' | \'date\' | \'time\';\\n        \\n        \'aria-describedby\'?: string;\\n        \\n        \'aria-details\'?: string;\\n        \\n        \'aria-disabled\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-dropeffect\'?: \'none\' | \'copy\' | \'execute\' | \'link\' | \'move\' | \'popup\';\\n        \\n        \'aria-errormessage\'?: string;\\n        \\n        \'aria-expanded\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-flowto\'?: string;\\n        \\n        \'aria-grabbed\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-haspopup\'?: boolean | \'false\' | \'true\' | \'menu\' | \'listbox\' | \'tree\' | \'grid\' | \'dialog\';\\n        \\n        \'aria-hidden\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-invalid\'?: boolean | \'false\' | \'true\' | \'grammar\' | \'spelling\';\\n        \\n        \'aria-keyshortcuts\'?: string;\\n        \\n        \'aria-label\'?: string;\\n        \\n        \'aria-labelledby\'?: string;\\n        \\n        \'aria-level\'?: number;\\n        \\n        \'aria-live\'?: \'off\' | \'assertive\' | \'polite\';\\n        \\n        \'aria-modal\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-multiline\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-multiselectable\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-orientation\'?: \'horizontal\' | \'vertical\';\\n        \\n        \'aria-owns\'?: string;\\n        \\n        \'aria-placeholder\'?: string;\\n        \\n        \'aria-posinset\'?: number;\\n        \\n        \'aria-pressed\'?: boolean | \'false\' | \'mixed\' | \'true\';\\n        \\n        \'aria-readonly\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-relevant\'?: \'additions\' | \'additions text\' | \'all\' | \'removals\' | \'text\';\\n        \\n        \'aria-required\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-roledescription\'?: string;\\n        \\n        \'aria-rowcount\'?: number;\\n        \\n        \'aria-rowindex\'?: number;\\n        \\n        \'aria-rowspan\'?: number;\\n        \\n        \'aria-selected\'?: boolean | \'false\' | \'true\';\\n        \\n        \'aria-setsize\'?: number;\\n        \\n        \'aria-sort\'?: \'none\' | \'ascending\' | \'descending\' | \'other\';\\n        \\n        \'aria-valuemax\'?: number;\\n        \\n        \'aria-valuemin\'?: number;\\n        \\n        \'aria-valuenow\'?: number;\\n        \\n        \'aria-valuetext\'?: string;\\n    }\\n\\n    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\\n       \\n        defaultChecked?: boolean;\\n        defaultValue?: string | number | string[];\\n        suppressContentEditableWarning?: boolean;\\n        suppressHydrationWarning?: boolean;\\n\\n       \\n        accessKey?: string;\\n        className?: string;\\n        contentEditable?: Booleanish | \\"inherit\\";\\n        contextMenu?: string;\\n        dir?: string;\\n        draggable?: Booleanish;\\n        hidden?: boolean;\\n        id?: string;\\n        lang?: string;\\n        placeholder?: string;\\n        slot?: string;\\n        spellCheck?: Booleanish;\\n        style?: CSSProperties;\\n        tabIndex?: number;\\n        title?: string;\\n        translate?: \'yes\' | \'no\';\\n\\n       \\n        radioGroup?: string;\\n\\n       \\n        role?: string;\\n\\n       \\n        about?: string;\\n        datatype?: string;\\n        inlist?: any;\\n        prefix?: string;\\n        property?: string;\\n        resource?: string;\\n        typeof?: string;\\n        vocab?: string;\\n\\n       \\n        autoCapitalize?: string;\\n        autoCorrect?: string;\\n        autoSave?: string;\\n        color?: string;\\n        itemProp?: string;\\n        itemScope?: boolean;\\n        itemType?: string;\\n        itemID?: string;\\n        itemRef?: string;\\n        results?: number;\\n        security?: string;\\n        unselectable?: \'on\' | \'off\';\\n\\n       \\n        \\n        inputMode?: \'none\' | \'text\' | \'tel\' | \'url\' | \'email\' | \'numeric\' | \'decimal\' | \'search\';\\n        \\n        is?: string;\\n    }\\n\\n    interface AllHTMLAttributes<T> extends HTMLAttributes<T> {\\n       \\n        accept?: string;\\n        acceptCharset?: string;\\n        action?: string;\\n        allowFullScreen?: boolean;\\n        allowTransparency?: boolean;\\n        alt?: string;\\n        as?: string;\\n        async?: boolean;\\n        autoComplete?: string;\\n        autoFocus?: boolean;\\n        autoPlay?: boolean;\\n        capture?: boolean | string;\\n        cellPadding?: number | string;\\n        cellSpacing?: number | string;\\n        charSet?: string;\\n        challenge?: string;\\n        checked?: boolean;\\n        cite?: string;\\n        classID?: string;\\n        cols?: number;\\n        colSpan?: number;\\n        content?: string;\\n        controls?: boolean;\\n        coords?: string;\\n        crossOrigin?: string;\\n        data?: string;\\n        dateTime?: string;\\n        default?: boolean;\\n        defer?: boolean;\\n        disabled?: boolean;\\n        download?: any;\\n        encType?: string;\\n        form?: string;\\n        formAction?: string;\\n        formEncType?: string;\\n        formMethod?: string;\\n        formNoValidate?: boolean;\\n        formTarget?: string;\\n        frameBorder?: number | string;\\n        headers?: string;\\n        height?: number | string;\\n        high?: number;\\n        href?: string;\\n        hrefLang?: string;\\n        htmlFor?: string;\\n        httpEquiv?: string;\\n        integrity?: string;\\n        keyParams?: string;\\n        keyType?: string;\\n        kind?: string;\\n        label?: string;\\n        list?: string;\\n        loop?: boolean;\\n        low?: number;\\n        manifest?: string;\\n        marginHeight?: number;\\n        marginWidth?: number;\\n        max?: number | string;\\n        maxLength?: number;\\n        media?: string;\\n        mediaGroup?: string;\\n        method?: string;\\n        min?: number | string;\\n        minLength?: number;\\n        multiple?: boolean;\\n        muted?: boolean;\\n        name?: string;\\n        nonce?: string;\\n        noValidate?: boolean;\\n        open?: boolean;\\n        optimum?: number;\\n        pattern?: string;\\n        placeholder?: string;\\n        playsInline?: boolean;\\n        poster?: string;\\n        preload?: string;\\n        readOnly?: boolean;\\n        rel?: string;\\n        required?: boolean;\\n        reversed?: boolean;\\n        rows?: number;\\n        rowSpan?: number;\\n        sandbox?: string;\\n        scope?: string;\\n        scoped?: boolean;\\n        scrolling?: string;\\n        seamless?: boolean;\\n        selected?: boolean;\\n        shape?: string;\\n        size?: number;\\n        sizes?: string;\\n        span?: number;\\n        src?: string;\\n        srcDoc?: string;\\n        srcLang?: string;\\n        srcSet?: string;\\n        start?: number;\\n        step?: number | string;\\n        summary?: string;\\n        target?: string;\\n        type?: string;\\n        useMap?: string;\\n        value?: string | string[] | number;\\n        width?: number | string;\\n        wmode?: string;\\n        wrap?: string;\\n    }\\n\\n    interface AnchorHTMLAttributes<T> extends HTMLAttributes<T> {\\n        download?: any;\\n        href?: string;\\n        hrefLang?: string;\\n        media?: string;\\n        ping?: string;\\n        rel?: string;\\n        target?: string;\\n        type?: string;\\n        referrerPolicy?: string;\\n    }\\n\\n   \\n    interface AudioHTMLAttributes<T> extends MediaHTMLAttributes<T> {}\\n\\n    interface AreaHTMLAttributes<T> extends HTMLAttributes<T> {\\n        alt?: string;\\n        coords?: string;\\n        download?: any;\\n        href?: string;\\n        hrefLang?: string;\\n        media?: string;\\n        rel?: string;\\n        shape?: string;\\n        target?: string;\\n    }\\n\\n    interface BaseHTMLAttributes<T> extends HTMLAttributes<T> {\\n        href?: string;\\n        target?: string;\\n    }\\n\\n    interface BlockquoteHTMLAttributes<T> extends HTMLAttributes<T> {\\n        cite?: string;\\n    }\\n\\n    interface ButtonHTMLAttributes<T> extends HTMLAttributes<T> {\\n        autoFocus?: boolean;\\n        disabled?: boolean;\\n        form?: string;\\n        formAction?: string;\\n        formEncType?: string;\\n        formMethod?: string;\\n        formNoValidate?: boolean;\\n        formTarget?: string;\\n        name?: string;\\n        type?: \'submit\' | \'reset\' | \'button\';\\n        value?: string | string[] | number;\\n    }\\n\\n    interface CanvasHTMLAttributes<T> extends HTMLAttributes<T> {\\n        height?: number | string;\\n        width?: number | string;\\n    }\\n\\n    interface ColHTMLAttributes<T> extends HTMLAttributes<T> {\\n        span?: number;\\n        width?: number | string;\\n    }\\n\\n    interface ColgroupHTMLAttributes<T> extends HTMLAttributes<T> {\\n        span?: number;\\n    }\\n\\n    interface DataHTMLAttributes<T> extends HTMLAttributes<T> {\\n        value?: string | string[] | number;\\n    }\\n\\n    interface DetailsHTMLAttributes<T> extends HTMLAttributes<T> {\\n        open?: boolean;\\n    }\\n\\n    interface DelHTMLAttributes<T> extends HTMLAttributes<T> {\\n        cite?: string;\\n        dateTime?: string;\\n    }\\n\\n    interface DialogHTMLAttributes<T> extends HTMLAttributes<T> {\\n        open?: boolean;\\n    }\\n\\n    interface EmbedHTMLAttributes<T> extends HTMLAttributes<T> {\\n        height?: number | string;\\n        src?: string;\\n        type?: string;\\n        width?: number | string;\\n    }\\n\\n    interface FieldsetHTMLAttributes<T> extends HTMLAttributes<T> {\\n        disabled?: boolean;\\n        form?: string;\\n        name?: string;\\n    }\\n\\n    interface FormHTMLAttributes<T> extends HTMLAttributes<T> {\\n        acceptCharset?: string;\\n        action?: string;\\n        autoComplete?: string;\\n        encType?: string;\\n        method?: string;\\n        name?: string;\\n        noValidate?: boolean;\\n        target?: string;\\n    }\\n\\n    interface HtmlHTMLAttributes<T> extends HTMLAttributes<T> {\\n        manifest?: string;\\n    }\\n\\n    interface IframeHTMLAttributes<T> extends HTMLAttributes<T> {\\n        allow?: string;\\n        allowFullScreen?: boolean;\\n        allowTransparency?: boolean;\\n        frameBorder?: number | string;\\n        height?: number | string;\\n        marginHeight?: number;\\n        marginWidth?: number;\\n        name?: string;\\n        referrerPolicy?: string;\\n        sandbox?: string;\\n        scrolling?: string;\\n        seamless?: boolean;\\n        src?: string;\\n        srcDoc?: string;\\n        width?: number | string;\\n    }\\n\\n    interface ImgHTMLAttributes<T> extends HTMLAttributes<T> {\\n        alt?: string;\\n        crossOrigin?: \\"anonymous\\" | \\"use-credentials\\" | \\"\\";\\n        decoding?: \\"async\\" | \\"auto\\" | \\"sync\\";\\n        height?: number | string;\\n        loading?: \\"eager\\" | \\"lazy\\";\\n        referrerPolicy?: \\"no-referrer\\" | \\"origin\\" | \\"unsafe-url\\";\\n        sizes?: string;\\n        src?: string;\\n        srcSet?: string;\\n        useMap?: string;\\n        width?: number | string;\\n    }\\n\\n    interface InsHTMLAttributes<T> extends HTMLAttributes<T> {\\n        cite?: string;\\n        dateTime?: string;\\n    }\\n\\n    interface InputHTMLAttributes<T> extends HTMLAttributes<T> {\\n        accept?: string;\\n        alt?: string;\\n        autoComplete?: string;\\n        autoFocus?: boolean;\\n        capture?: boolean | string;\\n        checked?: boolean;\\n        crossOrigin?: string;\\n        disabled?: boolean;\\n        form?: string;\\n        formAction?: string;\\n        formEncType?: string;\\n        formMethod?: string;\\n        formNoValidate?: boolean;\\n        formTarget?: string;\\n        height?: number | string;\\n        list?: string;\\n        max?: number | string;\\n        maxLength?: number;\\n        min?: number | string;\\n        minLength?: number;\\n        multiple?: boolean;\\n        name?: string;\\n        pattern?: string;\\n        placeholder?: string;\\n        readOnly?: boolean;\\n        required?: boolean;\\n        size?: number;\\n        src?: string;\\n        step?: number | string;\\n        type?: string;\\n        value?: string | string[] | number;\\n        width?: number | string;\\n\\n        onChange?: ChangeEventHandler<T>;\\n    }\\n\\n    interface KeygenHTMLAttributes<T> extends HTMLAttributes<T> {\\n        autoFocus?: boolean;\\n        challenge?: string;\\n        disabled?: boolean;\\n        form?: string;\\n        keyType?: string;\\n        keyParams?: string;\\n        name?: string;\\n    }\\n\\n    interface LabelHTMLAttributes<T> extends HTMLAttributes<T> {\\n        form?: string;\\n        htmlFor?: string;\\n    }\\n\\n    interface LiHTMLAttributes<T> extends HTMLAttributes<T> {\\n        value?: string | string[] | number;\\n    }\\n\\n    interface LinkHTMLAttributes<T> extends HTMLAttributes<T> {\\n        as?: string;\\n        crossOrigin?: string;\\n        href?: string;\\n        hrefLang?: string;\\n        integrity?: string;\\n        media?: string;\\n        rel?: string;\\n        sizes?: string;\\n        type?: string;\\n    }\\n\\n    interface MapHTMLAttributes<T> extends HTMLAttributes<T> {\\n        name?: string;\\n    }\\n\\n    interface MenuHTMLAttributes<T> extends HTMLAttributes<T> {\\n        type?: string;\\n    }\\n\\n    interface MediaHTMLAttributes<T> extends HTMLAttributes<T> {\\n        autoPlay?: boolean;\\n        controls?: boolean;\\n        controlsList?: string;\\n        crossOrigin?: string;\\n        loop?: boolean;\\n        mediaGroup?: string;\\n        muted?: boolean;\\n        playsinline?: boolean;\\n        preload?: string;\\n        src?: string;\\n    }\\n\\n    interface MetaHTMLAttributes<T> extends HTMLAttributes<T> {\\n        charSet?: string;\\n        content?: string;\\n        httpEquiv?: string;\\n        name?: string;\\n    }\\n\\n    interface MeterHTMLAttributes<T> extends HTMLAttributes<T> {\\n        form?: string;\\n        high?: number;\\n        low?: number;\\n        max?: number | string;\\n        min?: number | string;\\n        optimum?: number;\\n        value?: string | string[] | number;\\n    }\\n\\n    interface QuoteHTMLAttributes<T> extends HTMLAttributes<T> {\\n        cite?: string;\\n    }\\n\\n    interface ObjectHTMLAttributes<T> extends HTMLAttributes<T> {\\n        classID?: string;\\n        data?: string;\\n        form?: string;\\n        height?: number | string;\\n        name?: string;\\n        type?: string;\\n        useMap?: string;\\n        width?: number | string;\\n        wmode?: string;\\n    }\\n\\n    interface OlHTMLAttributes<T> extends HTMLAttributes<T> {\\n        reversed?: boolean;\\n        start?: number;\\n        type?: \'1\' | \'a\' | \'A\' | \'i\' | \'I\';\\n    }\\n\\n    interface OptgroupHTMLAttributes<T> extends HTMLAttributes<T> {\\n        disabled?: boolean;\\n        label?: string;\\n    }\\n\\n    interface OptionHTMLAttributes<T> extends HTMLAttributes<T> {\\n        disabled?: boolean;\\n        label?: string;\\n        selected?: boolean;\\n        value?: string | string[] | number;\\n    }\\n\\n    interface OutputHTMLAttributes<T> extends HTMLAttributes<T> {\\n        form?: string;\\n        htmlFor?: string;\\n        name?: string;\\n    }\\n\\n    interface ParamHTMLAttributes<T> extends HTMLAttributes<T> {\\n        name?: string;\\n        value?: string | string[] | number;\\n    }\\n\\n    interface ProgressHTMLAttributes<T> extends HTMLAttributes<T> {\\n        max?: number | string;\\n        value?: string | string[] | number;\\n    }\\n\\n    interface SlotHTMLAttributes<T> extends HTMLAttributes<T> {\\n        name?: string;\\n    }\\n\\n    interface ScriptHTMLAttributes<T> extends HTMLAttributes<T> {\\n        async?: boolean;\\n        charSet?: string;\\n        crossOrigin?: string;\\n        defer?: boolean;\\n        integrity?: string;\\n        noModule?: boolean;\\n        nonce?: string;\\n        src?: string;\\n        type?: string;\\n    }\\n\\n    interface SelectHTMLAttributes<T> extends HTMLAttributes<T> {\\n        autoComplete?: string;\\n        autoFocus?: boolean;\\n        disabled?: boolean;\\n        form?: string;\\n        multiple?: boolean;\\n        name?: string;\\n        required?: boolean;\\n        size?: number;\\n        value?: string | string[] | number;\\n        onChange?: ChangeEventHandler<T>;\\n    }\\n\\n    interface SourceHTMLAttributes<T> extends HTMLAttributes<T> {\\n        media?: string;\\n        sizes?: string;\\n        src?: string;\\n        srcSet?: string;\\n        type?: string;\\n    }\\n\\n    interface StyleHTMLAttributes<T> extends HTMLAttributes<T> {\\n        media?: string;\\n        nonce?: string;\\n        scoped?: boolean;\\n        type?: string;\\n    }\\n\\n    interface TableHTMLAttributes<T> extends HTMLAttributes<T> {\\n        cellPadding?: number | string;\\n        cellSpacing?: number | string;\\n        summary?: string;\\n    }\\n\\n    interface TextareaHTMLAttributes<T> extends HTMLAttributes<T> {\\n        autoComplete?: string;\\n        autoFocus?: boolean;\\n        cols?: number;\\n        dirName?: string;\\n        disabled?: boolean;\\n        form?: string;\\n        maxLength?: number;\\n        minLength?: number;\\n        name?: string;\\n        placeholder?: string;\\n        readOnly?: boolean;\\n        required?: boolean;\\n        rows?: number;\\n        value?: string | string[] | number;\\n        wrap?: string;\\n\\n        onChange?: ChangeEventHandler<T>;\\n    }\\n\\n    interface TdHTMLAttributes<T> extends HTMLAttributes<T> {\\n        align?: \\"left\\" | \\"center\\" | \\"right\\" | \\"justify\\" | \\"char\\";\\n        colSpan?: number;\\n        headers?: string;\\n        rowSpan?: number;\\n        scope?: string;\\n        abbr?: string;\\n        valign?: \\"top\\" | \\"middle\\" | \\"bottom\\" | \\"baseline\\";\\n    }\\n\\n    interface ThHTMLAttributes<T> extends HTMLAttributes<T> {\\n        align?: \\"left\\" | \\"center\\" | \\"right\\" | \\"justify\\" | \\"char\\";\\n        colSpan?: number;\\n        headers?: string;\\n        rowSpan?: number;\\n        scope?: string;\\n        abbr?: string;\\n    }\\n\\n    interface TimeHTMLAttributes<T> extends HTMLAttributes<T> {\\n        dateTime?: string;\\n    }\\n\\n    interface TrackHTMLAttributes<T> extends HTMLAttributes<T> {\\n        default?: boolean;\\n        kind?: string;\\n        label?: string;\\n        src?: string;\\n        srcLang?: string;\\n    }\\n\\n    interface VideoHTMLAttributes<T> extends MediaHTMLAttributes<T> {\\n        height?: number | string;\\n        playsInline?: boolean;\\n        poster?: string;\\n        width?: number | string;\\n        disablePictureInPicture?: boolean;\\n    }\\n\\n   \\n   \\n   \\n   \\n   \\n   \\n   \\n    interface SVGAttributes<T> extends AriaAttributes, DOMAttributes<T> {\\n       \\n       \\n        className?: string;\\n        color?: string;\\n        height?: number | string;\\n        id?: string;\\n        lang?: string;\\n        max?: number | string;\\n        media?: string;\\n        method?: string;\\n        min?: number | string;\\n        name?: string;\\n        style?: CSSProperties;\\n        target?: string;\\n        type?: string;\\n        width?: number | string;\\n\\n       \\n        role?: string;\\n        tabIndex?: number;\\n        crossOrigin?: \\"anonymous\\" | \\"use-credentials\\" | \\"\\";\\n\\n       \\n        accentHeight?: number | string;\\n        accumulate?: \\"none\\" | \\"sum\\";\\n        additive?: \\"replace\\" | \\"sum\\";\\n        alignmentBaseline?: \\"auto\\" | \\"baseline\\" | \\"before-edge\\" | \\"text-before-edge\\" | \\"middle\\" | \\"central\\" | \\"after-edge\\" |\\n        \\"text-after-edge\\" | \\"ideographic\\" | \\"alphabetic\\" | \\"hanging\\" | \\"mathematical\\" | \\"inherit\\";\\n        allowReorder?: \\"no\\" | \\"yes\\";\\n        alphabetic?: number | string;\\n        amplitude?: number | string;\\n        arabicForm?: \\"initial\\" | \\"medial\\" | \\"terminal\\" | \\"isolated\\";\\n        ascent?: number | string;\\n        attributeName?: string;\\n        attributeType?: string;\\n        autoReverse?: Booleanish;\\n        azimuth?: number | string;\\n        baseFrequency?: number | string;\\n        baselineShift?: number | string;\\n        baseProfile?: number | string;\\n        bbox?: number | string;\\n        begin?: number | string;\\n        bias?: number | string;\\n        by?: number | string;\\n        calcMode?: number | string;\\n        capHeight?: number | string;\\n        clip?: number | string;\\n        clipPath?: string;\\n        clipPathUnits?: number | string;\\n        clipRule?: number | string;\\n        colorInterpolation?: number | string;\\n        colorInterpolationFilters?: \\"auto\\" | \\"sRGB\\" | \\"linearRGB\\" | \\"inherit\\";\\n        colorProfile?: number | string;\\n        colorRendering?: number | string;\\n        contentScriptType?: number | string;\\n        contentStyleType?: number | string;\\n        cursor?: number | string;\\n        cx?: number | string;\\n        cy?: number | string;\\n        d?: string;\\n        decelerate?: number | string;\\n        descent?: number | string;\\n        diffuseConstant?: number | string;\\n        direction?: number | string;\\n        display?: number | string;\\n        divisor?: number | string;\\n        dominantBaseline?: number | string;\\n        dur?: number | string;\\n        dx?: number | string;\\n        dy?: number | string;\\n        edgeMode?: number | string;\\n        elevation?: number | string;\\n        enableBackground?: number | string;\\n        end?: number | string;\\n        exponent?: number | string;\\n        externalResourcesRequired?: Booleanish;\\n        fill?: string;\\n        fillOpacity?: number | string;\\n        fillRule?: \\"nonzero\\" | \\"evenodd\\" | \\"inherit\\";\\n        filter?: string;\\n        filterRes?: number | string;\\n        filterUnits?: number | string;\\n        floodColor?: number | string;\\n        floodOpacity?: number | string;\\n        focusable?: Booleanish | \\"auto\\";\\n        fontFamily?: string;\\n        fontSize?: number | string;\\n        fontSizeAdjust?: number | string;\\n        fontStretch?: number | string;\\n        fontStyle?: number | string;\\n        fontVariant?: number | string;\\n        fontWeight?: number | string;\\n        format?: number | string;\\n        from?: number | string;\\n        fx?: number | string;\\n        fy?: number | string;\\n        g1?: number | string;\\n        g2?: number | string;\\n        glyphName?: number | string;\\n        glyphOrientationHorizontal?: number | string;\\n        glyphOrientationVertical?: number | string;\\n        glyphRef?: number | string;\\n        gradientTransform?: string;\\n        gradientUnits?: string;\\n        hanging?: number | string;\\n        horizAdvX?: number | string;\\n        horizOriginX?: number | string;\\n        href?: string;\\n        ideographic?: number | string;\\n        imageRendering?: number | string;\\n        in2?: number | string;\\n        in?: string;\\n        intercept?: number | string;\\n        k1?: number | string;\\n        k2?: number | string;\\n        k3?: number | string;\\n        k4?: number | string;\\n        k?: number | string;\\n        kernelMatrix?: number | string;\\n        kernelUnitLength?: number | string;\\n        kerning?: number | string;\\n        keyPoints?: number | string;\\n        keySplines?: number | string;\\n        keyTimes?: number | string;\\n        lengthAdjust?: number | string;\\n        letterSpacing?: number | string;\\n        lightingColor?: number | string;\\n        limitingConeAngle?: number | string;\\n        local?: number | string;\\n        markerEnd?: string;\\n        markerHeight?: number | string;\\n        markerMid?: string;\\n        markerStart?: string;\\n        markerUnits?: number | string;\\n        markerWidth?: number | string;\\n        mask?: string;\\n        maskContentUnits?: number | string;\\n        maskUnits?: number | string;\\n        mathematical?: number | string;\\n        mode?: number | string;\\n        numOctaves?: number | string;\\n        offset?: number | string;\\n        opacity?: number | string;\\n        operator?: number | string;\\n        order?: number | string;\\n        orient?: number | string;\\n        orientation?: number | string;\\n        origin?: number | string;\\n        overflow?: number | string;\\n        overlinePosition?: number | string;\\n        overlineThickness?: number | string;\\n        paintOrder?: number | string;\\n        panose1?: number | string;\\n        path?: string;\\n        pathLength?: number | string;\\n        patternContentUnits?: string;\\n        patternTransform?: number | string;\\n        patternUnits?: string;\\n        pointerEvents?: number | string;\\n        points?: string;\\n        pointsAtX?: number | string;\\n        pointsAtY?: number | string;\\n        pointsAtZ?: number | string;\\n        preserveAlpha?: Booleanish;\\n        preserveAspectRatio?: string;\\n        primitiveUnits?: number | string;\\n        r?: number | string;\\n        radius?: number | string;\\n        refX?: number | string;\\n        refY?: number | string;\\n        renderingIntent?: number | string;\\n        repeatCount?: number | string;\\n        repeatDur?: number | string;\\n        requiredExtensions?: number | string;\\n        requiredFeatures?: number | string;\\n        restart?: number | string;\\n        result?: string;\\n        rotate?: number | string;\\n        rx?: number | string;\\n        ry?: number | string;\\n        scale?: number | string;\\n        seed?: number | string;\\n        shapeRendering?: number | string;\\n        slope?: number | string;\\n        spacing?: number | string;\\n        specularConstant?: number | string;\\n        specularExponent?: number | string;\\n        speed?: number | string;\\n        spreadMethod?: string;\\n        startOffset?: number | string;\\n        stdDeviation?: number | string;\\n        stemh?: number | string;\\n        stemv?: number | string;\\n        stitchTiles?: number | string;\\n        stopColor?: string;\\n        stopOpacity?: number | string;\\n        strikethroughPosition?: number | string;\\n        strikethroughThickness?: number | string;\\n        string?: number | string;\\n        stroke?: string;\\n        strokeDasharray?: string | number;\\n        strokeDashoffset?: string | number;\\n        strokeLinecap?: \\"butt\\" | \\"round\\" | \\"square\\" | \\"inherit\\";\\n        strokeLinejoin?: \\"miter\\" | \\"round\\" | \\"bevel\\" | \\"inherit\\";\\n        strokeMiterlimit?: number | string;\\n        strokeOpacity?: number | string;\\n        strokeWidth?: number | string;\\n        surfaceScale?: number | string;\\n        systemLanguage?: number | string;\\n        tableValues?: number | string;\\n        targetX?: number | string;\\n        targetY?: number | string;\\n        textAnchor?: string;\\n        textDecoration?: number | string;\\n        textLength?: number | string;\\n        textRendering?: number | string;\\n        to?: number | string;\\n        transform?: string;\\n        u1?: number | string;\\n        u2?: number | string;\\n        underlinePosition?: number | string;\\n        underlineThickness?: number | string;\\n        unicode?: number | string;\\n        unicodeBidi?: number | string;\\n        unicodeRange?: number | string;\\n        unitsPerEm?: number | string;\\n        vAlphabetic?: number | string;\\n        values?: string;\\n        vectorEffect?: number | string;\\n        version?: string;\\n        vertAdvY?: number | string;\\n        vertOriginX?: number | string;\\n        vertOriginY?: number | string;\\n        vHanging?: number | string;\\n        vIdeographic?: number | string;\\n        viewBox?: string;\\n        viewTarget?: number | string;\\n        visibility?: number | string;\\n        vMathematical?: number | string;\\n        widths?: number | string;\\n        wordSpacing?: number | string;\\n        writingMode?: number | string;\\n        x1?: number | string;\\n        x2?: number | string;\\n        x?: number | string;\\n        xChannelSelector?: string;\\n        xHeight?: number | string;\\n        xlinkActuate?: string;\\n        xlinkArcrole?: string;\\n        xlinkHref?: string;\\n        xlinkRole?: string;\\n        xlinkShow?: string;\\n        xlinkTitle?: string;\\n        xlinkType?: string;\\n        xmlBase?: string;\\n        xmlLang?: string;\\n        xmlns?: string;\\n        xmlnsXlink?: string;\\n        xmlSpace?: string;\\n        y1?: number | string;\\n        y2?: number | string;\\n        y?: number | string;\\n        yChannelSelector?: string;\\n        z?: number | string;\\n        zoomAndPan?: string;\\n    }\\n\\n    interface WebViewHTMLAttributes<T> extends HTMLAttributes<T> {\\n        allowFullScreen?: boolean;\\n        allowpopups?: boolean;\\n        autoFocus?: boolean;\\n        autosize?: boolean;\\n        blinkfeatures?: string;\\n        disableblinkfeatures?: string;\\n        disableguestresize?: boolean;\\n        disablewebsecurity?: boolean;\\n        guestinstance?: string;\\n        httpreferrer?: string;\\n        nodeintegration?: boolean;\\n        partition?: string;\\n        plugins?: boolean;\\n        preload?: string;\\n        src?: string;\\n        useragent?: string;\\n        webpreferences?: string;\\n    }\\n\\n   \\n   \\n\\n    interface ReactHTML {\\n        a: DetailedHTMLFactory<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;\\n        abbr: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        address: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        area: DetailedHTMLFactory<AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>;\\n        article: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        aside: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        audio: DetailedHTMLFactory<AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>;\\n        b: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        base: DetailedHTMLFactory<BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>;\\n        bdi: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        bdo: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        big: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        blockquote: DetailedHTMLFactory<BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>;\\n        body: DetailedHTMLFactory<HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>;\\n        br: DetailedHTMLFactory<HTMLAttributes<HTMLBRElement>, HTMLBRElement>;\\n        button: DetailedHTMLFactory<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\\n        canvas: DetailedHTMLFactory<CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>;\\n        caption: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        cite: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        code: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        col: DetailedHTMLFactory<ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;\\n        colgroup: DetailedHTMLFactory<ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;\\n        data: DetailedHTMLFactory<DataHTMLAttributes<HTMLDataElement>, HTMLDataElement>;\\n        datalist: DetailedHTMLFactory<HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>;\\n        dd: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        del: DetailedHTMLFactory<DelHTMLAttributes<HTMLElement>, HTMLElement>;\\n        details: DetailedHTMLFactory<DetailsHTMLAttributes<HTMLElement>, HTMLElement>;\\n        dfn: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        dialog: DetailedHTMLFactory<DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>;\\n        div: DetailedHTMLFactory<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\\n        dl: DetailedHTMLFactory<HTMLAttributes<HTMLDListElement>, HTMLDListElement>;\\n        dt: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        em: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        embed: DetailedHTMLFactory<EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>;\\n        fieldset: DetailedHTMLFactory<FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>;\\n        figcaption: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        figure: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        footer: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        form: DetailedHTMLFactory<FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>;\\n        h1: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n        h2: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n        h3: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n        h4: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n        h5: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n        h6: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n        head: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLHeadElement>;\\n        header: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        hgroup: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        hr: DetailedHTMLFactory<HTMLAttributes<HTMLHRElement>, HTMLHRElement>;\\n        html: DetailedHTMLFactory<HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>;\\n        i: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        iframe: DetailedHTMLFactory<IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>;\\n        img: DetailedHTMLFactory<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>;\\n        input: DetailedHTMLFactory<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\\n        ins: DetailedHTMLFactory<InsHTMLAttributes<HTMLModElement>, HTMLModElement>;\\n        kbd: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        keygen: DetailedHTMLFactory<KeygenHTMLAttributes<HTMLElement>, HTMLElement>;\\n        label: DetailedHTMLFactory<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;\\n        legend: DetailedHTMLFactory<HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>;\\n        li: DetailedHTMLFactory<LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>;\\n        link: DetailedHTMLFactory<LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>;\\n        main: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        map: DetailedHTMLFactory<MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>;\\n        mark: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        menu: DetailedHTMLFactory<MenuHTMLAttributes<HTMLElement>, HTMLElement>;\\n        menuitem: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        meta: DetailedHTMLFactory<MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>;\\n        meter: DetailedHTMLFactory<MeterHTMLAttributes<HTMLElement>, HTMLElement>;\\n        nav: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        noscript: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        object: DetailedHTMLFactory<ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>;\\n        ol: DetailedHTMLFactory<OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>;\\n        optgroup: DetailedHTMLFactory<OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>;\\n        option: DetailedHTMLFactory<OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>;\\n        output: DetailedHTMLFactory<OutputHTMLAttributes<HTMLElement>, HTMLElement>;\\n        p: DetailedHTMLFactory<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>;\\n        param: DetailedHTMLFactory<ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>;\\n        picture: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        pre: DetailedHTMLFactory<HTMLAttributes<HTMLPreElement>, HTMLPreElement>;\\n        progress: DetailedHTMLFactory<ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>;\\n        q: DetailedHTMLFactory<QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>;\\n        rp: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        rt: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        ruby: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        s: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        samp: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        slot: DetailedHTMLFactory<SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement>;\\n        script: DetailedHTMLFactory<ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>;\\n        section: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        select: DetailedHTMLFactory<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\\n        small: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        source: DetailedHTMLFactory<SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>;\\n        span: DetailedHTMLFactory<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\\n        strong: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        style: DetailedHTMLFactory<StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>;\\n        sub: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        summary: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        sup: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        table: DetailedHTMLFactory<TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>;\\n        template: DetailedHTMLFactory<HTMLAttributes<HTMLTemplateElement>, HTMLTemplateElement>;\\n        tbody: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\\n        td: DetailedHTMLFactory<TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>;\\n        textarea: DetailedHTMLFactory<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;\\n        tfoot: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\\n        th: DetailedHTMLFactory<ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>;\\n        thead: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\\n        time: DetailedHTMLFactory<TimeHTMLAttributes<HTMLElement>, HTMLElement>;\\n        title: DetailedHTMLFactory<HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>;\\n        tr: DetailedHTMLFactory<HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>;\\n        track: DetailedHTMLFactory<TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>;\\n        u: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        ul: DetailedHTMLFactory<HTMLAttributes<HTMLUListElement>, HTMLUListElement>;\\n        \\"var\\": DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        video: DetailedHTMLFactory<VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>;\\n        wbr: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\\n        webview: DetailedHTMLFactory<WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement>;\\n    }\\n\\n    interface ReactSVG {\\n        animate: SVGFactory;\\n        circle: SVGFactory;\\n        clipPath: SVGFactory;\\n        defs: SVGFactory;\\n        desc: SVGFactory;\\n        ellipse: SVGFactory;\\n        feBlend: SVGFactory;\\n        feColorMatrix: SVGFactory;\\n        feComponentTransfer: SVGFactory;\\n        feComposite: SVGFactory;\\n        feConvolveMatrix: SVGFactory;\\n        feDiffuseLighting: SVGFactory;\\n        feDisplacementMap: SVGFactory;\\n        feDistantLight: SVGFactory;\\n        feDropShadow: SVGFactory;\\n        feFlood: SVGFactory;\\n        feFuncA: SVGFactory;\\n        feFuncB: SVGFactory;\\n        feFuncG: SVGFactory;\\n        feFuncR: SVGFactory;\\n        feGaussianBlur: SVGFactory;\\n        feImage: SVGFactory;\\n        feMerge: SVGFactory;\\n        feMergeNode: SVGFactory;\\n        feMorphology: SVGFactory;\\n        feOffset: SVGFactory;\\n        fePointLight: SVGFactory;\\n        feSpecularLighting: SVGFactory;\\n        feSpotLight: SVGFactory;\\n        feTile: SVGFactory;\\n        feTurbulence: SVGFactory;\\n        filter: SVGFactory;\\n        foreignObject: SVGFactory;\\n        g: SVGFactory;\\n        image: SVGFactory;\\n        line: SVGFactory;\\n        linearGradient: SVGFactory;\\n        marker: SVGFactory;\\n        mask: SVGFactory;\\n        metadata: SVGFactory;\\n        path: SVGFactory;\\n        pattern: SVGFactory;\\n        polygon: SVGFactory;\\n        polyline: SVGFactory;\\n        radialGradient: SVGFactory;\\n        rect: SVGFactory;\\n        stop: SVGFactory;\\n        svg: SVGFactory;\\n        switch: SVGFactory;\\n        symbol: SVGFactory;\\n        text: SVGFactory;\\n        textPath: SVGFactory;\\n        tspan: SVGFactory;\\n        use: SVGFactory;\\n        view: SVGFactory;\\n    }\\n\\n    interface ReactDOM extends ReactHTML, ReactSVG { }\\n\\n   \\n   \\n\\n    type Validator<T> = PropTypes.Validator<T>;\\n\\n    type Requireable<T> = PropTypes.Requireable<T>;\\n\\n    type ValidationMap<T> = PropTypes.ValidationMap<T>;\\n\\n    type WeakValidationMap<T> = {\\n        [K in keyof T]?: null extends T[K]\\n            ? Validator<T[K] | null | undefined>\\n            : undefined extends T[K]\\n            ? Validator<T[K] | null | undefined>\\n            : Validator<T[K]>\\n    };\\n\\n    interface ReactPropTypes {\\n        any: typeof PropTypes.any;\\n        array: typeof PropTypes.array;\\n        bool: typeof PropTypes.bool;\\n        func: typeof PropTypes.func;\\n        number: typeof PropTypes.number;\\n        object: typeof PropTypes.object;\\n        string: typeof PropTypes.string;\\n        node: typeof PropTypes.node;\\n        element: typeof PropTypes.element;\\n        instanceOf: typeof PropTypes.instanceOf;\\n        oneOf: typeof PropTypes.oneOf;\\n        oneOfType: typeof PropTypes.oneOfType;\\n        arrayOf: typeof PropTypes.arrayOf;\\n        objectOf: typeof PropTypes.objectOf;\\n        shape: typeof PropTypes.shape;\\n        exact: typeof PropTypes.exact;\\n    }\\n\\n   \\n   \\n\\n    interface ReactChildren {\\n        map<T, C>(children: C | C[], fn: (child: C, index: number) => T):\\n            C extends null | undefined ? C : Array<Exclude<T, boolean | null | undefined>>;\\n        forEach<C>(children: C | C[], fn: (child: C, index: number) => void): void;\\n        count(children: any): number;\\n        only<C>(children: C): C extends any[] ? never : C;\\n        toArray(children: ReactNode | ReactNode[]): Array<Exclude<ReactNode, boolean | null | undefined>>;\\n    }\\n\\n   \\n   \\n   \\n\\n    interface AbstractView {\\n        styleMedia: StyleMedia;\\n        document: Document;\\n    }\\n\\n    interface Touch {\\n        identifier: number;\\n        target: EventTarget;\\n        screenX: number;\\n        screenY: number;\\n        clientX: number;\\n        clientY: number;\\n        pageX: number;\\n        pageY: number;\\n    }\\n\\n    interface TouchList {\\n        [index: number]: Touch;\\n        length: number;\\n        item(index: number): Touch;\\n        identifiedTouch(identifier: number): Touch;\\n    }\\n\\n   \\n   \\n    interface ErrorInfo {\\n        \\n        componentStack: string;\\n    }\\n}\\n\\ntype IsExactlyAny<T> = boolean extends (T extends never ? true : false) ? true : false;\\n\\ntype ExactlyAnyPropertyKeys<T> = { [K in keyof T]: IsExactlyAny<T[K]> extends true ? K : never }[keyof T];\\ntype NotExactlyAnyPropertyKeys<T> = Exclude<keyof T, ExactlyAnyPropertyKeys<T>>;\\n\\ntype MergePropTypes<P, T> =\\n   \\n    P extends any\\n       \\n        ? IsExactlyAny<P> extends true ? T :\\n           \\n            string extends keyof P ? P :\\n               \\n                & Pick<P, NotExactlyAnyPropertyKeys<P>>\\n               \\n                & Pick<T, Exclude<keyof T, NotExactlyAnyPropertyKeys<P>>>\\n               \\n                & Pick<P, Exclude<keyof P, keyof T>>\\n        : never;\\n\\ntype Defaultize<P, D> = P extends any\\n    ? string extends keyof P ? P :\\n        & Pick<P, Exclude<keyof P, keyof D>>\\n        & Partial<Pick<P, Extract<keyof P, keyof D>>>\\n        & Partial<Pick<D, Exclude<keyof D, keyof P>>>\\n    : never;\\n\\ntype ReactManagedAttributes<C, P> = C extends { propTypes: infer T; defaultProps: infer D; }\\n    ? Defaultize<MergePropTypes<P, PropTypes.InferProps<T>>, D>\\n    : C extends { propTypes: infer T; }\\n        ? MergePropTypes<P, PropTypes.InferProps<T>>\\n        : C extends { defaultProps: infer D; }\\n            ? Defaultize<P, D>\\n            : P;\\n\\ndeclare global {\\n    namespace JSX {\\n       \\n        interface Element extends React.ReactElement<any, any> { }\\n        interface ElementClass extends React.Component<any> {\\n            render(): React.ReactNode;\\n        }\\n        interface ElementAttributesProperty { props: {}; }\\n        interface ElementChildrenAttribute { children: {}; }\\n\\n       \\n       \\n        type LibraryManagedAttributes<C, P> = C extends React.MemoExoticComponent<infer T> | React.LazyExoticComponent<infer T>\\n            ? T extends React.MemoExoticComponent<infer U> | React.LazyExoticComponent<infer U>\\n                ? ReactManagedAttributes<U, P>\\n                : ReactManagedAttributes<T, P>\\n            : ReactManagedAttributes<C, P>;\\n\\n       \\n        interface IntrinsicAttributes extends React.Attributes { }\\n       \\n        interface IntrinsicClassAttributes<T> extends React.ClassAttributes<T> { }\\n\\n        interface IntrinsicElements {\\n           \\n            a: React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;\\n            abbr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            address: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            area: React.DetailedHTMLProps<React.AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>;\\n            article: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            aside: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            audio: React.DetailedHTMLProps<React.AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>;\\n            b: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            base: React.DetailedHTMLProps<React.BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>;\\n            bdi: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            bdo: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            big: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            blockquote: React.DetailedHTMLProps<React.BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>;\\n            body: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>;\\n            br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>;\\n            button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\\n            canvas: React.DetailedHTMLProps<React.CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>;\\n            caption: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            cite: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            code: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            col: React.DetailedHTMLProps<React.ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;\\n            colgroup: React.DetailedHTMLProps<React.ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;\\n            data: React.DetailedHTMLProps<React.DataHTMLAttributes<HTMLDataElement>, HTMLDataElement>;\\n            datalist: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>;\\n            dd: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            del: React.DetailedHTMLProps<React.DelHTMLAttributes<HTMLElement>, HTMLElement>;\\n            details: React.DetailedHTMLProps<React.DetailsHTMLAttributes<HTMLElement>, HTMLElement>;\\n            dfn: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            dialog: React.DetailedHTMLProps<React.DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>;\\n            div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\\n            dl: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDListElement>, HTMLDListElement>;\\n            dt: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            em: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            embed: React.DetailedHTMLProps<React.EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>;\\n            fieldset: React.DetailedHTMLProps<React.FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>;\\n            figcaption: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            figure: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            footer: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            form: React.DetailedHTMLProps<React.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>;\\n            h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n            h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n            h3: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n            h4: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n            h5: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n            h6: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\\n            head: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>;\\n            header: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            hgroup: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            hr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHRElement>, HTMLHRElement>;\\n            html: React.DetailedHTMLProps<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>;\\n            i: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            iframe: React.DetailedHTMLProps<React.IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>;\\n            img: React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>;\\n            input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\\n            ins: React.DetailedHTMLProps<React.InsHTMLAttributes<HTMLModElement>, HTMLModElement>;\\n            kbd: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            keygen: React.DetailedHTMLProps<React.KeygenHTMLAttributes<HTMLElement>, HTMLElement>;\\n            label: React.DetailedHTMLProps<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;\\n            legend: React.DetailedHTMLProps<React.HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>;\\n            li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>;\\n            link: React.DetailedHTMLProps<React.LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>;\\n            main: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            map: React.DetailedHTMLProps<React.MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>;\\n            mark: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            menu: React.DetailedHTMLProps<React.MenuHTMLAttributes<HTMLElement>, HTMLElement>;\\n            menuitem: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            meta: React.DetailedHTMLProps<React.MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>;\\n            meter: React.DetailedHTMLProps<React.MeterHTMLAttributes<HTMLElement>, HTMLElement>;\\n            nav: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            noindex: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            noscript: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            object: React.DetailedHTMLProps<React.ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>;\\n            ol: React.DetailedHTMLProps<React.OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>;\\n            optgroup: React.DetailedHTMLProps<React.OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>;\\n            option: React.DetailedHTMLProps<React.OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>;\\n            output: React.DetailedHTMLProps<React.OutputHTMLAttributes<HTMLElement>, HTMLElement>;\\n            p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>;\\n            param: React.DetailedHTMLProps<React.ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>;\\n            picture: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            pre: React.DetailedHTMLProps<React.HTMLAttributes<HTMLPreElement>, HTMLPreElement>;\\n            progress: React.DetailedHTMLProps<React.ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>;\\n            q: React.DetailedHTMLProps<React.QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>;\\n            rp: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            rt: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            ruby: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            s: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            samp: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            slot: React.DetailedHTMLProps<React.SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement>;\\n            script: React.DetailedHTMLProps<React.ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>;\\n            section: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            select: React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\\n            small: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            source: React.DetailedHTMLProps<React.SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>;\\n            span: React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\\n            strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            style: React.DetailedHTMLProps<React.StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>;\\n            sub: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            summary: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            sup: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            table: React.DetailedHTMLProps<React.TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>;\\n            template: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTemplateElement>, HTMLTemplateElement>;\\n            tbody: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\\n            td: React.DetailedHTMLProps<React.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>;\\n            textarea: React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;\\n            tfoot: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\\n            th: React.DetailedHTMLProps<React.ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>;\\n            thead: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\\n            time: React.DetailedHTMLProps<React.TimeHTMLAttributes<HTMLElement>, HTMLElement>;\\n            title: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>;\\n            tr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>;\\n            track: React.DetailedHTMLProps<React.TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>;\\n            u: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            ul: React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>;\\n            \\"var\\": React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            video: React.DetailedHTMLProps<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>;\\n            wbr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\\n            webview: React.DetailedHTMLProps<React.WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement>;\\n\\n           \\n            svg: React.SVGProps<SVGSVGElement>;\\n\\n            animate: React.SVGProps<SVGElement>;\\n            animateMotion: React.SVGProps<SVGElement>;\\n            animateTransform: React.SVGProps<SVGElement>;\\n            circle: React.SVGProps<SVGCircleElement>;\\n            clipPath: React.SVGProps<SVGClipPathElement>;\\n            defs: React.SVGProps<SVGDefsElement>;\\n            desc: React.SVGProps<SVGDescElement>;\\n            ellipse: React.SVGProps<SVGEllipseElement>;\\n            feBlend: React.SVGProps<SVGFEBlendElement>;\\n            feColorMatrix: React.SVGProps<SVGFEColorMatrixElement>;\\n            feComponentTransfer: React.SVGProps<SVGFEComponentTransferElement>;\\n            feComposite: React.SVGProps<SVGFECompositeElement>;\\n            feConvolveMatrix: React.SVGProps<SVGFEConvolveMatrixElement>;\\n            feDiffuseLighting: React.SVGProps<SVGFEDiffuseLightingElement>;\\n            feDisplacementMap: React.SVGProps<SVGFEDisplacementMapElement>;\\n            feDistantLight: React.SVGProps<SVGFEDistantLightElement>;\\n            feDropShadow: React.SVGProps<SVGFEDropShadowElement>;\\n            feFlood: React.SVGProps<SVGFEFloodElement>;\\n            feFuncA: React.SVGProps<SVGFEFuncAElement>;\\n            feFuncB: React.SVGProps<SVGFEFuncBElement>;\\n            feFuncG: React.SVGProps<SVGFEFuncGElement>;\\n            feFuncR: React.SVGProps<SVGFEFuncRElement>;\\n            feGaussianBlur: React.SVGProps<SVGFEGaussianBlurElement>;\\n            feImage: React.SVGProps<SVGFEImageElement>;\\n            feMerge: React.SVGProps<SVGFEMergeElement>;\\n            feMergeNode: React.SVGProps<SVGFEMergeNodeElement>;\\n            feMorphology: React.SVGProps<SVGFEMorphologyElement>;\\n            feOffset: React.SVGProps<SVGFEOffsetElement>;\\n            fePointLight: React.SVGProps<SVGFEPointLightElement>;\\n            feSpecularLighting: React.SVGProps<SVGFESpecularLightingElement>;\\n            feSpotLight: React.SVGProps<SVGFESpotLightElement>;\\n            feTile: React.SVGProps<SVGFETileElement>;\\n            feTurbulence: React.SVGProps<SVGFETurbulenceElement>;\\n            filter: React.SVGProps<SVGFilterElement>;\\n            foreignObject: React.SVGProps<SVGForeignObjectElement>;\\n            g: React.SVGProps<SVGGElement>;\\n            image: React.SVGProps<SVGImageElement>;\\n            line: React.SVGProps<SVGLineElement>;\\n            linearGradient: React.SVGProps<SVGLinearGradientElement>;\\n            marker: React.SVGProps<SVGMarkerElement>;\\n            mask: React.SVGProps<SVGMaskElement>;\\n            metadata: React.SVGProps<SVGMetadataElement>;\\n            mpath: React.SVGProps<SVGElement>;\\n            path: React.SVGProps<SVGPathElement>;\\n            pattern: React.SVGProps<SVGPatternElement>;\\n            polygon: React.SVGProps<SVGPolygonElement>;\\n            polyline: React.SVGProps<SVGPolylineElement>;\\n            radialGradient: React.SVGProps<SVGRadialGradientElement>;\\n            rect: React.SVGProps<SVGRectElement>;\\n            stop: React.SVGProps<SVGStopElement>;\\n            switch: React.SVGProps<SVGSwitchElement>;\\n            symbol: React.SVGProps<SVGSymbolElement>;\\n            text: React.SVGProps<SVGTextElement>;\\n            textPath: React.SVGProps<SVGTextPathElement>;\\n            tspan: React.SVGProps<SVGTSpanElement>;\\n            use: React.SVGProps<SVGUseElement>;\\n            view: React.SVGProps<SVGViewElement>;\\n        }\\n    }\\n} \\n \\n \\n\\ninterface Event { }\\ninterface AnimationEvent extends Event { }\\ninterface ClipboardEvent extends Event { }\\ninterface CompositionEvent extends Event { }\\ninterface DragEvent extends Event { }\\ninterface FocusEvent extends Event { }\\ninterface KeyboardEvent extends Event { }\\ninterface MouseEvent extends Event { }\\ninterface TouchEvent extends Event { }\\ninterface PointerEvent extends Event { }\\ninterface TransitionEvent extends Event { }\\ninterface UIEvent extends Event { }\\ninterface WheelEvent extends Event { }\\n\\ninterface EventTarget { }\\ninterface Document { }\\ninterface DataTransfer { }\\ninterface StyleMedia { }\\n\\ninterface Element { }\\n\\ninterface HTMLElement extends Element { }\\ninterface HTMLAnchorElement extends HTMLElement { }\\ninterface HTMLAreaElement extends HTMLElement { }\\ninterface HTMLAudioElement extends HTMLElement { }\\ninterface HTMLBaseElement extends HTMLElement { }\\ninterface HTMLBodyElement extends HTMLElement { }\\ninterface HTMLBRElement extends HTMLElement { }\\ninterface HTMLButtonElement extends HTMLElement { }\\ninterface HTMLCanvasElement extends HTMLElement { }\\ninterface HTMLDataElement extends HTMLElement { }\\ninterface HTMLDataListElement extends HTMLElement { }\\ninterface HTMLDialogElement extends HTMLElement { }\\ninterface HTMLDivElement extends HTMLElement { }\\ninterface HTMLDListElement extends HTMLElement { }\\ninterface HTMLEmbedElement extends HTMLElement { }\\ninterface HTMLFieldSetElement extends HTMLElement { }\\ninterface HTMLFormElement extends HTMLElement { }\\ninterface HTMLHeadingElement extends HTMLElement { }\\ninterface HTMLHeadElement extends HTMLElement { }\\ninterface HTMLHRElement extends HTMLElement { }\\ninterface HTMLHtmlElement extends HTMLElement { }\\ninterface HTMLIFrameElement extends HTMLElement { }\\ninterface HTMLImageElement extends HTMLElement { }\\ninterface HTMLInputElement extends HTMLElement { }\\ninterface HTMLModElement extends HTMLElement { }\\ninterface HTMLLabelElement extends HTMLElement { }\\ninterface HTMLLegendElement extends HTMLElement { }\\ninterface HTMLLIElement extends HTMLElement { }\\ninterface HTMLLinkElement extends HTMLElement { }\\ninterface HTMLMapElement extends HTMLElement { }\\ninterface HTMLMetaElement extends HTMLElement { }\\ninterface HTMLObjectElement extends HTMLElement { }\\ninterface HTMLOListElement extends HTMLElement { }\\ninterface HTMLOptGroupElement extends HTMLElement { }\\ninterface HTMLOptionElement extends HTMLElement { }\\ninterface HTMLParagraphElement extends HTMLElement { }\\ninterface HTMLParamElement extends HTMLElement { }\\ninterface HTMLPreElement extends HTMLElement { }\\ninterface HTMLProgressElement extends HTMLElement { }\\ninterface HTMLQuoteElement extends HTMLElement { }\\ninterface HTMLSlotElement extends HTMLElement { }\\ninterface HTMLScriptElement extends HTMLElement { }\\ninterface HTMLSelectElement extends HTMLElement { }\\ninterface HTMLSourceElement extends HTMLElement { }\\ninterface HTMLSpanElement extends HTMLElement { }\\ninterface HTMLStyleElement extends HTMLElement { }\\ninterface HTMLTableElement extends HTMLElement { }\\ninterface HTMLTableColElement extends HTMLElement { }\\ninterface HTMLTableDataCellElement extends HTMLElement { }\\ninterface HTMLTableHeaderCellElement extends HTMLElement { }\\ninterface HTMLTableRowElement extends HTMLElement { }\\ninterface HTMLTableSectionElement extends HTMLElement { }\\ninterface HTMLTemplateElement extends HTMLElement { }\\ninterface HTMLTextAreaElement extends HTMLElement { }\\ninterface HTMLTitleElement extends HTMLElement { }\\ninterface HTMLTrackElement extends HTMLElement { }\\ninterface HTMLUListElement extends HTMLElement { }\\ninterface HTMLVideoElement extends HTMLElement { }\\ninterface HTMLWebViewElement extends HTMLElement { }\\n\\ninterface SVGElement extends Element { }\\ninterface SVGSVGElement extends SVGElement { }\\ninterface SVGCircleElement extends SVGElement { }\\ninterface SVGClipPathElement extends SVGElement { }\\ninterface SVGDefsElement extends SVGElement { }\\ninterface SVGDescElement extends SVGElement { }\\ninterface SVGEllipseElement extends SVGElement { }\\ninterface SVGFEBlendElement extends SVGElement { }\\ninterface SVGFEColorMatrixElement extends SVGElement { }\\ninterface SVGFEComponentTransferElement extends SVGElement { }\\ninterface SVGFECompositeElement extends SVGElement { }\\ninterface SVGFEConvolveMatrixElement extends SVGElement { }\\ninterface SVGFEDiffuseLightingElement extends SVGElement { }\\ninterface SVGFEDisplacementMapElement extends SVGElement { }\\ninterface SVGFEDistantLightElement extends SVGElement { }\\ninterface SVGFEDropShadowElement extends SVGElement { }\\ninterface SVGFEFloodElement extends SVGElement { }\\ninterface SVGFEFuncAElement extends SVGElement { }\\ninterface SVGFEFuncBElement extends SVGElement { }\\ninterface SVGFEFuncGElement extends SVGElement { }\\ninterface SVGFEFuncRElement extends SVGElement { }\\ninterface SVGFEGaussianBlurElement extends SVGElement { }\\ninterface SVGFEImageElement extends SVGElement { }\\ninterface SVGFEMergeElement extends SVGElement { }\\ninterface SVGFEMergeNodeElement extends SVGElement { }\\ninterface SVGFEMorphologyElement extends SVGElement { }\\ninterface SVGFEOffsetElement extends SVGElement { }\\ninterface SVGFEPointLightElement extends SVGElement { }\\ninterface SVGFESpecularLightingElement extends SVGElement { }\\ninterface SVGFESpotLightElement extends SVGElement { }\\ninterface SVGFETileElement extends SVGElement { }\\ninterface SVGFETurbulenceElement extends SVGElement { }\\ninterface SVGFilterElement extends SVGElement { }\\ninterface SVGForeignObjectElement extends SVGElement { }\\ninterface SVGGElement extends SVGElement { }\\ninterface SVGImageElement extends SVGElement { }\\ninterface SVGLineElement extends SVGElement { }\\ninterface SVGLinearGradientElement extends SVGElement { }\\ninterface SVGMarkerElement extends SVGElement { }\\ninterface SVGMaskElement extends SVGElement { }\\ninterface SVGMetadataElement extends SVGElement { }\\ninterface SVGPathElement extends SVGElement { }\\ninterface SVGPatternElement extends SVGElement { }\\ninterface SVGPolygonElement extends SVGElement { }\\ninterface SVGPolylineElement extends SVGElement { }\\ninterface SVGRadialGradientElement extends SVGElement { }\\ninterface SVGRectElement extends SVGElement { }\\ninterface SVGStopElement extends SVGElement { }\\ninterface SVGSwitchElement extends SVGElement { }\\ninterface SVGSymbolElement extends SVGElement { }\\ninterface SVGTextElement extends SVGElement { }\\ninterface SVGTextPathElement extends SVGElement { }\\ninterface SVGTSpanElement extends SVGElement { }\\ninterface SVGUseElement extends SVGElement { }\\ninterface SVGViewElement extends SVGElement { }\\n\\ninterface Text { }\\ninterface TouchList { }\\ninterface WebGLRenderingContext { }\\ninterface WebGL2RenderingContext { } \\n  \\n}","moduleName":"react"},{"code":"\\n declare module \\"@co-hooks/emitter\\" { \\n \\nexport * from \'@co-hooks/emitter/lib/Emitter\'; \\n \\n } \\n declare module \\"@co-hooks/emitter/lib/Emitter\\" { \\n export declare type ListenerFunction<T extends {\\n    [key: string]: unknown[];\\n}, K extends keyof T> = (...params: T[K]) => void;\\nexport interface IListenerCacheItem<T extends {\\n    [key: string]: unknown[];\\n}, K extends keyof T> {\\n    waiting?: T[K];\\n    fn: ListenerFunction<T, K>;\\n}\\nexport declare type ListenerCache<T extends {\\n    [key: string]: unknown[];\\n}> = {\\n    [K in keyof T]?: Array<IListenerCacheItem<T, K>>;\\n};\\ndeclare const EVENT_CACHE_KEY: unique symbol;\\nexport declare class Emitter<T extends {\\n    [key: string]: any;\\n}> {\\n    static mixin(Fn: {\\n        prototype: unknown;\\n    }): void;\\n    private [EVENT_CACHE_KEY]?;\\n    addListener<K extends keyof T>(type: K, listener: ListenerFunction<T, K>): void;\\n    removeListener<K extends keyof T>(type?: K, listener?: ListenerFunction<T, K>): void;\\n    removeAllListeners<K extends keyof T>(type?: K): void;\\n    emit<K extends keyof T>(type: K, ...params: T[K]): void;\\n    waitForCommit<K extends keyof T>(type: K, ...params: T[K]): void;\\n    commit(): void;\\n    listeners<K extends keyof T>(type: K): Array<ListenerFunction<T, K>>;\\n    listenerCount<K extends keyof T>(type: K): number;\\n}\\nexport {}; \\n  \\n}","moduleName":"@co-hooks/emitter"},{"code":"\\n declare module \\"@co-hooks/autocomplete\\" { \\n \\nexport * from \'@co-hooks/autocomplete/lib/AutoComplete\'; \\n \\n } \\n declare module \\"@co-hooks/autocomplete/lib/AutoComplete\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nexport interface IDataSourceItem<T> {\\n    value: T;\\n    label: string;\\n    disabled?: boolean;\\n}\\nexport interface IAutoCompleteOptions<T> {\\n    keyword?: string;\\n    disabled?: boolean;\\n    multiple?: boolean;\\n    checkable?: boolean;\\n    allowClear?: boolean;\\n    dataSource: IDataSourceItem<T>[];\\n    selectedValue?: IDataSourceItem<T>[];\\n    filterOption?: (keyword: string, options: IDataSourceItem<T>) => boolean;\\n}\\nexport interface IAutoCompleteEvents<T> {\\n    \'update\': [];\\n    \'on-select\': [T[]];\\n    \'on-search\': [string];\\n}\\nexport declare class AutoComplete<T> extends Emitter<IAutoCompleteEvents<T>> {\\n    keyword: string;\\n    activeIndex: number;\\n    multiple: boolean;\\n    checkable: boolean;\\n    disabled: boolean;\\n    allowClear: boolean;\\n    selectedValue: IDataSourceItem<T>[];\\n    dataSource: IDataSourceItem<T>[];\\n    updateOptions(options: IAutoCompleteOptions<T>): void;\\n    reset(): void;\\n    onClear(): void;\\n    onKeywordChange(keyword: string): void;\\n    handleSelect(chooseData: IDataSourceItem<T>): void;\\n    getFilterData(): IDataSourceItem<T>[];\\n    selectBackFill(): void;\\n    stepDown(): void;\\n    stepUp(): void;\\n    filterOption(keyword: string, options: IDataSourceItem<T>): boolean;\\n    private update;\\n} \\n  \\n}","moduleName":"@co-hooks/autocomplete"},{"code":"\\n declare module \\"@rc-hooks/autocomplete\\" { \\n \\nexport * from \'@rc-hooks/autocomplete/hooks/useAutoComplete\';\\nexport * from \'@rc-hooks/autocomplete/hooks/useAutoCompleteView\';\\nexport * from \'@rc-hooks/autocomplete/hooks/useSingleAutoComplete\';\\nexport * from \'@rc-hooks/autocomplete/hooks/useMultipleAutoComplete\';\\nexport * from \'@rc-hooks/autocomplete/context/auto-complete\';\\nexport * from \'@rc-hooks/autocomplete/components/RcAutoComplete\';\\nexport * from \'@co-hooks/autocomplete\'; \\n \\n } \\n declare module \\"@rc-hooks/autocomplete/hooks/useAutoComplete\\" { \\n \\nimport { AutoComplete } from \'@co-hooks/autocomplete\';\\nexport declare function useAutoComplete<T>(): AutoComplete<T>; \\n \\n } \\n declare module \\"@rc-hooks/autocomplete/hooks/useAutoCompleteView\\" { \\n \\nimport { IDataSourceItem } from \'@co-hooks/autocomplete\';\\nexport interface IAutoCompleteView<T> {\\n    handleClear: VoidFunction;\\n    handleReset: VoidFunction;\\n    onKeywordChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\\n    handleSelect: (item: IDataSourceItem<T>) => void;\\n}\\nexport interface IAutoCompleteViewProps {\\n    show: boolean;\\n}\\nexport declare function useAutoCompleteView<T>(props: IAutoCompleteViewProps): IAutoCompleteView<T>; \\n \\n } \\n declare module \\"@rc-hooks/autocomplete/hooks/useSingleAutoComplete\\" { \\n import { AutoComplete, IAutoCompleteOptions } from \'@co-hooks/autocomplete\';\\nexport declare type IAutoCompleteBase<T> = Omit<IAutoCompleteOptions<T>, \'keyword\' | \'selectedValue\' | \'multiple\'> & {\\n    onSearch?: (keyword: string) => void;\\n};\\nexport declare type ISingleAutoComplete<T> = IAutoCompleteBase<T> & {\\n    value?: T;\\n    onHide: VoidFunction;\\n    onChange?: (value: T | string) => void;\\n};\\nexport declare function useSingleAutoComplete<T>(options: ISingleAutoComplete<T>): AutoComplete<T>; \\n \\n } \\n declare module \\"@rc-hooks/autocomplete/hooks/useMultipleAutoComplete\\" { \\n import { AutoComplete } from \'@co-hooks/autocomplete\';\\nimport { IAutoCompleteBase } from \'@rc-hooks/autocomplete/hooks/useSingleAutoComplete\';\\nexport declare type IMultipleAutoComplete<T> = IAutoCompleteBase<T> & {\\n    value?: T[];\\n    onChange?: (value: T[]) => void;\\n};\\nexport declare function useMultipleAutoComplete<T>(options: IMultipleAutoComplete<T>): AutoComplete<T>; \\n \\n } \\n declare module \\"@rc-hooks/autocomplete/context/auto-complete\\" { \\n \\nimport React from \'react\';\\nimport { AutoComplete } from \'@co-hooks/autocomplete\';\\nexport declare const AutoCompleteContext: React.Context<AutoComplete<any> | null>; \\n \\n } \\n declare module \\"@rc-hooks/autocomplete/components/RcAutoComplete\\" { \\n \\nimport { PropsWithChildren } from \'react\';\\nimport { AutoComplete } from \'@co-hooks/autocomplete\';\\nexport declare type IAutoCompleteProviderProps<T> = PropsWithChildren<{\\n    root: AutoComplete<T>;\\n}>;\\nexport declare function RcAutoCompleteProvider<T>(props: IAutoCompleteProviderProps<T>): JSX.Element; \\n  \\n}","moduleName":"@rc-hooks/autocomplete"},{"code":"\\n declare module \\"@co-hooks/util\\" { \\n \\nexport * from \'@co-hooks/util/util\';\\nexport * from \'@co-hooks/util/types\';\\nexport * from \'@co-hooks/util/date\';\\nexport * from \'@co-hooks/util/animate\'; \\n \\n } \\n declare module \\"@co-hooks/util/util\\" { \\n \\nimport { FunctionAny, FunctionParams } from \'@co-hooks/util/types\';\\n\\nexport declare function guid(): string;\\n\\nexport declare function type(obj: unknown): string;\\n\\nexport declare function clone<T>(obj: T): T;\\n\\nexport declare function deepClone<T extends unknown>(obj: T): T;\\n\\nexport declare function classnames(...classNames: Array<string | {\\n    [key: string]: boolean;\\n} | string[] | undefined>): string;\\n\\nexport declare function equal(first: unknown, second: unknown): boolean;\\n\\nexport declare function shallowEqual(first: unknown, second: unknown): boolean;\\nexport declare function deepEqual(first: unknown, second: unknown): boolean;\\n\\nexport declare function throttle<T extends FunctionAny>(fn: T, delay: number): (...args: FunctionParams<T>) => void;\\ninterface IDebounceSettings {\\n    leading?: boolean;\\n    maxWait?: number;\\n    trailing?: boolean;\\n}\\ninterface IInterDebounce<T extends FunctionAny, R, U> {\\n    (context?: U, ...args: FunctionParams<T>): void | R;\\n    cancel(): void;\\n    flush(): void;\\n}\\n\\nexport declare function debounce<T extends FunctionAny, R, U>(func: T, delay?: number, options?: IDebounceSettings): IInterDebounce<T, R, U>;\\n\\nexport declare function tuple<T extends string[]>(...args: T): T;\\n\\nexport declare function pick<T, K extends keyof T>(obj: T, keys: K[]): [Pick<T, K>, Omit<T, K>];\\n\\nexport declare function omit<T, K extends keyof T>(obj: T, keys: K[]): Omit<T, K>;\\nexport declare const UNIQUE_KEY_REF: unique symbol;\\n\\nexport declare function getUniqueKey(obj: unknown): string;\\nexport declare function isFunction(fun: unknown): fun is Function;\\nexport declare function isString(obj: unknown): obj is string;\\n\\nexport declare function keyMirror(str: string | number | Array<string | number>, splitChar?: string): {\\n    [key: string]: string;\\n};\\n\\nexport declare function getObjectProperty(obj: unknown, keys?: Array<string | number>, index?: number): unknown;\\n\\nexport declare function setObjectProperty(obj: unknown, value: unknown, keys: Array<string | number>, index?: number): boolean;\\nexport declare function padding(str: string, len: 1 | 2 | 3 | 4, padStr?: string): string;\\n\\nexport declare function getKeys<T>(obj: T): Array<keyof T>;\\nexport declare function camelCase(str: string, prefix?: string): string;\\nexport declare function pascalCase(str: string, prefix?: string): string;\\n\\nexport declare function camelize(target: string): string;\\n\\nexport declare function isWindow(obj: unknown): obj is Window;\\nexport declare function uniqueString(arr: Array<string | number>): string[];\\nexport declare function uniqueNumber(arr: number[]): number[];\\nexport declare function shallowMerge<T, U>(source1: T, source2: U): T & U;\\nexport declare function shallowArray<T>(first: T[], second: T[], compareFn?: (a: T, b: T) => number): boolean;\\nexport declare function mixin(Base: {\\n    prototype: unknown;\\n}, ...args: Array<{\\n    prototype: unknown;\\n}>): void;\\nexport interface ICreateMapItem<T> {\\n    item: T;\\n    index: number;\\n}\\nexport declare function createMap<T>(list: T[], getKey?: (item: T) => string): Record<string, ICreateMapItem<T>>;\\nexport declare function isKorean(text: string): boolean;\\n\\nexport declare function format(source: string, opts: unknown): string;\\n\\nexport declare function isPlainObject(value: unknown): boolean;\\nexport declare function isNullOrUndefined(value: unknown): value is null | undefined;\\nexport {}; \\n \\n } \\n declare module \\"@co-hooks/util/types\\" { \\n \\nexport declare type UnionOmit<T, K> = T & Omit<K, keyof T>;\\nexport declare type FunctionAny = (...args: any[]) => any;\\nexport declare type FunctionParams<T extends FunctionAny> = T extends (...args: infer R) => unknown ? R : never;\\nexport declare type EqualFunction<T> = (val1: T, val2: T) => boolean;\\nexport declare type ComparatorFunction<T> = (val1: T, val2: T) => number;\\nexport declare type RequiredKeys<T> = {\\n    [K in keyof T]-?: T extends Record<K, T[K]> ? K : never;\\n}[keyof T];\\nexport interface IDateLocale {\\n    defaultFormat: {\\n        week: string;\\n        date: string;\\n        month: string;\\n        year: string;\\n        time: string;\\n        dateTime: string;\\n    };\\n    startDay: number;\\n    monthList: string[];\\n    shortMonthList: string[];\\n    dayList: string[];\\n    shortDayList: string[];\\n    shortestDayList: string[];\\n} \\n \\n } \\n declare module \\"@co-hooks/util/date\\" { \\n \\nimport \'./tokens/time\';\\nexport * from \'@co-hooks/util/date/util\';\\nexport * from \'@co-hooks/util/date/format\';\\nexport * from \'@co-hooks/util/date/parse\';\\nexport * from \'@co-hooks/util/date/compare\';\\nexport * from \'@co-hooks/util/date/tokens/date\';\\nexport * from \'@co-hooks/util/date/tokens/day\';\\nexport * from \'@co-hooks/util/date/tokens/month\';\\nexport * from \'@co-hooks/util/date/tokens/week\';\\nexport * from \'@co-hooks/util/date/tokens/year\';\\nexport * from \'@co-hooks/util/date/locale\'; \\n \\n } \\n declare module \\"@co-hooks/util/animate\\" { \\n \\nexport * from \'@co-hooks/util/animate/cubicBezier\';\\nexport * from \'@co-hooks/util/animate/animate\'; \\n \\n } \\n declare module \\"@co-hooks/util/date/util\\" { \\n \\nexport declare function prevDate(date: Date, amount?: number): Date;\\nexport declare function nextDate(date: Date, amount?: number): Date;\\nexport declare function prevMonth(date: Date, amount?: number): Date;\\nexport declare function nextMonth(date: Date, amount?: number): Date;\\nexport declare function prevYear(date: Date, amount?: number): Date;\\nexport declare function nextYear(date: Date, amount?: number): Date;\\nexport declare function sortDate(dateList: Date[]): Date[]; \\n \\n } \\n declare module \\"@co-hooks/util/date/format\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util/types\';\\nexport declare function formatDate(date: Date, format: string, locale?: IDateLocale): string;\\nexport declare function formatDateArr(dateList: Array<string | Date>, format: string, locale: IDateLocale): string[]; \\n \\n } \\n declare module \\"@co-hooks/util/date/parse\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util/types\';\\nexport declare function parseDate(str: string, format: string, locale?: IDateLocale, strict?: boolean): Date | undefined;\\nexport declare function parseDateArr(dateList: Array<string | Date>, format: string, locale: IDateLocale, strict: boolean): Date[]; \\n \\n } \\n declare module \\"@co-hooks/util/date/compare\\" { \\n \\nexport declare function compareDate(type: \'date\' | \'week\' | \'month\' | \'year\', date1: Date, date2: Date, startDay?: number): number; \\n \\n } \\n declare module \\"@co-hooks/util/date/tokens/date\\" { \\n export declare const DATE_MILLISECONDS: number;\\nexport declare function dayOfYear(date: Date): number;\\nexport declare function buildFromDayOfYear(year: number, day: number): Date; \\n \\n } \\n declare module \\"@co-hooks/util/date/tokens/day\\" { \\n \\nexport declare function weekStart(date: Date, startDay: number): Date;\\nexport declare function getFirstOfMonth(sourceDate: Date, startDay: number): Date; \\n \\n } \\n declare module \\"@co-hooks/util/date/tokens/month\\" { \\n \\nexport declare function daysInMonth(year: number, month: number): number; \\n \\n } \\n declare module \\"@co-hooks/util/date/tokens/week\\" { \\n \\nexport declare function weekOfYear(date: Date, startDay: number, year?: number): number;\\nexport declare function buildFromWeek(year: number, week: number, day: number, startDay: number): Date;\\nexport declare function buildWeekRange(year: number, week: number, startDay: number): Date[]; \\n \\n } \\n declare module \\"@co-hooks/util/date/tokens/year\\" { \\n export declare function isLeapYear(year: number): boolean;\\nexport declare function daysInYear(year: number): number; \\n \\n } \\n declare module \\"@co-hooks/util/date/locale\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util/types\';\\nexport declare function setDefaultDateLocale(locale: IDateLocale): void;\\nexport declare function getDateLocale(locale?: IDateLocale): IDateLocale; \\n \\n } \\n declare module \\"@co-hooks/util/animate/cubicBezier\\" { \\n \\nexport declare type CubicBezierGetter = (time: number) => number;\\nexport declare function cubicBezier(x1: number, y1: number, x2: number, y2: number): CubicBezierGetter;\\nexport declare const linear: CubicBezierGetter;\\nexport declare const ease: CubicBezierGetter;\\nexport declare const easeIn: CubicBezierGetter;\\nexport declare const easeOut: CubicBezierGetter;\\nexport declare const easeInOut: CubicBezierGetter;\\nexport declare const presets: {\\n    readonly linear: CubicBezierGetter;\\n    readonly ease: CubicBezierGetter;\\n    readonly easeIn: CubicBezierGetter;\\n    readonly easeOut: CubicBezierGetter;\\n    readonly easeInOut: CubicBezierGetter;\\n}; \\n \\n } \\n declare module \\"@co-hooks/util/animate/animate\\" { \\n \\nimport { presets } from \'@co-hooks/util/animate/cubicBezier\';\\nexport declare type AnimateType = keyof typeof presets | [number, number, number, number];\\nexport declare type AnimateTickFunc = (percent: number) => void;\\nexport declare function animate(animateType: AnimateType, duration: number, tick?: AnimateTickFunc, end?: () => void): [() => void, () => void]; \\n  \\n}","moduleName":"@co-hooks/util"},{"code":"\\n declare module \\"@byte-design/locale\\" { \\n import zhCN from \'@byte-design/locale/zh_CN\';\\nexport * from \'@byte-design/locale/zh_CN\';\\nexport default zhCN; \\n \\n } \\n declare module \\"@byte-design/locale/zh_CN\\" { \\n import { ILocaleProps } from \'@byte-design/locale/types\';\\ndeclare const zhCN: ILocaleProps;\\nexport * from \'@byte-design/locale/types\';\\nexport default zhCN; \\n \\n } \\n declare module \\"@byte-design/locale/types\\" { \\n import { IDateLocale } from \'@co-hooks/util\';\\nexport interface ILocaleProps {\\n    locale: string;\\n    date: IDateLocale;\\n    \'auto-complete.placeholder\': string;\\n    \'auto-complete.empty\': string;\\n    \'color.custom\': string;\\n    \'cascader.titles\': string[];\\n    \'cascader.empty\': string;\\n    \'date.year\': string;\\n    \'date.month\': string;\\n    \'date.week\': string;\\n    \'date.month-first\': boolean;\\n    \'date-picker.start\': string;\\n    \'date-picker.end\': string;\\n    \'date-picker.placeholder\': string;\\n    \'date-picker.cancel\': string;\\n    \'date-picker.apply\': string;\\n    \'date-picker.invalid-range\': string;\\n    \'date-comparison.mom\': string;\\n    \'date-comparison.yoy\': string;\\n    \'date-comparison.placeholder\': string;\\n    \'date-comparison.error-source\': string;\\n    \'date-comparison.error-target\': string;\\n    \'date-comparison.compare\': string;\\n    \'date-comparison.compare-text\': string;\\n    \'empty.text\': string;\\n    \'input.placeholder\': string;\\n    \'modal.cancel\': string;\\n    \'modal.ok\': string;\\n    \'list-viewer.empty\': string;\\n    \'pager.jump\': string;\\n    \'pager.total\': string;\\n    \'pager.size\': string;\\n    \'pager.page.placeholder\': string;\\n    \'popover.cancel\': string;\\n    \'popover.ok\': string;\\n    \'schedule.selected\': string;\\n    \'schedule.separator\': string;\\n    \'schedule.title\': string;\\n    \'schedule.clear\': string;\\n    \'select.search.placeholder\': string;\\n    \'select.empty\': string;\\n    \'select.selected\': string;\\n    \'select.selected-count\': string;\\n    \'select.select-all\': string;\\n    \'select.placeholder\': string;\\n    \'select.clear\': string;\\n    \'tabs.more\': string;\\n    \'table.emptyText\': string;\\n    \'transfer.placeholder\': string;\\n    \'transfer.empty\': string;\\n    \'transfer.source\': string;\\n    \'transfer.target\': string;\\n    \'tree.empty\': string;\\n    \'tree-select.placeholder\': string;\\n    \'tree-select.empty\': string;\\n    \'time-picker.placeholder\': string;\\n    \'time-range-picker.placeholder\': string;\\n    \'upload.error.overflow-count\': string;\\n    \'upload.click\': string;\\n    \'upload.drop\': string;\\n    \'date-time-picker.now\': string;\\n    \'date-time-picker.ok\': string;\\n    \'date-time-picker.date\': string;\\n    \'date-time-picker.time\': string;\\n    \'date-time-picker.placeholder\': string;\\n} \\n  \\n}","moduleName":"@byte-design/locale"},{"code":"\\n declare module \\"@byte-design/config\\" { \\n export { useConfig } from \'@byte-design/config/hooks/useConfig\';\\nexport { useLocale } from \'@byte-design/config/hooks/useLocale\';\\nexport { usePrefixCls } from \'@byte-design/config/hooks/usePrefixCls\';\\nexport * from \'@byte-design/config/types\';\\nexport { DEFAULT_CONFIG, ConfigProvider } from \'@byte-design/config/context/config\'; \\n \\n } \\n declare module \\"@byte-design/config/hooks/useConfig\\" { \\n import { IConfigProps } from \'@byte-design/config/types\';\\nexport declare function useConfig(): IConfigProps; \\n \\n } \\n declare module \\"@byte-design/config/hooks/useLocale\\" { \\n import { ILocaleProps } from \'@byte-design/locale\';\\nexport declare function useLocale<K extends keyof ILocaleProps>(key: K): ILocaleProps[K]; \\n \\n } \\n declare module \\"@byte-design/config/hooks/usePrefixCls\\" { \\n export declare function usePrefixCls(className: string, suffixClass?: {\\n    [key: string]: string | number | boolean | undefined;\\n}, ignoreRootCls?: boolean): string;\\nexport declare function getPrefixCls(mainClassName: string, suffixClass?: {\\n    [key: string]: string | number | boolean | undefined;\\n}, ignoreRootCls?: boolean): string; \\n \\n } \\n declare module \\"@byte-design/config/types\\" { \\n import { ILocaleProps } from \'@byte-design/locale\';\\nexport declare type ComponentSize = \'xl\' | \'lg\' | \'md\' | \'sm\' | \'xs\';\\nexport declare type SizeMap = Record<ComponentSize, ISizeMapItem>;\\nexport interface ISizeMapItem {\\n    height: number;\\n}\\nexport interface ITableSizeInfo {\\n    group: number;\\n    head: number;\\n    row: number;\\n}\\nexport interface IConfigProps {\\n    prefixCls: string;\\n    popoverArrowOffset: number;\\n    locale: ILocaleProps;\\n    table: {\\n        size: Record<Exclude<ComponentSize, \'xs\'>, ITableSizeInfo>;\\n    };\\n    componentSizeMap: SizeMap;\\n} \\n \\n } \\n declare module \\"@byte-design/config/context/config\\" { \\n import React from \'react\';\\nimport { IConfigProps } from \'@byte-design/config/types\';\\nexport declare const DEFAULT_CONFIG: IConfigProps;\\nexport declare const ConfigContext: React.Context<IConfigProps>;\\nexport declare const ConfigProvider: React.Provider<IConfigProps>; \\n  \\n}","moduleName":"@byte-design/config"},{"code":"\\n declare module \\"events\\" { \\n\\n\\nexport type Listener = (...args: any[]) => void;\\n\\nexport class EventEmitter {\\n  static listenerCount(emitter: EventEmitter, type: string | number): number;\\n  static defaultMaxListeners: number;\\n\\n  eventNames(): Array<string | number>;\\n  setMaxListeners(n: number): this;\\n  getMaxListeners(): number;\\n  emit(type: string | number, ...args: any[]): boolean;\\n  addListener(type: string | number, listener: Listener): this;\\n  on(type: string | number, listener: Listener): this;\\n  once(type: string | number, listener: Listener): this;\\n  prependListener(type: string | number, listener: Listener): this;\\n  prependOnceListener(type: string | number, listener: Listener): this;\\n  removeListener(type: string | number, listener: Listener): this;\\n  off(type: string | number, listener: Listener): this;\\n  removeAllListeners(type?: string | number): this;\\n  listeners(type: string | number): Listener[];\\n  listenerCount(type: string | number): number;\\n  rawListeners(type: string | number): Listener[];\\n} \\n  \\n}","moduleName":"events"},{"code":"\\n declare module \\"@co-hooks/dom\\" { \\n \\nexport * from \'@co-hooks/dom/util/dom\';\\nexport * from \'@co-hooks/dom/util/event\';\\nexport * from \'@co-hooks/dom/util/type\';\\nexport * from \'@co-hooks/dom/util/mutation\'; \\n \\n } \\n declare module \\"@co-hooks/dom/util/dom\\" { \\n \\nimport { IElementPosition, IElementSize, IOffset, IOverFlowBoundaries } from \'@co-hooks/dom/util/type\';\\n\\nexport declare function isClient(): boolean;\\n\\nexport declare function getZIndex(): number;\\nexport declare function getDefaultElementSize(): IElementSize;\\nexport declare function getDefaultOffset(): IOffset;\\nexport declare function getDefaultElementPosition(): IElementPosition;\\nexport declare function getDefaultOverflowBoundaries(): IOverFlowBoundaries;\\nexport declare function getWindowSize(): IElementSize;\\nexport declare type NonReadonlyCss = Partial<Omit<CSSStyleDeclaration, \'length\' | \'parentRule\'>>;\\nexport declare function swap<T>(element: HTMLElement, styles: NonReadonlyCss, callback: () => T): T;\\n\\nexport declare function getElementSize(element: HTMLElement): IElementSize;\\n\\nexport declare function getElementPosition(element: HTMLElement): IElementPosition;\\nexport declare function isElementSizeEqual(a: IElementSize, b: IElementSize): boolean;\\nexport declare function isElementPositionEqual(a: IElementPosition, b: IElementPosition): boolean;\\nexport declare function isElementPositionContains(container: IElementPosition, target: IElementPosition): boolean;\\nexport declare function isElementPositionCross(container: IElementPosition, target: IElementPosition): boolean;\\nexport declare function isFixed(element: HTMLElement): boolean;\\nexport declare function isSticky(element: HTMLElement): boolean;\\nexport interface IElementScroll {\\n    scrollTop: number;\\n    scrollLeft: number;\\n}\\nexport declare function getDefaultElementScroll(): IElementScroll;\\nexport declare function getDocScroll(): IElementScroll;\\nexport declare function getElementScroll(elem: HTMLElement): IElementScroll;\\nexport declare function closest(ele: HTMLElement, className: string, context?: HTMLElement | null): HTMLElement | false;\\n\\nexport declare function getElementContentSize(element: HTMLElement, fixHeight?: boolean, fixWidth?: boolean): IElementSize;\\nexport declare function addClass(ele: HTMLElement, className: string): void;\\nexport declare function removeClass(ele: HTMLElement, className: string): void;\\nexport declare function getPrefixedStyleKey(styleKey: string): string[];\\nexport declare namespace getPrefixedStyleKey {\\n    var prefixes: string[];\\n}\\nexport declare function getPrefixedEventKey(eventKey: string): string[];\\nexport declare namespace getPrefixedEventKey {\\n    var prefixes: string[];\\n}\\nexport declare function getScrollbarWidth(): number; \\n \\n } \\n declare module \\"@co-hooks/dom/util/event\\" { \\n \\ndeclare type EventHandler<T = HTMLElement> = (this: T, e: Event) => void;\\n\\nexport declare function addEventListener<T extends GlobalEventHandlers>(element: T, type: string, listener: EventHandler<T>, passive?: boolean): void;\\nexport declare function removeEventListener<T extends GlobalEventHandlers>(element: T, type?: string, listener?: EventHandler<T>): void;\\nexport {}; \\n \\n } \\n declare module \\"@co-hooks/dom/util/type\\" { \\n \\n\\nexport interface IOffset {\\n    x: number;\\n    y: number;\\n}\\n\\nexport interface IElementSize {\\n    width: number;\\n    height: number;\\n}\\nexport interface IElementPosition extends IElementSize {\\n    top: number;\\n    right: number;\\n    bottom: number;\\n    left: number;\\n}\\nexport interface IOverFlowBoundaries {\\n    left?: number;\\n    right?: number;\\n    top?: number;\\n    bottom?: number;\\n}\\nexport interface IElementPositionCaptureOptions {\\n    disabledCaptureWindowSize?: boolean;\\n    disabledCaptureContainerScroll?: boolean;\\n    disabledCaptureElementSizeChange?: boolean;\\n    disabledCaptureElementUpdate?: boolean;\\n    disabledCaptureTransition?: boolean;\\n    disabledCaptureAnimation?: boolean;\\n    disabledCaptureStickyCheck?: boolean;\\n} \\n \\n } \\n declare module \\"@co-hooks/dom/util/mutation\\" { \\n export declare const MUTATION_STATE_KEYS: [\\"mutation\\", \\"animation\\", \\"transition\\", \\"scroll\\", \\"resize\\"];\\nexport declare type MutationStateKeys = (typeof MUTATION_STATE_KEYS)[number];\\nexport declare type IMutationState = Record<MutationStateKeys, boolean>;\\nexport declare type IMutationHandler = Record<MutationStateKeys, VoidFunction>;\\nexport interface IMutationHandlerCallback extends IMutationState {\\n    listener: VoidFunction;\\n}\\n\\nexport declare function addMutationHandler(callback: VoidFunction, options: Partial<IMutationState>): void;\\nexport declare function removeMutationHandler(callback: VoidFunction): void; \\n  \\n}","moduleName":"@co-hooks/dom"},{"code":"\\n declare module \\"@rc-hooks/carousel\\" { \\n \\nexport * from \'@rc-hooks/carousel/lib/Carousel\';\\nexport * from \'@rc-hooks/carousel/hooks/useNext\';\\nexport * from \'@rc-hooks/carousel/hooks/usePrev\';\\nexport * from \'@rc-hooks/carousel/hooks/useSlideTo\';\\nexport * from \'@rc-hooks/carousel/hooks/useCarousel\';\\nexport * from \'@rc-hooks/carousel/context/carousel\';\\nexport * from \'@rc-hooks/carousel/components/RcCarousel\'; \\n \\n } \\n declare module \\"@rc-hooks/carousel/lib/Carousel\\" { \\n\\n\\nimport { EventEmitter } from \'events\';\\nimport React from \'react\';\\nimport { IElementSize } from \'@co-hooks/dom\';\\nexport declare type Effect = \'slide\' | \'fade\' | \'cover-flow\';\\nexport declare type PaginationType = \'bullets\' | \'progress\';\\nexport declare type PaginationPosition = \'left\' | \'center\' | \'right\';\\nexport declare type ArrowTheme = \'outline\' | \'filled\' | \'two-tone\' | \'multi-color\';\\nexport interface ICarouselOptions {\\n    delay: number;\\n    speed: number;\\n    effect: Effect;\\n    autoplay: boolean;\\n    paginationColor: string;\\n    paginationActiveColor: string;\\n    paginationPosition: PaginationPosition;\\n    arrowSize: number;\\n    arrowTheme: ArrowTheme;\\n    arrowFillColor: string;\\n    paginationType: PaginationType;\\n}\\nexport declare class Carousel extends EventEmitter {\\n    delay: number;\\n    speed: number;\\n    effect: Effect;\\n    arrowSize: number;\\n    autoplay: boolean;\\n    arrowTheme: ArrowTheme;\\n    arrowFillColor: string;\\n    paginationColor: string;\\n    paginationActiveColor: string;\\n    paginationType: PaginationType;\\n    paginationPosition: PaginationPosition;\\n    currentIndex: number;\\n    preIndex: number | null;\\n    sliders: React.ReactNode[];\\n    carouselSize: IElementSize;\\n    private timeId;\\n    constructor(options: ICarouselOptions);\\n    updateCarouselOptions(options: ICarouselOptions): void;\\n    getRealCurrentIndex(): number;\\n    slideTo(nextIndex: number, stopAnimate?: boolean): void;\\n    startAutoplay(): void;\\n    setCarouselSize(carouselSize: IElementSize): void;\\n    cloneChild(originChild: React.ReactNode[]): void;\\n    private stop;\\n    private restart;\\n    private clearTimer;\\n    private getTranslateStyle;\\n    private doSlideMode;\\n    private doOtherMode;\\n} \\n \\n } \\n declare module \\"@rc-hooks/carousel/hooks/useNext\\" { \\n \\nexport declare function useNext(): () => void; \\n \\n } \\n declare module \\"@rc-hooks/carousel/hooks/usePrev\\" { \\n \\nexport declare function usePrev(): () => void; \\n \\n } \\n declare module \\"@rc-hooks/carousel/hooks/useSlideTo\\" { \\n \\nexport declare function useSlideTo(): (nextIndex: number) => void; \\n \\n } \\n declare module \\"@rc-hooks/carousel/hooks/useCarousel\\" { \\n import { Carousel } from \'@rc-hooks/carousel/lib/Carousel\';\\nexport declare function useCarousel(): Carousel; \\n \\n } \\n declare module \\"@rc-hooks/carousel/context/carousel\\" { \\n \\nimport React from \'react\';\\nimport { Carousel } from \'@rc-hooks/carousel/lib/Carousel\';\\nexport declare const CarouselContext: React.Context<Carousel | null>; \\n \\n } \\n declare module \\"@rc-hooks/carousel/components/RcCarousel\\" { \\n \\nimport React from \'react\';\\nimport { ICarouselOptions } from \'@rc-hooks/carousel/lib/Carousel\';\\nexport declare type IRcCarouselProps = ICarouselOptions & {\\n    children?: React.ReactNode;\\n};\\nexport declare function RcCarousel(props: IRcCarouselProps): JSX.Element; \\n  \\n}","moduleName":"@rc-hooks/carousel"},{"code":"\\n declare module \\"@co-hooks/color\\" { \\n \\nexport * from \'@co-hooks/color/util\';\\nexport * from \'@co-hooks/color/lib/Color\';\\nexport * from \'@co-hooks/color/lib/ColorManager\'; \\n \\n } \\n declare module \\"@co-hooks/color/util\\" { \\n \\nexport * from \'@co-hooks/color/util/convert\';\\nexport * from \'@co-hooks/color/util/types\'; \\n \\n } \\n declare module \\"@co-hooks/color/lib/Color\\" { \\n \\nimport { IHSL, IHSLA, IRGB, IRGBA, ISL } from \'@co-hooks/color/util\';\\nexport interface IColorInfoOptions {\\n    hasAlpha?: boolean;\\n    format?: \'rgb\' | \'hex\' | \'hsl\';\\n}\\nexport declare class Color {\\n    static fromEmpty(options: IColorInfoOptions): Color;\\n    static fromString(str: string, options: IColorInfoOptions): Color;\\n    static fromRGB(rgb: IRGB, options: IColorInfoOptions): Color;\\n    static fromRGBA(rgba: IRGBA, options: IColorInfoOptions): Color;\\n    static fromHSL(hsl: IHSL, options: IColorInfoOptions): Color;\\n    static fromHSLA(hsla: IHSLA, options: IColorInfoOptions): Color;\\n    private readonly h;\\n    private readonly s;\\n    private readonly l;\\n    private readonly a;\\n    private readonly hasAlpha;\\n    private readonly format;\\n    private constructor();\\n    getOptions(): Required<IColorInfoOptions>;\\n    getHue(): number;\\n    setHue(h: number): Color;\\n    getAlpha(): number;\\n    setAlpha(a: number): Color;\\n    getSaturation(): number;\\n    setSaturation(s: number): Color;\\n    getLight(): number;\\n    setLight(l: number): Color;\\n    setSL(sl: ISL): Color;\\n    getRed(): number;\\n    setRed(r: number): Color;\\n    getGreen(): number;\\n    setGreen(g: number): Color;\\n    getBlue(): number;\\n    setBlue(b: number): Color;\\n    getRGB(): IRGB;\\n    setRGB(rgb: IRGB): Color;\\n    getRGBA(): IRGBA;\\n    setRGBA(rgba: IRGBA): Color;\\n    getHSL(): IHSL;\\n    setHSL(hsl: IHSL): Color;\\n    getHSLA(): IHSLA;\\n    setHSLA(hsla: IHSLA): Color;\\n    trySetHex(nv: string): Color | null;\\n    toHex(): string;\\n    toHex6(): string;\\n    toHex8(): string;\\n    toRGB(): string;\\n    toRGBA(): string;\\n    toHSL(): string;\\n    toHSLA(): string;\\n    toString(): string;\\n} \\n \\n } \\n declare module \\"@co-hooks/color/lib/ColorManager\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { Color, IColorInfoOptions } from \'@co-hooks/color/lib/Color\';\\nexport interface IColorEvents {\\n    change: [Color];\\n    repaint: [];\\n}\\nexport interface IColorOptions extends IColorInfoOptions {\\n    value: string;\\n}\\nexport declare class ColorManager extends Emitter<IColorEvents> {\\n    private hasAlpha;\\n    private format;\\n    private value;\\n    private color;\\n    updateOptions(options: IColorOptions): void;\\n    getColor(): Color;\\n    setColor(color: Color): void;\\n    emitColorChange(color: Color): void;\\n} \\n \\n } \\n declare module \\"@co-hooks/color/util/convert\\" { \\n import { IHSL, IRGB, IRGBA } from \'@co-hooks/color/util/types\';\\nexport declare function toPercent(v: number, n?: number): number;\\nexport declare function RGB2HEX(rgb: IRGB, allowShort?: boolean): string;\\nexport declare function string2RGB(str: string): IRGBA | null;\\nexport declare function RGBA2HEX(rgba: IRGBA, allowShort?: boolean): string;\\nexport declare function RGB2HSL(rgb: IRGB): IHSL;\\nexport declare function HSL2RGB(hsl: IHSL): IRGB; \\n \\n } \\n declare module \\"@co-hooks/color/util/types\\" { \\n \\nexport interface IRGB {\\n    r: number;\\n    g: number;\\n    b: number;\\n}\\nexport interface IRGBA extends IRGB {\\n    a: number;\\n}\\n\\nexport interface ISL {\\n    s: number;\\n    l: number;\\n}\\nexport interface IHSL extends ISL {\\n    h: number;\\n}\\nexport interface IHSLA extends IHSL {\\n    a: number;\\n} \\n  \\n}","moduleName":"@co-hooks/color"},{"code":"\\n declare module \\"@rc-hooks/color\\" { \\n \\nexport * from \'@rc-hooks/color/components/RcColor\';\\nexport * from \'@rc-hooks/color/hooks/useColor\';\\nexport * from \'@rc-hooks/color/hooks/useAlpha\';\\nexport * from \'@rc-hooks/color/hooks/useHex\';\\nexport * from \'@rc-hooks/color/hooks/useHue\';\\nexport * from \'@rc-hooks/color/hooks/useSaturationAndLight\';\\nexport * from \'@rc-hooks/color/hooks/useColorFields\';\\nexport * from \'@rc-hooks/color/hooks/useColorBoard\';\\nexport * from \'@rc-hooks/color/hooks/useSetColor\';\\nexport * from \'@co-hooks/color\'; \\n \\n } \\n declare module \\"@rc-hooks/color/components/RcColor\\" { \\n import { ReactNode } from \'react\';\\nimport { Color, IColorOptions } from \'@co-hooks/color\';\\nexport interface IRcColorProps extends IColorOptions {\\n    children?: ReactNode;\\n    onChange?: (color: Color) => void;\\n    onValueChange?: (color: string) => void;\\n}\\nexport declare function RcColor(props: IRcColorProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/color/hooks/useColor\\" { \\n import { ColorManager } from \'@co-hooks/color\';\\nexport declare function useColor(): ColorManager; \\n \\n } \\n declare module \\"@rc-hooks/color/hooks/useAlpha\\" { \\n import { IRGBA } from \'@co-hooks/color\';\\nexport declare function useAlpha(): [IRGBA, (alpha: number) => void]; \\n \\n } \\n declare module \\"@rc-hooks/color/hooks/useHex\\" { \\n export declare function useHex(): [string, (hex: string) => void, () => void]; \\n \\n } \\n declare module \\"@rc-hooks/color/hooks/useHue\\" { \\n export declare function useHue(): [number, (hue: number) => void]; \\n \\n } \\n declare module \\"@rc-hooks/color/hooks/useSaturationAndLight\\" { \\n import { IHSL, ISL } from \'@co-hooks/color\';\\nexport declare function useSaturationAndLight(): [IHSL, (offset: ISL) => void]; \\n \\n } \\n declare module \\"@rc-hooks/color/hooks/useColorFields\\" { \\n import { IHSL, IRGBA } from \'@co-hooks/color\';\\nexport interface IColorFieldsCallback {\\n    onHueChange: (v: number) => void;\\n    onSaturationChange: (v: number) => void;\\n    onLightChange: (v: number) => void;\\n    onRedChange: (v: number) => void;\\n    onGreenChange: (v: number) => void;\\n    onBlueChange: (v: number) => void;\\n    onAlphaChange: (v: number) => void;\\n}\\nexport declare function useColorFields(): [IRGBA & IHSL, IColorFieldsCallback]; \\n \\n } \\n declare module \\"@rc-hooks/color/hooks/useColorBoard\\" { \\n \\nimport { IRGBA } from \'@co-hooks/color\';\\nexport declare function useColorBoard(): IRGBA; \\n \\n } \\n declare module \\"@rc-hooks/color/hooks/useSetColor\\" { \\n export declare function useSetColor(): (color: string) => void; \\n  \\n}","moduleName":"@rc-hooks/color"},{"code":"\\n declare module \\"@co-hooks/date\\" { \\n \\nexport * from \'@co-hooks/date/lib/BaseDate\';\\nexport * from \'@co-hooks/date/lib/SimpleDate\';\\nexport * from \'@co-hooks/date/lib/MultipleDate\';\\nexport * from \'@co-hooks/date/lib/RangeDate\';\\nexport * from \'@co-hooks/date/lib/CompareRangeDate\';\\nexport * from \'@co-hooks/date/lib/BasePanel\';\\nexport * from \'@co-hooks/date/lib/DatePanel\';\\nexport * from \'@co-hooks/date/lib/MonthPanel\';\\nexport * from \'@co-hooks/date/lib/YearPanel\';\\nexport * from \'@co-hooks/date/lib/WeekPanel\';\\nexport * from \'@co-hooks/date/lib/Time\';\\nexport * from \'@co-hooks/date/lib/RangeTime\';\\nexport * from \'@co-hooks/date/util\'; \\n \\n } \\n declare module \\"@co-hooks/date/lib/BaseDate\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { SelectedRangeState } from \'@co-hooks/date/util\';\\nimport { BasePanel, PanelType } from \'@co-hooks/date/lib/BasePanel\';\\nimport { MonthPanel } from \'@co-hooks/date/lib/MonthPanel\';\\nimport { WeekPanel } from \'@co-hooks/date/lib/WeekPanel\';\\nimport { YearPanel } from \'@co-hooks/date/lib/YearPanel\';\\nexport declare type IsDisabledFun = (date: Date) => boolean;\\nexport interface IBaseDateOptions {\\n    outRangeDisabled?: boolean;\\n    needRangeValid?: boolean;\\n    isDateDisabled?: IsDisabledFun;\\n    isMonthDisabled?: IsDisabledFun;\\n    isYearDisabled?: IsDisabledFun;\\n    disabled?: boolean;\\n    startDay?: number;\\n}\\nexport interface ISetPanelDateEventParams {\\n    part: string;\\n    date: Date;\\n}\\nexport interface IBaseDateEvent {\\n    \'set-panel-date\': [ISetPanelDateEventParams];\\n}\\nexport declare enum FrameSelectedType {\\n    REVERSE = 0,\\n    SELECT = 1,\\n    UNSELECT = 2\\n}\\nexport interface IPanelRoot {\\n    updateValue(value?: Date | Date[]): void;\\n    isInvalidTryingDate(): boolean;\\n    getSelectedState(date: Date): SelectedRangeState;\\n    getTryingSelectedState(date: Date): SelectedRangeState;\\n    getStartDay(): number;\\n    getPanel(part: string): BasePanel;\\n    getAllPanel(): {\\n        [key: string]: BasePanel;\\n    };\\n    createPanel(panelType: PanelType, part: string): BasePanel;\\n    isDateSelected(date: Date): boolean;\\n    isWeekDisabled(date: Date, part: string): boolean;\\n    isMonthSelected(date: Date): boolean;\\n    isYearSelected(date: Date): boolean;\\n    isGlobalDisabled(): boolean;\\n    isDateDisabled(date: Date, part: string): boolean;\\n    isWeekSelected(date: Date): boolean;\\n    isMonthDisabled(date: Date, part: string): boolean;\\n    isYearDisabled(date: Date, part: string): boolean;\\n    repaintPanel(): void;\\n    setPanelSelected(date: Date, part: string, virtual?: boolean): void;\\n    setPanelFrameSelected(dateList: Date[], part: string, type: FrameSelectedType, virtual?: boolean): void;\\n    isTrying(): boolean;\\n    isToday(date: Date): boolean;\\n    getOutRangeDisabled(): boolean;\\n    setPanelDate(part: string, date: Date): void;\\n}\\nexport declare abstract class BaseDate<T extends IBaseDateEvent> extends Emitter<T> implements IPanelRoot {\\n    protected panelMap: {\\n        [key: string]: BasePanel;\\n    };\\n    protected startDay: number;\\n    protected isValueValid: boolean;\\n    protected outRangeDisabled: boolean;\\n    protected panelType: PanelType;\\n    protected needRangeValid: boolean;\\n    protected disabled: boolean;\\n    constructor(panelType: PanelType);\\n    isTrying(): boolean;\\n    isInvalidTryingDate(): boolean;\\n    addPanel(panel: BasePanel): void;\\n    createPanel(panelType: PanelType, part: string): BasePanel;\\n    createDatePanel(part: string): BasePanel;\\n    createMonthPanel(part: string): MonthPanel;\\n    createYearPanel(part: string): YearPanel;\\n    createWeekPanel(part: string): WeekPanel;\\n    updateOptions(options: IBaseDateOptions): void;\\n    getStartDay(): number;\\n    isToday(date: Date): boolean;\\n    getPanel(part: string): BasePanel;\\n    getAllPanel(): {\\n        [key: string]: BasePanel;\\n    };\\n    getOutRangeDisabled(): boolean;\\n    setPanelDate(part: string, date: Date): void;\\n    isGlobalDisabled(): boolean;\\n    isDateDisabled(date: Date): boolean;\\n    isWeekDisabled(startDate: Date): boolean;\\n    isMonthDisabled(date: Date): boolean;\\n    isYearDisabled(date: Date): boolean;\\n    getTryingSelectedState(date: Date): SelectedRangeState;\\n    setPanelFrameSelected(dateList: Date[], part: string, type: FrameSelectedType, virtual?: boolean): void;\\n    repaintPanel(): void;\\n    protected compareDate(date1?: Date | null, date2?: Date | null, panelType?: PanelType): number;\\n    protected equalDate(date1?: Date | null, date2?: Date | null, panelType?: PanelType): boolean;\\n    protected lessThanDate(data1?: Date | null, date2?: Date | null, panelType?: PanelType): boolean;\\n    protected greaterThanDate(data1?: Date | null, date2?: Date | null, panelType?: PanelType): boolean;\\n    protected isDisabled(date: Date): boolean;\\n    protected isSelected(date: Date): boolean;\\n    protected nextDate(date: Date, offset?: number): Date;\\n    protected prevDate(date: Date, offset?: number): Date;\\n    abstract updateValue(value?: Date | Date[]): void;\\n    abstract getSelectedState(date: Date): SelectedRangeState;\\n    abstract isDateSelected(date: Date): boolean;\\n    abstract isMonthSelected(date: Date): boolean;\\n    abstract isYearSelected(date: Date): boolean;\\n    abstract isWeekSelected(date: Date): boolean;\\n    abstract setPanelSelected(date: Date, part: string, virtual?: boolean): void;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/SimpleDate\\" { \\n \\nimport { SelectedRangeState } from \'@co-hooks/date/util\';\\nimport { BaseDate, IBaseDateEvent } from \'@co-hooks/date/lib/BaseDate\';\\nexport interface ISimpleDateEvent extends IBaseDateEvent {\\n    \'value-change\': [Date];\\n}\\nexport declare type SimplePanelUpdater = (range: SimpleDate, value: Date | null) => void;\\nexport declare class SimpleDate extends BaseDate<ISimpleDateEvent> {\\n    private value;\\n    private onUpdatePanelDate?;\\n    private presetTrying;\\n    private presetTryingDate;\\n    private presetTryingValid;\\n    setPresetTrying(presetTrying: Date): void;\\n    resetPresetTrying(): void;\\n    setSimplePanelUpdate(updater: SimplePanelUpdater): void;\\n    updateValue(value?: Date): void;\\n    getSelectedState(date: Date): SelectedRangeState;\\n    isDateSelected(date: Date): boolean;\\n    isMonthSelected(date: Date): boolean;\\n    isWeekSelected(date: Date): boolean;\\n    isYearSelected(date: Date): boolean;\\n    setPanelSelected(date: Date, part: string, virtual?: boolean): void;\\n    getValue(): Date | null;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/MultipleDate\\" { \\n import { SelectedRangeState } from \'@co-hooks/date/util\';\\nimport { BaseDate, FrameSelectedType, IBaseDateEvent, ISetPanelDateEventParams } from \'@co-hooks/date/lib/BaseDate\';\\nexport interface IMultipleDateEvent extends IBaseDateEvent {\\n    \'value-change\': [Date[]];\\n}\\nexport declare type MultiplePanelUpdater = (range: MultipleDate, value: Date[]) => void;\\nexport declare type SetMultiplePanelDate = (root: MultipleDate, params: ISetPanelDateEventParams) => void;\\nexport declare class MultipleDate extends BaseDate<IMultipleDateEvent> {\\n    private value;\\n    private onUpdatePanelDate?;\\n    private trying;\\n    private tryingDate;\\n    private tryingValid;\\n    private presetTrying;\\n    private presetTryingDate;\\n    private presetTryingValid;\\n    setMultiplePanelUpdate(updater: MultiplePanelUpdater): void;\\n    updateValue(value?: Date[]): void;\\n    getValue(): Date[];\\n    getTryingSelectedState(date: Date): SelectedRangeState;\\n    getSelectedState(date: Date): SelectedRangeState;\\n    isDateSelected(date: Date): boolean;\\n    isMonthSelected(date: Date): boolean;\\n    isWeekSelected(date: Date): boolean;\\n    isYearSelected(date: Date): boolean;\\n    setPanelSelected(date: Date, part: string, virtual?: boolean): void;\\n    resetTryingState(): void;\\n    setPresetTrying(presetTrying: Date[]): void;\\n    resetPresetTrying(): void;\\n    setPanelFrameSelected(dateList: Date[], part: string, type: FrameSelectedType, virtual?: boolean): void;\\n    isTrying(): boolean;\\n    private equalValue;\\n    private getIsValueValid;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/RangeDate\\" { \\n import { SelectedRangeState } from \'@co-hooks/date/util\';\\nimport { BaseDate, IBaseDateEvent, IBaseDateOptions, ISetPanelDateEventParams } from \'@co-hooks/date/lib/BaseDate\';\\nexport interface IRangeDateInstance {\\n    value: Date[];\\n    innerValue: Date[];\\n    trying: boolean;\\n    tryingDate: Date[];\\n}\\nexport interface IRangeDateEvent extends IBaseDateEvent {\\n    \'value-change\': [Date[]];\\n    \'add-start-value\': [Date];\\n}\\nexport declare type RangePanelUpdater = (range: RangeDate, value: Date[]) => void;\\nexport declare type SetPanelDate = (root: RangeDate, params: ISetPanelDateEventParams) => void;\\nexport declare type AddStartValue = (root: RangeDate, date: Date) => void;\\nexport declare class RangeDate extends BaseDate<IRangeDateEvent> {\\n    private value;\\n    private innerValue;\\n    private trying;\\n    private tryingDate;\\n    private tryingValid;\\n    private presetTrying;\\n    private presetTryingDate;\\n    private presetTryingValid;\\n    private offset;\\n    private onUpdatePanelDate?;\\n    setRangePanelUpdate(updater: RangePanelUpdater): void;\\n    updateValue(value?: Date[]): void;\\n    updateOptions(options: IBaseDateOptions & {\\n        offset?: number;\\n    }): void;\\n    getValue(): Date[];\\n    getTryingSelectedState(date: Date): SelectedRangeState;\\n    getSelectedState(date: Date): SelectedRangeState;\\n    isDateSelected(date: Date): boolean;\\n    isMonthSelected(date: Date): boolean;\\n    isWeekSelected(date: Date): boolean;\\n    isYearSelected(date: Date): boolean;\\n    setPanelSelected(date: Date, part?: string, virtual?: boolean): void;\\n    revertPanelSelected(): void;\\n    resetTryingState(): void;\\n    setPresetTrying(presetTrying: Date[]): void;\\n    resetPresetTrying(): void;\\n    isTrying(): boolean;\\n    getInstance(): IRangeDateInstance;\\n    isInvalidTryingDate(): boolean;\\n    private equalValue;\\n    private getIsValueValid;\\n    private setTryingState;\\n    private setControlledPanelSelected;\\n    private calcSelectedState;\\n    private setOffsetPanelSelected;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/CompareRangeDate\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IBaseDateOptions } from \'@co-hooks/date/lib/BaseDate\';\\nimport { PanelType } from \'@co-hooks/date/lib/BasePanel\';\\nimport { RangeDate, RangePanelUpdater, SetPanelDate } from \'@co-hooks/date/lib/RangeDate\';\\nexport interface ICompareRangeDateInnerValue {\\n    source: Date[];\\n    isCompare: boolean;\\n    target: Date[];\\n}\\nexport interface ICompareRangeDateEvent {\\n    \'offset-update\': [number | null];\\n    \'value-change\': [ICompareRangeDateInnerValue];\\n}\\ninterface ICompareRangeDateOptions extends IBaseDateOptions {\\n    sourceOffset?: number;\\n    targetOffset?: number;\\n}\\nexport declare class CompareRangeDate extends Emitter<ICompareRangeDateEvent> {\\n    readonly sourceRangeDate: RangeDate;\\n    readonly targetRangeDate: RangeDate;\\n    private readonly panelType;\\n    private startDay;\\n    private targetOffset?;\\n    private offsetDate;\\n    private isCompare;\\n    private onSetPanelDate?;\\n    private onRangePanelUpdate?;\\n    constructor(panelType: PanelType, rangeDateParts: string[]);\\n    updateValue(value: ICompareRangeDateInnerValue): void;\\n    updateOptions(options: ICompareRangeDateOptions): void;\\n    setSetPanelDate(updater?: SetPanelDate): void;\\n    setRangePanelUpdate(updater: RangePanelUpdater): void;\\n    getOffset(): number | null;\\n    getIsCompare(): boolean;\\n    dispose(): void;\\n    private init;\\n    private calculateOffsetDate;\\n    private sourceValueUpdate;\\n    private sourceSetPanelDate;\\n    private targetValueUpdate;\\n    private targetRangePanelUpdate;\\n    private targetSetPanelDate;\\n    private getOffsetDate;\\n}\\nexport {}; \\n \\n } \\n declare module \\"@co-hooks/date/lib/BasePanel\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { SelectedRangeState } from \'@co-hooks/date/util\';\\nimport { FrameSelectedType, IPanelRoot } from \'@co-hooks/date/lib/BaseDate\';\\nimport { DatePanel } from \'@co-hooks/date/lib/DatePanel\';\\nimport { MonthPanel } from \'@co-hooks/date/lib/MonthPanel\';\\nimport { WeekPanel } from \'@co-hooks/date/lib/WeekPanel\';\\nimport { YearPanel } from \'@co-hooks/date/lib/YearPanel\';\\nexport interface IBasePanelOptions {\\n    root: IPanelRoot;\\n    date?: Date;\\n    part: string;\\n}\\nexport interface IBasePanelEvent {\\n    repaint: [];\\n}\\nexport declare enum PanelType {\\n    WEEK = \\"week\\",\\n    DATE = \\"date\\",\\n    MONTH = \\"month\\",\\n    YEAR = \\"year\\"\\n}\\nexport declare abstract class BasePanel extends Emitter<IBasePanelEvent> {\\n    protected date: Date;\\n    protected readonly owner: BasePanel;\\n    private readonly root;\\n    private readonly part;\\n    private hidePrev;\\n    private hideNext;\\n    constructor(options: IBasePanelOptions, owner?: BasePanel);\\n    \\n    updateDate(date: Date, isSilent?: boolean, virtual?: boolean): void;\\n    \\n    frameSelectDate(list: Date[], type: FrameSelectedType, virtual?: boolean): void;\\n    getDate(): Date;\\n    getPart(): string;\\n    isDateDisabled(date: Date): boolean;\\n    isWeekDisabled(date: Date): boolean;\\n    isMonthDisabled(date: Date): boolean;\\n    isYearDisabled(date: Date): boolean;\\n    isWeekSelected(date: Date): boolean;\\n    isDateSelected(date: Date): boolean;\\n    isDateToday(date: Date): boolean;\\n    isMonthSelected(date: Date): boolean;\\n    isYearSelected(date: Date): boolean;\\n    prevMonth(): void;\\n    nextMonth(): void;\\n    prevYear(): void;\\n    nextYear(): void;\\n    prevTenYear(): void;\\n    nextTenYear(): void;\\n    repaint(): void;\\n    getStartDay(): number;\\n    getSelectedState(date: Date): SelectedRangeState;\\n    getTryingSelectedState(date: Date): SelectedRangeState;\\n    isInvalidTryingDate(): boolean;\\n    setDate(date: Date): void;\\n    \\n    getCurrentYear(): number;\\n    \\n    getCurrentMonth(): number;\\n    getDayList(): number[];\\n    getCurrentType(): PanelType;\\n    setCurrentType(type: PanelType): void;\\n    setHidePrev(hidePrev: boolean): void;\\n    setHideNext(hideNext: boolean): void;\\n    getHidePrev(): boolean;\\n    getHideNext(): boolean;\\n    getOutRangeDisabled(): boolean;\\n    protected isOwner(): boolean;\\n    protected getDisabledState(date: Date): SelectedRangeState;\\n    private isDisabled;\\n    private isSelected;\\n    protected abstract syncCurrentDate(date: Date): void;\\n    protected abstract currentType: PanelType;\\n    abstract getPanelType(): PanelType;\\n    abstract getDatePanel(): DatePanel;\\n    abstract getWeekPanel(): WeekPanel;\\n    abstract getMonthPanel(): MonthPanel;\\n    abstract getYearPanel(): YearPanel;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/DatePanel\\" { \\n \\nimport { IPanelItemState } from \'@co-hooks/date/util\';\\nimport { BasePanel, IBasePanelOptions, PanelType } from \'@co-hooks/date/lib/BasePanel\';\\nimport { MonthPanel } from \'@co-hooks/date/lib/MonthPanel\';\\nimport { WeekPanel } from \'@co-hooks/date/lib/WeekPanel\';\\nimport { YearPanel } from \'@co-hooks/date/lib/YearPanel\';\\nexport interface IDatePanelViewItem extends IPanelItemState {\\n    date: number;\\n    week: number;\\n    month: number;\\n    year: number;\\n    key: number;\\n}\\nexport interface IDatePanelViewData {\\n    year: number;\\n    month: number;\\n    dayList: number[];\\n    dateList: IDatePanelViewItem[][];\\n}\\nexport declare const DATE_ROW_COUNT = 6;\\nexport declare const DATE_COL_COUNT = 7;\\nexport declare class DatePanel extends BasePanel {\\n    protected currentType: PanelType;\\n    private readonly monthIns;\\n    constructor(options: IBasePanelOptions, parent?: BasePanel);\\n    \\n    getDatePanelView(): IDatePanelViewData;\\n    \\n    setCurrentDate(item: IDatePanelViewItem, virtual?: boolean): void;\\n    getPanelType(): PanelType;\\n    getDatePanel(): DatePanel;\\n    getMonthPanel(): MonthPanel;\\n    getWeekPanel(): WeekPanel;\\n    getYearPanel(): YearPanel;\\n    protected syncCurrentDate(date: Date): void;\\n    private getDateGridState;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/MonthPanel\\" { \\n import { IPanelItemState } from \'@co-hooks/date/util\';\\nimport { BasePanel, IBasePanelOptions, PanelType } from \'@co-hooks/date/lib/BasePanel\';\\nimport { DatePanel } from \'@co-hooks/date/lib/DatePanel\';\\nimport { WeekPanel } from \'@co-hooks/date/lib/WeekPanel\';\\nimport { YearPanel } from \'@co-hooks/date/lib/YearPanel\';\\nexport interface IMonthPanelViewItem extends IPanelItemState {\\n    key: number;\\n    month: number;\\n    year: number;\\n}\\nexport interface IMonthPanelViewData {\\n    year: number;\\n    monthList: IMonthPanelViewItem[][];\\n}\\nexport declare class MonthPanel extends BasePanel {\\n    protected currentType: PanelType;\\n    private readonly yearIns;\\n    constructor(options: IBasePanelOptions, parent?: BasePanel);\\n    getMonthPanelView(): IMonthPanelViewData;\\n    \\n    setCurrentMonth(item: IMonthPanelViewItem, virtual?: boolean): void;\\n    getPanelType(): PanelType;\\n    getDatePanel(): DatePanel;\\n    getMonthPanel(): MonthPanel;\\n    getWeekPanel(): WeekPanel;\\n    getYearPanel(): YearPanel;\\n    protected syncCurrentDate(date: Date): void;\\n    private getMonthGridState;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/YearPanel\\" { \\n import { IPanelItemState } from \'@co-hooks/date/util\';\\nimport { BasePanel, PanelType } from \'@co-hooks/date/lib/BasePanel\';\\nimport { DatePanel } from \'@co-hooks/date/lib/DatePanel\';\\nimport { MonthPanel } from \'@co-hooks/date/lib/MonthPanel\';\\nimport { WeekPanel } from \'@co-hooks/date/lib/WeekPanel\';\\nexport interface IYearPanelViewItem extends IPanelItemState {\\n    key: number;\\n    year: number;\\n}\\nexport interface IYearPanelViewData {\\n    startYear: number;\\n    endYear: number;\\n    yearList: IYearPanelViewItem[][];\\n}\\nexport declare class YearPanel extends BasePanel {\\n    protected currentType: PanelType;\\n    getYearPanelView(): IYearPanelViewData;\\n    \\n    setCurrentYear(item: IYearPanelViewItem, virtual?: boolean): void;\\n    getPanelType(): PanelType;\\n    getDatePanel(): DatePanel;\\n    getMonthPanel(): MonthPanel;\\n    getWeekPanel(): WeekPanel;\\n    getYearPanel(): YearPanel;\\n    protected syncCurrentDate(date: Date): void;\\n    private getYearGridState;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/WeekPanel\\" { \\n \\nimport { GridRangeState, IPanelItemState, RowRangeState } from \'@co-hooks/date/util\';\\nimport { BasePanel, IBasePanelOptions, PanelType } from \'@co-hooks/date/lib/BasePanel\';\\nimport { DatePanel } from \'@co-hooks/date/lib/DatePanel\';\\nimport { MonthPanel } from \'@co-hooks/date/lib/MonthPanel\';\\nimport { YearPanel } from \'@co-hooks/date/lib/YearPanel\';\\nexport interface IWeekPanelViewDateItem {\\n    date: number;\\n    week: number;\\n    month: number;\\n    year: number;\\n    key: number;\\n    gridState: GridRangeState;\\n    rowState: RowRangeState;\\n}\\nexport interface IWeekPanelViewItem extends IPanelItemState {\\n    week: number;\\n    key: number;\\n    year: number;\\n    dateList: IWeekPanelViewDateItem[];\\n}\\nexport interface IWeekPanelViewData {\\n    year: number;\\n    month: number;\\n    dayList: number[];\\n    weekList: IWeekPanelViewItem[];\\n}\\nexport declare class WeekPanel extends BasePanel {\\n    protected currentType: PanelType;\\n    private readonly monthIns;\\n    constructor(options: IBasePanelOptions, parent?: BasePanel);\\n    \\n    getDatePanelView(): IWeekPanelViewData;\\n    \\n    setCurrentWeek(item: IWeekPanelViewItem, virtual?: boolean): void;\\n    getPanelType(): PanelType;\\n    getMonthPanel(): MonthPanel;\\n    getYearPanel(): YearPanel;\\n    getDatePanel(): DatePanel;\\n    getWeekPanel(): WeekPanel;\\n    protected syncCurrentDate(date: Date): void;\\n    private getDateGridState;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/Time\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { RangeTime } from \'@co-hooks/date/lib/RangeTime\';\\nexport declare enum TimeType {\\n    HOUR = \\"hour\\",\\n    MINUTE = \\"minute\\",\\n    SECOND = \\"second\\"\\n}\\nexport interface ITimeItem {\\n    value: string;\\n    disabled: boolean;\\n}\\nexport interface IBaseTimeOptions {\\n    showHour?: boolean;\\n    showMinute?: boolean;\\n    showSecond?: boolean;\\n    hourStep?: number;\\n    minuteStep?: number;\\n    secondStep?: number;\\n    disabledHours?: (v: number) => boolean;\\n    disabledMinutes?: (v: number) => boolean;\\n    disabledSeconds?: (v: number) => boolean;\\n}\\nexport interface ITimeEvent {\\n    repaint: [];\\n    \'value-change\': [Date];\\n}\\nexport declare class Time extends Emitter<ITimeEvent> {\\n    part: string;\\n    showHour: boolean;\\n    showMinute: boolean;\\n    showSecond: boolean;\\n    hour: number | null;\\n    minute: number | null;\\n    second: number | null;\\n    root: RangeTime | null;\\n    private value;\\n    private readonly hourStep;\\n    private readonly minuteStep;\\n    private readonly secondStep;\\n    constructor(part: string);\\n    repaintTime(): void;\\n    updateOptions(options: IBaseTimeOptions): void;\\n    updateTime(time?: Date): void;\\n    getHourOptions(): ITimeItem[];\\n    getMinuteOptions(): ITimeItem[];\\n    getSecondOptions(): ITimeItem[];\\n    getCurrentIndex(type: TimeType, options: ITimeItem[]): number;\\n    onSelect(type: TimeType, value: number): void;\\n    private generateOptions;\\n    private disabledHours;\\n    private disabledMinutes;\\n    private disabledSeconds;\\n    private padLef;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/lib/RangeTime\\" { \\n \\nimport { Time, TimeType } from \'@co-hooks/date/lib/Time\';\\nexport interface IRangeTime {\\n    left: Time;\\n    right: Time;\\n}\\nexport declare class RangeTime {\\n    private readonly left;\\n    private readonly right;\\n    constructor(options: IRangeTime);\\n    repaint(): void;\\n    compare(v: number, type: TimeType, part: string): boolean;\\n    private hourDisabled;\\n    private minuteDisabled;\\n    private secondDisabled;\\n} \\n \\n } \\n declare module \\"@co-hooks/date/util\\" { \\n \\nexport * from \'@co-hooks/date/util/enum\';\\nexport * from \'@co-hooks/date/util/type\'; \\n \\n } \\n declare module \\"@co-hooks/date/util/enum\\" { \\n \\nexport declare enum RangeState {\\n    NONE = \\"\\",\\n    SINGLE = \\"single\\",\\n    IN = \\"in\\",\\n    START = \\"start\\",\\n    END = \\"end\\",\\n    PREV = \\"prev\\",\\n    NEXT = \\"next\\"\\n} \\n \\n } \\n declare module \\"@co-hooks/date/util/type\\" { \\n \\nimport { RangeState } from \'@co-hooks/date/util/enum\';\\nexport declare type GridRangeState = Exclude<RangeState, RangeState.NONE | RangeState.SINGLE>;\\nexport declare type RowRangeState = RangeState.START | RangeState.IN | RangeState.END | RangeState.SINGLE;\\nexport declare type SelectedRangeState = Exclude<RangeState, RangeState.PREV | RangeState.NEXT>;\\nexport interface IPanelItemState {\\n    isToday: boolean;\\n    gridState: GridRangeState;\\n    selectedState: SelectedRangeState;\\n    tryingSelectedState: SelectedRangeState;\\n    disabledState: SelectedRangeState;\\n} \\n  \\n}","moduleName":"@co-hooks/date"},{"code":"\\n declare module \\"@rc-hooks/date\\" { \\n \\nexport * from \'@rc-hooks/date/hooks/useDate\';\\nexport * from \'@rc-hooks/date/hooks/useViewWrapper\';\\nexport * from \'@rc-hooks/date/hooks/useYearView\';\\nexport * from \'@rc-hooks/date/hooks/useMonthView\';\\nexport * from \'@rc-hooks/date/hooks/useDateView\';\\nexport * from \'@rc-hooks/date/hooks/useWeekView\';\\nexport * from \'@rc-hooks/date/hooks/useTimeView\';\\nexport * from \'@rc-hooks/date/hooks/useFrameSelect\';\\nexport * from \'@rc-hooks/date/hooks/useMultipleDate\';\\nexport * from \'@rc-hooks/date/hooks/useRangeDate\';\\nexport * from \'@rc-hooks/date/hooks/useSimpleDate\';\\nexport * from \'@rc-hooks/date/hooks/useCompareRangeDate\';\\nexport * from \'@rc-hooks/date/hooks/useRangeTime\';\\nexport * from \'@rc-hooks/date/hooks/useSimpleTime\';\\nexport * from \'@rc-hooks/date/hooks/useTime\';\\nexport * from \'@rc-hooks/date/components/RcDateProvider\';\\nexport * from \'@rc-hooks/date/components/RcCompareRangeDateProvider\';\\nexport * from \'@rc-hooks/date/components/RcTimeProvider\';\\nexport * from \'@rc-hooks/date/components/RcRangeTimeProvider\';\\nexport * from \'@co-hooks/date\'; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useDate\\" { \\n import { IPanelRoot } from \'@co-hooks/date\';\\nexport declare function useDate(): IPanelRoot; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useViewWrapper\\" { \\n \\nimport { PanelType } from \'@co-hooks/date\';\\nexport interface IViewWrapperInfo {\\n    ownerType: PanelType;\\n    currentPanelType: PanelType;\\n    isOwner: boolean;\\n    hidePrev: boolean;\\n    hideNext: boolean;\\n    invalid: boolean;\\n    disabled: boolean;\\n    outRangeDisabled: boolean;\\n}\\nexport declare function useViewWrapper(part: string): IViewWrapperInfo; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useYearView\\" { \\n \\nimport { IYearPanelViewData, IYearPanelViewItem } from \'@co-hooks/date\';\\nexport interface IYearPanelView extends IYearPanelViewData {\\n    setCurrentYear: (year: IYearPanelViewItem) => void;\\n    setCurrentYearVirtual: (year: IYearPanelViewItem) => void;\\n    prevTenYear: () => void;\\n    nextTenYear: () => void;\\n}\\nexport declare function useYearView(part: string): IYearPanelView; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useMonthView\\" { \\n \\nimport { IMonthPanelViewData, IMonthPanelViewItem } from \'@co-hooks/date\';\\nexport interface IMonthPanelView extends IMonthPanelViewData {\\n    setCurrentMonth: (month: IMonthPanelViewItem) => void;\\n    setCurrentMonthVirtual: (month: IMonthPanelViewItem) => void;\\n    prevYear: () => void;\\n    nextYear: () => void;\\n    changeToYear: () => void;\\n}\\nexport declare function useMonthView(part: string): IMonthPanelView; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useDateView\\" { \\n \\nimport { IDatePanelViewData, IDatePanelViewItem } from \'@co-hooks/date\';\\nexport interface IDatePanelView extends IDatePanelViewData {\\n    setCurrentDate: (Date: IDatePanelViewItem) => void;\\n    setCurrentDateVirtual: (Date: IDatePanelViewItem) => void;\\n    prevYear: () => void;\\n    nextYear: () => void;\\n    prevMonth: () => void;\\n    nextMonth: () => void;\\n    changeToYear: () => void;\\n    changeToMonth: () => void;\\n}\\nexport declare function useDateView(part: string): IDatePanelView; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useWeekView\\" { \\n \\nimport { IWeekPanelViewData, IWeekPanelViewItem } from \'@co-hooks/date\';\\nexport interface IWeekPanelView extends IWeekPanelViewData {\\n    setCurrentWeek: (week: IWeekPanelViewItem) => void;\\n    setCurrentWeekVirtual: (week: IWeekPanelViewItem) => void;\\n    prevYear: () => void;\\n    nextYear: () => void;\\n    prevMonth: () => void;\\n    nextMonth: () => void;\\n    changeToYear: () => void;\\n    changeToMonth: () => void;\\n}\\nexport declare function useWeekView(part: string): IWeekPanelView; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useTimeView\\" { \\n \\nimport { Time } from \'@co-hooks/date\';\\nexport declare function useTimeView(): Time; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useFrameSelect\\" { \\n \\nimport { FrameSelectedType } from \'@co-hooks/date\';\\nexport interface IFrameSelectInfo {\\n    frameSelectDate: (data: Date[], type: FrameSelectedType) => void;\\n    frameSelectDateVirtual: (data: Date[], type: FrameSelectedType) => void;\\n}\\nexport declare function useFrameSelect(part: string): IFrameSelectInfo; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useMultipleDate\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util\';\\nimport { IBaseDateOptions, MultipleDate, MultiplePanelUpdater, PanelType, SetMultiplePanelDate } from \'@co-hooks/date\';\\nimport { DatePresetEvent, IDatePresetItem } from \'@rc-hooks/date/hooks/useSimpleDate\';\\nexport declare type MultipleDateChange = (value: string[]) => void;\\nexport interface IMultipleDateOptions extends IBaseDateOptions {\\n    locale: IDateLocale;\\n    format?: string;\\n    offset?: number;\\n    value?: string[];\\n    onChange?: MultipleDateChange;\\n    onUpdatePanelDate: MultiplePanelUpdater;\\n    onSetPanelDate?: SetMultiplePanelDate;\\n    panelType: PanelType;\\n    parts: string[];\\n    presets?: IDatePresetItem[];\\n}\\nexport interface IUseMultipleDateResult {\\n    root: MultipleDate;\\n    onSetPresetTrying: DatePresetEvent;\\n    onCancelPresetTrying: DatePresetEvent;\\n    onSetPreset: DatePresetEvent;\\n}\\nexport declare function useMultipleDate(options: IMultipleDateOptions): IUseMultipleDateResult; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useRangeDate\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util\';\\nimport { AddStartValue, IBaseDateOptions, PanelType, RangeDate, RangePanelUpdater, SetPanelDate } from \'@co-hooks/date\';\\nimport { DatePresetEvent, IDatePresetItem } from \'@rc-hooks/date/hooks/useSimpleDate\';\\nexport declare type RangeDateChange = (value: string[]) => void;\\nexport interface IRangeDateOptions extends IBaseDateOptions {\\n    locale: IDateLocale;\\n    format?: string;\\n    offset?: number;\\n    value?: string[];\\n    onChange?: RangeDateChange;\\n    onUpdatePanelDate: RangePanelUpdater;\\n    onSetPanelDate?: SetPanelDate;\\n    onAddStartValue?: AddStartValue;\\n    panelType: PanelType;\\n    parts: string[];\\n    presets?: IDatePresetItem[];\\n}\\nexport interface IUseRangeDateResult {\\n    root: RangeDate;\\n    onSetPresetTrying: DatePresetEvent;\\n    onCancelPresetTrying: DatePresetEvent;\\n    onSetPreset: DatePresetEvent;\\n}\\nexport declare function useRangeDate(options: IRangeDateOptions): IUseRangeDateResult; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useSimpleDate\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util\';\\nimport { IBaseDateOptions, PanelType, SimpleDate, SimplePanelUpdater } from \'@co-hooks/date\';\\nexport interface IDatePresetItem {\\n    label: string;\\n    key: string;\\n    value: Array<Date | string>;\\n}\\nexport declare type SimpleDateChange = (value: string) => void;\\nexport declare type DatePresetEvent = (presetItem: IDatePresetItem) => void;\\nexport interface IUseSimpleDateResult {\\n    root: SimpleDate;\\n    onSetPresetTrying: DatePresetEvent;\\n    onCancelPresetTrying: DatePresetEvent;\\n    onSetPreset: DatePresetEvent;\\n}\\nexport interface ISimpleDateOptions extends IBaseDateOptions {\\n    value: string;\\n    panelType: PanelType;\\n    parts: string[];\\n    format?: string;\\n    locale: IDateLocale;\\n    onUpdatePanelDate: SimplePanelUpdater;\\n    onChange?: SimpleDateChange;\\n}\\nexport declare function useSimpleDate(options: ISimpleDateOptions): IUseSimpleDateResult; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useCompareRangeDate\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util\';\\nimport { CompareRangeDate, IBaseDateOptions, PanelType, RangePanelUpdater, SetPanelDate } from \'@co-hooks/date\';\\nimport { DatePresetEvent } from \'@rc-hooks/date/hooks/useSimpleDate\';\\nexport declare type CompareRangeDateChange = (value: ICompareRangeDateValue) => void;\\nexport interface ICompareRangeDateValue {\\n    source: string[];\\n    isCompare: boolean;\\n    target: string[];\\n}\\nexport interface ICompareRangeDateOptions extends IBaseDateOptions {\\n    locale: IDateLocale;\\n    format?: string;\\n    sourceOffset?: number;\\n    targetOffset?: number;\\n    value?: ICompareRangeDateValue;\\n    onChange?: CompareRangeDateChange;\\n    onUpdatePanelDate: RangePanelUpdater;\\n    onSetPanelDate?: SetPanelDate;\\n    getDefaultTargetBySource?: (source: Date[]) => Date[];\\n    parts: string[];\\n    panelType: PanelType;\\n}\\nexport interface IUseCompareRangeDateResult {\\n    root: CompareRangeDate;\\n    onSetSourcePresetTrying: DatePresetEvent;\\n    onCancelSourcePresetTrying: DatePresetEvent;\\n    onSetSourcePreset: DatePresetEvent;\\n    onSetTargetPresetTrying: DatePresetEvent;\\n    onCancelTargetPresetTrying: DatePresetEvent;\\n    onSetTargetPreset: DatePresetEvent;\\n}\\nexport declare function useCompareRangeDate(options: ICompareRangeDateOptions): IUseCompareRangeDateResult; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useRangeTime\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util\';\\nimport { IBaseTimeOptions, RangeTime, Time } from \'@co-hooks/date\';\\nexport interface IUseRangeTimeResult {\\n    root: RangeTime;\\n    leftPanel: Time;\\n    rightPanel: Time;\\n}\\nexport interface ITimeRangDisabled {\\n    disabledHours?: (v: number) => boolean;\\n    disabledMinutes?: (v: number) => boolean;\\n    disabledSeconds?: (v: number) => boolean;\\n}\\ndeclare type ExcludeTimeOptions = \'disabledHours\' | \'disabledMinutes\' | \'disabledSeconds\';\\nexport interface IRangTime extends Omit<IBaseTimeOptions, ExcludeTimeOptions> {\\n    value: string[];\\n    format?: string;\\n    onChange?: (newValue: string[]) => void;\\n    timeRangDisabled?: (part: \'start\' | \'end\') => ITimeRangDisabled;\\n}\\nexport interface IRangTimeOptions extends IRangTime {\\n    locale: IDateLocale;\\n}\\nexport declare function useRangeTime(options: IRangTimeOptions): IUseRangeTimeResult;\\nexport {}; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useSimpleTime\\" { \\n \\nimport { IBaseTimeOptions, Time } from \'@co-hooks/date\';\\nimport { IDateLocale } from \'@co-hooks/util\';\\nexport interface ISimpleTime extends IBaseTimeOptions {\\n    value: string;\\n    format?: string;\\n    onChange?: (value: string) => void;\\n}\\nexport interface ISimpleTimeOptions extends ISimpleTime {\\n    part: string;\\n    locale: IDateLocale;\\n}\\nexport declare function useSimpleTime(options: ISimpleTimeOptions): Time; \\n \\n } \\n declare module \\"@rc-hooks/date/hooks/useTime\\" { \\n \\nimport { Time } from \'@co-hooks/date\';\\nexport declare function useTime(): Time; \\n \\n } \\n declare module \\"@rc-hooks/date/components/RcDateProvider\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { IPanelRoot } from \'@co-hooks/date\';\\nexport interface IRcDateProviderProps {\\n    root: IPanelRoot;\\n    children?: ReactNode;\\n}\\nexport declare function RcDateProvider(props: IRcDateProviderProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/date/components/RcCompareRangeDateProvider\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { CompareRangeDate } from \'@co-hooks/date\';\\nexport interface IRcCompareRangeDateProviderProps {\\n    root: CompareRangeDate;\\n    children?: ReactNode;\\n}\\nexport declare function RcCompareRangeDateProvider(props: IRcCompareRangeDateProviderProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/date/components/RcTimeProvider\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { Time } from \'@co-hooks/date\';\\nexport interface ITimeProps {\\n    root: Time;\\n    children?: ReactNode;\\n}\\nexport declare function RcTimeProvider(props: ITimeProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/date/components/RcRangeTimeProvider\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { RangeTime } from \'@co-hooks/date\';\\nexport interface IRangeTimeProps {\\n    root: RangeTime;\\n    children?: ReactNode;\\n}\\nexport declare function RcRangeTimeProvider(props: IRangeTimeProps): JSX.Element; \\n  \\n}","moduleName":"@rc-hooks/date"},{"code":"\\n declare module \\"@co-hooks/region\\" { \\n \\nexport * from \'@co-hooks/region/enum\';\\nexport * from \'@co-hooks/region/lib/Point\';\\nexport * from \'@co-hooks/region/lib/Axis\';\\nexport * from \'@co-hooks/region/lib/SimpleRegion\';\\nexport * from \'@co-hooks/region/lib/RangeRegion\';\\nexport * from \'@co-hooks/region/lib/TwoDimensionRegion\';\\nexport * from \'@co-hooks/region/lib/Region\'; \\n \\n } \\n declare module \\"@co-hooks/region/enum\\" { \\n \\nexport declare enum AxisType {\\n    HORIZONTAL = \\"horizontal\\",\\n    VERTICAL = \\"vertical\\"\\n}\\nexport declare enum PointHorizontalType {\\n    LEFT = 2,\\n    CENTER = 0,\\n    RIGHT = 3\\n}\\nexport declare enum PointVerticalType {\\n    TOP = 8,\\n    CENTER = 0,\\n    BOTTOM = 12\\n}\\nexport declare enum PointType {\\n    LEFT_TOP = 10,\\n    LEFT = 2,\\n    LEFT_BOTTOM = 14,\\n    TOP = 8,\\n    CENTER = 0,\\n    BOTTOM = 12,\\n    RIGHT_TOP = 11,\\n    RIGHT = 3,\\n    RIGHT_BOTTOM = 15\\n} \\n \\n } \\n declare module \\"@co-hooks/region/lib/Point\\" { \\n \\nimport { IOffset } from \'@co-hooks/dom\';\\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { AxisType, PointType } from \'@co-hooks/region/enum\';\\nimport { Axis } from \'@co-hooks/region/lib/Axis\';\\nimport { IRegion } from \'@co-hooks/region/lib/Region\';\\nexport interface IPointEvents {\\n    \'repaint\': [];\\n}\\nexport interface IPrecisionOffset {\\n    x: string;\\n    y: string;\\n}\\nexport declare class Point extends Emitter<IPointEvents> {\\n    private offset;\\n    private readonly region;\\n    private readonly type;\\n    private readonly name;\\n    private dragging;\\n    constructor(region: IRegion, type: PointType, name: string);\\n    getPointName(): string;\\n    getPointType(): PointType;\\n    getAxis(type: AxisType): Axis;\\n    getRegion(): IRegion;\\n    getOffset(): IOffset;\\n    getPointValue(): IOffset;\\n    setPointValue(value: IOffset, virtual?: boolean): void;\\n    getDragging(): boolean;\\n    setDragging(dragging: boolean): void;\\n    repaint(): void;\\n    updatePointValue(): void;\\n    updateRealOffset(start: IOffset, end: IOffset): void;\\n    \\n    getOffsetPrecisionValue(): IPrecisionOffset;\\n    \\n    getPrecisionValue(type: AxisType): string;\\n    setPrecisionValue(type: AxisType, value: string, virtual?: boolean): boolean;\\n    upStep(type: AxisType, stepCount?: number): void;\\n    downStep(type: AxisType, stepCount?: number): void;\\n    private calcNewOffsetByType;\\n} \\n \\n } \\n declare module \\"@co-hooks/region/lib/Axis\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { AxisType } from \'@co-hooks/region/enum\';\\nimport { IRegion } from \'@co-hooks/region/lib/Region\';\\nexport interface IAxisConfig {\\n    strict?: boolean;\\n    step?: number;\\n    min?: number;\\n    max?: number;\\n    precision?: number;\\n}\\nexport interface IAxisEvents {\\n    \'repaint\': [];\\n}\\nexport declare class Axis extends Emitter<IAxisEvents> {\\n    \\n    private static getPrecision;\\n    private step;\\n    private precision?;\\n    private min;\\n    private max;\\n    private strict;\\n    private readonly type;\\n    private readonly region;\\n    constructor(region: IRegion, type: AxisType);\\n    getAxisType(): AxisType;\\n    getRegion(): IRegion;\\n    getAxisLength(): number;\\n    getValueOffset(value: number): number;\\n    getAxisConfig(): Required<IAxisConfig>;\\n    updateAxisConfig(config: IAxisConfig): void;\\n    repaint(): void;\\n    formatPrecisionValue(val: number, precisionValue?: string | number): string;\\n    getOffsetPrecisionValue(offset: number): string;\\n    isValidPrecisionValue(value: string): boolean;\\n    isValidValue(value: number): boolean;\\n    getMaxPrecision(value?: number | string): number;\\n    isValueSelected(value: number): boolean;\\n    isAxisSelected(value: number): boolean;\\n    getValidValue(value: number): number;\\n    stepPrecisionValue(value: number | string, stepCount?: number): string;\\n} \\n \\n } \\n declare module \\"@co-hooks/region/lib/SimpleRegion\\" { \\n \\nimport { IOffset } from \'@co-hooks/dom\';\\nimport { AxisType } from \'@co-hooks/region/enum\';\\nimport { Point } from \'@co-hooks/region/lib/Point\';\\nimport { IAxisConfig } from \'@co-hooks/region/lib/Axis\';\\nimport { Region } from \'@co-hooks/region/lib/Region\';\\nexport interface ISimpleRegionOptions extends IAxisConfig {\\n    changeOnEnd?: boolean;\\n    value: number;\\n}\\nexport declare class SimpleRegion extends Region<number> {\\n    private isTrying;\\n    private changeOnEnd;\\n    private value;\\n    private tryingValue;\\n    private old;\\n    constructor();\\n    updateOptions(options: ISimpleRegionOptions): void;\\n    setPointValue(part: string, value: IOffset, virtual?: boolean): void;\\n    getPointValue(part: string): IOffset;\\n    isValueSelected(value: IOffset): boolean;\\n    isAxisSelected(type: AxisType, value: number): boolean;\\n    getPointByOffset(): Point;\\n    getSelectedRegion(): [IOffset, IOffset];\\n    getSelectedOffset(): [IOffset, IOffset];\\n} \\n \\n } \\n declare module \\"@co-hooks/region/lib/RangeRegion\\" { \\n \\nimport { IOffset } from \'@co-hooks/dom\';\\nimport { AxisType } from \'@co-hooks/region/enum\';\\nimport { Point } from \'@co-hooks/region/lib/Point\';\\nimport { IAxisConfig } from \'@co-hooks/region/lib/Axis\';\\nimport { Region } from \'@co-hooks/region/lib/Region\';\\nexport interface IRangeRegionOptions extends IAxisConfig {\\n    changeOnEnd?: boolean;\\n    value: number[];\\n}\\nexport declare class RangeRegion extends Region<number[]> {\\n    private isTrying;\\n    private changeOnEnd;\\n    private startValue;\\n    private endValue;\\n    private tryingStartValue;\\n    private tryingEndValue;\\n    constructor();\\n    updateOptions(options: IRangeRegionOptions): void;\\n    setPointValue(part: string, value: IOffset, virtual?: boolean): void;\\n    getPointValue(part: string): IOffset;\\n    isValueSelected(value: IOffset): boolean;\\n    isAxisSelected(type: AxisType, value: number): boolean;\\n    getPointByOffset(offset: IOffset): Point;\\n    getSelectedRegion(): [IOffset, IOffset];\\n    getSelectedOffset(): [IOffset, IOffset];\\n} \\n \\n } \\n declare module \\"@co-hooks/region/lib/TwoDimensionRegion\\" { \\n \\nimport { IOffset } from \'@co-hooks/dom\';\\nimport { AxisType } from \'@co-hooks/region/enum\';\\nimport { IAxisConfig } from \'@co-hooks/region/lib/Axis\';\\nimport { Point } from \'@co-hooks/region/lib/Point\';\\nimport { Region } from \'@co-hooks/region/lib/Region\';\\nexport interface ITwoDimensionRegionOptions {\\n    changeOnEnd?: boolean;\\n    value: IOffset;\\n    xAxis: IAxisConfig;\\n    yAxis: IAxisConfig;\\n}\\nexport declare class TwoDimensionRegion extends Region<IOffset> {\\n    private isTrying;\\n    private changeOnEnd;\\n    private value;\\n    private tryingValue;\\n    constructor();\\n    updateOptions(options: ITwoDimensionRegionOptions): void;\\n    setPointValue(part: string, value: IOffset, virtual?: boolean): void;\\n    getPointValue(part: string): IOffset;\\n    isValueSelected(value: IOffset): boolean;\\n    isAxisSelected(type: AxisType, value: number): boolean;\\n    getPointByOffset(): Point;\\n    getSelectedRegion(): [IOffset, IOffset];\\n    getSelectedOffset(): [IOffset, IOffset];\\n} \\n \\n } \\n declare module \\"@co-hooks/region/lib/Region\\" { \\n \\nimport { IElementSize, IOffset } from \'@co-hooks/dom\';\\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { AxisType, PointType } from \'@co-hooks/region/enum\';\\nimport { Axis } from \'@co-hooks/region/lib/Axis\';\\nimport { Point } from \'@co-hooks/region/lib/Point\';\\nexport interface IRegion {\\n    repaint(): void;\\n    getPoint(key: string): Point;\\n    getAxis(type: AxisType): Axis;\\n    setPointValue(part: string, value: IOffset, virtual?: boolean): void;\\n    getPointValue(part: string): IOffset;\\n    getAxisLength(type: AxisType): number;\\n    updateRegionSize(size: IElementSize): void;\\n    isValueSelected(value: IOffset): boolean;\\n    isAxisSelected(type: AxisType, value: number): boolean;\\n    getDragging(): boolean;\\n    setDragging(dragging: boolean): void;\\n    getPointByOffset(offset: IOffset): Point;\\n    getSelectedRegion(): [IOffset, IOffset];\\n    getSelectedOffset(): [IOffset, IOffset];\\n}\\nexport interface IRegionEvent<T> {\\n    \'change\': [T];\\n    \'repaint\': [];\\n}\\nexport declare abstract class Region<T> extends Emitter<IRegionEvent<T>> implements IRegion {\\n    private readonly axisMap;\\n    private readonly pointMap;\\n    private size;\\n    private dragging;\\n    protected constructor();\\n    repaint(): void;\\n    getPoint(part: string): Point;\\n    getAxis(type: AxisType): Axis;\\n    getAxisLength(type: AxisType): number;\\n    updateRegionSize(size: IElementSize): void;\\n    getDragging(): boolean;\\n    setDragging(dragging: boolean): void;\\n    protected createAxis(type: AxisType): Axis;\\n    protected createPoint(part: string, type: PointType): Point;\\n    protected repaintPoint(): void;\\n    abstract setPointValue(part: string, value: IOffset, virtual?: boolean): void;\\n    abstract getPointValue(part: string): IOffset;\\n    abstract isValueSelected(value: IOffset): boolean;\\n    abstract isAxisSelected(type: AxisType, value: number): boolean;\\n    abstract getPointByOffset(offset: IOffset): Point;\\n    abstract getSelectedRegion(): [IOffset, IOffset];\\n    abstract getSelectedOffset(): [IOffset, IOffset];\\n} \\n  \\n}","moduleName":"@co-hooks/region"},{"code":"\\n declare module \\"@rc-hooks/region\\" { \\n \\nexport * from \'@rc-hooks/region/components/RcRegionProvider\';\\nexport * from \'@rc-hooks/region/hooks/usePoint\';\\nexport * from \'@rc-hooks/region/hooks/useAxis\';\\nexport * from \'@rc-hooks/region/hooks/useDownStep\';\\nexport * from \'@rc-hooks/region/hooks/useUpStep\';\\nexport * from \'@rc-hooks/region/hooks/usePrecisionValue\';\\nexport * from \'@rc-hooks/region/hooks/useDragger\';\\nexport * from \'@rc-hooks/region/hooks/useAxisMark\';\\nexport * from \'@rc-hooks/region/hooks/useOffset\';\\nexport * from \'@rc-hooks/region/hooks/useRegion\';\\nexport * from \'@rc-hooks/region/hooks/useRegionClick\';\\nexport * from \'@rc-hooks/region/hooks/useSimpleRegion\';\\nexport * from \'@rc-hooks/region/hooks/useRangeRegion\';\\nexport * from \'@rc-hooks/region/hooks/useTwoDimensionRegion\';\\nexport * from \'@co-hooks/region\'; \\n \\n } \\n declare module \\"@rc-hooks/region/components/RcRegionProvider\\" { \\n \\nimport React from \'react\';\\nimport { IRegion } from \'@co-hooks/region\';\\nexport interface IRcRegionProviderProps {\\n    region: IRegion;\\n    children?: React.ReactNode;\\n}\\nexport declare function RcRegionProvider(props: IRcRegionProviderProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/usePoint\\" { \\n \\nimport { Point } from \'@co-hooks/region\';\\nexport declare function usePoint(part: string): Point; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useAxis\\" { \\n \\nimport { Axis, AxisType } from \'@co-hooks/region\';\\nexport declare function useAxis(type: AxisType): Axis; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useDownStep\\" { \\n \\nimport { AxisType } from \'@co-hooks/region\';\\nexport declare function useDownStep(part: string, type: AxisType): [boolean, (stepCount?: number) => void]; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useUpStep\\" { \\n \\nimport { AxisType } from \'@co-hooks/region\';\\nexport declare function useUpStep(part: string, type: AxisType): [boolean, (stepCount?: number) => void]; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/usePrecisionValue\\" { \\n \\nimport { AxisType } from \'@co-hooks/region\';\\nexport declare type INumberConverter = (value: string) => string;\\nexport declare const DEFAULT_CONVERTER: INumberConverter;\\nexport declare function usePrecisionValue(part: string, type: AxisType, format?: INumberConverter, parse?: INumberConverter): [string, (val: string) => void, () => void]; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useDragger\\" { \\n \\nimport { IOffset } from \'@co-hooks/dom\';\\nimport { RefObject } from \'react\';\\nimport { IPrecisionOffset } from \'@co-hooks/region\';\\nexport interface IDraggerInfo {\\n    selected: boolean;\\n    offset: IOffset;\\n    precision: IPrecisionOffset;\\n    dragging: boolean;\\n}\\nexport declare function useDragger(elem: HTMLElement | RefObject<HTMLElement> | null, name: string, draggable: boolean): IDraggerInfo; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useAxisMark\\" { \\n \\nimport { AxisType } from \'@co-hooks/region\';\\nexport interface IMarkInfo {\\n    selected: boolean;\\n    offset: number;\\n    precisionValue: string;\\n    dragging: boolean;\\n}\\nexport declare function useAxisMark(type: AxisType, value: number): IMarkInfo; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useOffset\\" { \\n \\nimport { AxisType } from \'@co-hooks/region\';\\nexport declare function useOffset(type: AxisType, value: number): number; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useRegion\\" { \\n \\nimport { IRegion } from \'@co-hooks/region\';\\nexport declare function useRegion(): IRegion; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useRegionClick\\" { \\n \\nimport { MouseEvent, RefObject } from \'react\';\\nexport declare function useRegionClick(elem: HTMLElement | RefObject<HTMLElement> | null): (e: MouseEvent) => void; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useSimpleRegion\\" { \\n \\nimport { ISimpleRegionOptions, SimpleRegion } from \'@co-hooks/region\';\\nexport declare function useSimpleRegion(options: ISimpleRegionOptions, onChange?: (value: number) => void): [SimpleRegion, number]; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useRangeRegion\\" { \\n \\nimport { IRangeRegionOptions, RangeRegion } from \'@co-hooks/region\';\\nexport declare function useRangeRegion(options: IRangeRegionOptions, onChange?: (value: number[]) => void): [RangeRegion, number[]]; \\n \\n } \\n declare module \\"@rc-hooks/region/hooks/useTwoDimensionRegion\\" { \\n \\nimport { IOffset } from \'@co-hooks/dom\';\\nimport { ITwoDimensionRegionOptions, TwoDimensionRegion } from \'@co-hooks/region\';\\nexport declare function useTwoDimensionRegion(options: ITwoDimensionRegionOptions, onChange?: (value: IOffset) => void): [TwoDimensionRegion, IOffset]; \\n  \\n}","moduleName":"@rc-hooks/region"},{"code":"\\n declare module \\"@co-hooks/animation\\" { \\n \\nexport * from \'@co-hooks/animation/lib/Animation\';\\nexport * from \'@co-hooks/animation/util\'; \\n \\n } \\n declare module \\"@co-hooks/animation/lib/Animation\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nexport declare const animationPlayStateKeys: string[];\\nexport interface IAnimationEvent<T> {\\n    \'animate-ready\': [T];\\n    \'animate-start\': [T];\\n    \'animate-end\': [T, boolean];\\n}\\ndeclare type AnimationCSSType = \'animation\' | \'transition\';\\ndeclare type ValidKeyFrames = boolean | string | ((keyframe: string, event: AnimationEvent) => boolean);\\ndeclare type ValidProperty = boolean | string | ((property: string, event: TransitionEvent) => boolean);\\nexport interface IAnimationBaseOptions {\\n    activeClassName?: string;\\n    presetClassName?: string;\\n    timeout?: number | boolean;\\n    \\n    type?: AnimationCSSType;\\n    \\n    validKeyframes?: ValidKeyFrames;\\n    \\n    validProperty?: ValidProperty;\\n    validTarget?: EventTarget | null;\\n}\\nexport declare class Animation<T = undefined> extends Emitter<IAnimationEvent<T>> {\\n    private activeClassName?;\\n    private presetClassName?;\\n    private validKeyframes?;\\n    private validProperty?;\\n    private validTarget?;\\n    private type;\\n    private ele;\\n    private timeout;\\n    private maxTimeCost;\\n    updateOptions(options: IAnimationBaseOptions): void;\\n    setEle(ele: HTMLElement | null): void;\\n    start(identifier?: T): () => void;\\n    private setAnimationPlayState;\\n    private startAnimation;\\n    private startTransition;\\n    private getTimeRange;\\n    private getTimeCost;\\n}\\nexport {}; \\n \\n } \\n declare module \\"@co-hooks/animation/util\\" { \\n \\nimport * as AnimateEvents from \'@co-hooks/animation/util/animateEvents\';\\nexport { AnimateEvents };\\nexport * from \'@co-hooks/animation/util/getProprtyValue\'; \\n \\n } \\n declare module \\"@co-hooks/animation/util/animateEvents\\" { \\n export declare function addAnimationEndListener(element: HTMLElement, listener: (event: AnimationEvent) => void): void;\\nexport declare function removeAnimationEndListener(element: HTMLElement, listener: (event: AnimationEvent) => void): void;\\nexport declare function addAnimationStartListener(element: HTMLElement, listener: (event: AnimationEvent) => void): void;\\nexport declare function removeAnimationStartListener(element: HTMLElement, listener: (event: AnimationEvent) => void): void;\\nexport declare function addTransitionEndListener(element: HTMLElement, listener: (event: TransitionEvent) => void): void;\\nexport declare function removeTransitionEndListener(element: HTMLElement, listener: (event: TransitionEvent) => void): void;\\nexport declare function addTransitionStartListener(element: HTMLElement, listener: (event: TransitionEvent) => void): void;\\nexport declare function removeTransitionStartListener(element: HTMLElement, listener: (event: TransitionEvent) => void): void; \\n \\n } \\n declare module \\"@co-hooks/animation/util/getProprtyValue\\" { \\n export interface ITransitionValue {\\n    delay: number;\\n    duration: number;\\n    property: string;\\n    timingFunction: string;\\n}\\nexport interface IAnimationValue {\\n    delay: number;\\n    direction: string;\\n    duration: number;\\n    fillMode: string;\\n    iterationCount: number;\\n    keyframes: string;\\n    playState: string;\\n    timingFunction: string;\\n}\\nexport declare function getTransitionValues(element: HTMLElement): ITransitionValue[];\\nexport declare function getAnimationValues(element: HTMLElement): IAnimationValue[]; \\n  \\n}","moduleName":"@co-hooks/animation"},{"code":"\\n declare module \\"@rc-hooks/animation\\" { \\n \\nexport * from \'@rc-hooks/animation/hooks/useChildrenEnterLeave\';\\nexport * from \'@rc-hooks/animation/hooks/useCreateAnimation\';\\nexport * from \'@rc-hooks/animation/hooks/useCSSEnterLeave\';\\nexport * from \'@co-hooks/animation\'; \\n \\n } \\n declare module \\"@rc-hooks/animation/hooks/useChildrenEnterLeave\\" { \\n import { AnimateType } from \'@co-hooks/util\';\\nimport { Key, ReactElement, ReactNode } from \'react\';\\ndeclare type LayoutChangeType = \'enter\' | \'leave\' | \'move\';\\ndeclare type EnterFrameAnimationTick = (domNode: HTMLElement, percent: number, memo: unknown, key: Key) => unknown;\\ndeclare type LeaveFrameAnimationTick = (domNode: HTMLElement, percent: number, memo: unknown, key: Key) => unknown;\\ndeclare type MoveFrameAnimationTick = (domNode: HTMLElement, percent: number, moved: number, memo: unknown, key: Key) => unknown;\\nexport interface IUseChildrenEnterLeaveOptions<T = {}> {\\n    \\n    childRefKey?: string | null | ((reactElement: ReactElement) => string | null);\\n    \\n    disabled?: boolean;\\n    \\n    duration?: number | Record<LayoutChangeType, number>;\\n    \\n    enterChildProps?: Partial<T> | ((prev: T, key: Key) => Partial<T>);\\n    \\n    enterTick?: EnterFrameAnimationTick;\\n    \\n    ignoreInitialRender?: boolean;\\n    \\n    leaveChildProps?: Partial<T> | ((prev: T, key: Key) => Partial<T>);\\n    \\n    leaveTick?: LeaveFrameAnimationTick;\\n    \\n    moveChildProps?: Partial<T> | ((prev: T, key: Key, moved: number) => Partial<T>);\\n    \\n    moveTick?: MoveFrameAnimationTick;\\n    \\n    onFrameAnimationEnd?: () => void;\\n    \\n    skipChildWithoutRef?: boolean;\\n    \\n    timingFunction?: AnimateType | Record<LayoutChangeType, AnimateType>;\\n    \\n    updateAfterAnimation?: boolean;\\n}\\nexport declare function useChildrenEnterLeave<T>(children: ReactNode, options?: IUseChildrenEnterLeaveOptions<T>): [ReactNode, () => () => void];\\nexport {}; \\n \\n } \\n declare module \\"@rc-hooks/animation/hooks/useCreateAnimation\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { Animation, IAnimationBaseOptions } from \'@co-hooks/animation\';\\nexport interface IAnimationOptions<T> extends Omit<IAnimationBaseOptions, \'validTarget\'> {\\n    onReady?: (identifier: T) => void;\\n    onStart?: (identifier: T) => void;\\n    onEnd?: (identifier: T, animating: boolean) => void;\\n    validTarget?: RefObject<EventTarget>;\\n}\\nexport declare function useCreateAnimation<T>(elem: RefObject<HTMLElement> | HTMLElement | null, options: IAnimationOptions<T>): Animation<T>; \\n \\n } \\n declare module \\"@rc-hooks/animation/hooks/useCSSEnterLeave\\" { \\n import { Animation, IAnimationBaseOptions } from \'@co-hooks/animation\';\\nimport { RefObject } from \'react\';\\ninterface IAnimationOptions extends Omit<IAnimationBaseOptions, \'validTarget\'> {\\n    onReady?: () => void;\\n    onStart?: () => void;\\n    onEnd?: (animating: boolean) => void;\\n    validTarget?: RefObject<EventTarget>;\\n}\\nexport interface IUseCSSEnterLeaveOptions extends IAnimationOptions {\\n    allowLeaveFirst?: boolean;\\n    disabled?: boolean;\\n    show?: boolean;\\n    enter?: Partial<IAnimationOptions>;\\n    leave?: Partial<IAnimationOptions>;\\n}\\nexport declare function useCSSEnterLeave(element: RefObject<HTMLElement> | HTMLElement | null, options: IUseCSSEnterLeaveOptions): Animation<boolean>;\\nexport {}; \\n  \\n}","moduleName":"@rc-hooks/animation"},{"code":"\\n declare module \\"@rc-hooks/dialog\\" { \\n \\nexport * from \'@rc-hooks/dialog/components/RcDialog\'; \\n \\n } \\n declare module \\"@rc-hooks/dialog/components/RcDialog\\" { \\n \\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IUseCSSEnterLeaveOptions } from \'@rc-hooks/animation\';\\nimport React from \'react\';\\nexport declare type IRcPositionHorizontal = \'left\' | \'center\' | \'right\' | \'dock\';\\nexport declare type IRcPositionVertical = \'top\' | \'center\' | \'bottom\' | \'dock\';\\nexport interface IRcHorizontal {\\n    horizontal: IRcPositionHorizontal;\\n    left?: number;\\n    right?: number;\\n}\\nexport interface IRcVertical {\\n    vertical: IRcPositionVertical;\\n    top?: number;\\n    bottom?: number;\\n}\\nexport interface IRcDialogExtraProps {\\n    show?: boolean;\\n    mask?: boolean;\\n    onMaskClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\\n    maskStyle?: React.CSSProperties;\\n    maskClassName?: string;\\n    getContainer?: () => HTMLElement | null;\\n    forceFixed?: boolean;\\n    preventPointerEvent?: boolean;\\n    zIndex?: number;\\n    children?: React.ReactNode;\\n    wrapperClassName?: string;\\n    wrapperStyle?: React.CSSProperties;\\n    animation?: IUseCSSEnterLeaveOptions;\\n    wrapperRef?: React.Ref<HTMLDivElement>;\\n}\\nexport declare type IRcPosition = IRcHorizontal & IRcVertical;\\nexport declare type IRcDialogProps = UnionOmit<IRcDialogExtraProps & IRcPosition, React.HTMLAttributes<HTMLDivElement>>;\\nexport declare const RcDialog: React.ForwardRefExoticComponent<Pick<UnionOmit<IRcDialogExtraProps & IRcHorizontal & IRcVertical, React.HTMLAttributes<HTMLDivElement>>, \\"left\\" | \\"right\\" | \\"show\\" | \\"bottom\\" | \\"top\\" | \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"mask\\" | \\"color\\" | \\"horizontal\\" | \\"vertical\\" | \\"animation\\" | \\"onCopy\\" | \\"onCut\\" | \\"onPaste\\" | \\"onDrag\\" | \\"onDrop\\" | \\"onFocus\\" | \\"onBlur\\" | \\"onChange\\" | \\"onInput\\" | \\"onReset\\" | \\"onSubmit\\" | \\"onInvalid\\" | \\"onLoad\\" | \\"onError\\" | \\"onClick\\" | \\"onAbort\\" | \\"onEmptied\\" | \\"onEncrypted\\" | \\"onEnded\\" | \\"onPause\\" | \\"onPlay\\" | \\"onPlaying\\" | \\"onProgress\\" | \\"onSeeked\\" | \\"onSeeking\\" | \\"onStalled\\" | \\"onSuspend\\" | \\"onWaiting\\" | \\"onSelect\\" | \\"onScroll\\" | \\"onWheel\\" | \\"translate\\" | \\"zIndex\\" | \\"defaultValue\\" | \\"id\\" | \\"typeof\\" | \\"children\\" | \\"className\\" | \\"draggable\\" | \\"onDragStart\\" | \\"onDragEnd\\" | \\"getContainer\\" | \\"placeholder\\" | \\"defaultChecked\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"lang\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopyCapture\\" | \\"onCutCapture\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocusCapture\\" | \\"onBlurCapture\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInputCapture\\" | \\"onResetCapture\\" | \\"onSubmitCapture\\" | \\"onInvalidCapture\\" | \\"onLoadCapture\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptiedCapture\\" | \\"onEncryptedCapture\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPauseCapture\\" | \\"onPlayCapture\\" | \\"onPlayingCapture\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeekedCapture\\" | \\"onSeekingCapture\\" | \\"onStalledCapture\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDragCapture\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStartCapture\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScrollCapture\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\" | \\"onMaskClick\\" | \\"maskStyle\\" | \\"maskClassName\\" | \\"forceFixed\\" | \\"preventPointerEvent\\" | \\"wrapperClassName\\" | \\"wrapperStyle\\"> & React.RefAttributes<HTMLDivElement>>; \\n  \\n}","moduleName":"@rc-hooks/dialog"},{"code":"\\n declare module \\"@rc-hooks/notification\\" { \\n \\nexport * from \'@rc-hooks/notification/components/RcNotificationContainer\';\\nexport * from \'@rc-hooks/notification/components/RcNotification\';\\nexport * from \'@rc-hooks/notification/hooks/useNoticeList\';\\nexport * from \'@rc-hooks/notification/lib/NotificationInstance\'; \\n \\n } \\n declare module \\"@rc-hooks/notification/components/RcNotificationContainer\\" { \\n \\nimport { IUseChildrenEnterLeaveOptions } from \'@rc-hooks/animation\';\\nimport { IRcPosition } from \'@rc-hooks/dialog\';\\nimport { ComponentType } from \'react\';\\nimport { INoticeBaseProps } from \'@rc-hooks/notification/lib/NotificationInstance\';\\nimport { IRcNotificationProps } from \'@rc-hooks/notification/components/RcNotification\';\\nexport interface IRcNotificationContainerProps<T extends INoticeBaseProps> {\\n    maxCount?: number;\\n    space?: number;\\n    placement: string;\\n    position: IRcPosition;\\n    Component: ComponentType<T>;\\n    container: HTMLElement;\\n    animation?: IUseChildrenEnterLeaveOptions<IRcNotificationProps<T>>;\\n}\\nexport declare function RcNotificationContainer<T extends INoticeBaseProps>(props: IRcNotificationContainerProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/notification/components/RcNotification\\" { \\n \\nimport { ComponentType, HTMLAttributes, LegacyRef } from \'react\';\\nimport { IRcPosition } from \'@rc-hooks/dialog\';\\nimport { INotice, INoticeBaseProps } from \'@rc-hooks/notification/lib/NotificationInstance\';\\nexport interface IRcNotificationProps<T extends INoticeBaseProps> extends INotice<T>, HTMLAttributes<HTMLDivElement> {\\n    space?: number;\\n    position: IRcPosition;\\n    Component: ComponentType<T>;\\n    wrapperRef?: LegacyRef<HTMLDivElement>;\\n}\\nexport declare function RcNotification<T extends INoticeBaseProps>(props: IRcNotificationProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/notification/hooks/useNoticeList\\" { \\n \\nimport { INotice, INoticeBaseProps } from \'@rc-hooks/notification/lib/NotificationInstance\';\\nexport declare function useNoticeList<T>(placement: string): Array<INotice<T & INoticeBaseProps>>; \\n \\n } \\n declare module \\"@rc-hooks/notification/lib/NotificationInstance\\" { \\n \\nimport { IRcPosition } from \'@rc-hooks/dialog\';\\nimport { ComponentType } from \'react\';\\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IRcNotificationContainerProps } from \'@rc-hooks/notification/components/RcNotificationContainer\';\\nexport interface INoticeBaseProps {\\n    onClose?: () => void;\\n}\\ndeclare type AnimationConfig<T> = IRcNotificationContainerProps<T>[\'animation\'];\\nexport interface INotificationOptions<T> {\\n    maxCount?: number;\\n    space?: number;\\n    placement: {\\n        [key: string]: IRcPosition;\\n    };\\n    animation?: {\\n        [key: string]: AnimationConfig<T & INoticeBaseProps>;\\n    };\\n    Component: ComponentType<T & INoticeBaseProps>;\\n}\\nexport interface INotice<T> {\\n    options: T & INoticeBaseProps;\\n    placement: string;\\n    duration?: number;\\n    onClose: () => void;\\n    key: string;\\n}\\nexport interface INotificationInstanceEvents {\\n    change: [string];\\n}\\nexport interface INotificationOpened {\\n    (): void;\\n    then: Promise<void>[\'then\'];\\n    catch: Promise<void>[\'catch\'];\\n}\\nexport declare class NotificationInstance<T> extends Emitter<INotificationInstanceEvents> {\\n    space: number;\\n    maxCount: number;\\n    animation: {\\n        [key: string]: AnimationConfig<T & INoticeBaseProps>;\\n    };\\n    placement: {\\n        [key: string]: IRcPosition;\\n    };\\n    Component: ComponentType<T & INoticeBaseProps>;\\n    notices: Array<INotice<T & INoticeBaseProps>>;\\n    container: HTMLDivElement;\\n    private mounted;\\n    private disposed;\\n    constructor(conf: INotificationOptions<T>);\\n    mount(): void;\\n    open(notice: T & INoticeBaseProps, placement: string, duration?: number, key?: string): INotificationOpened;\\n    close(key: string): void;\\n    dispose(): void;\\n    getNotices(placement: string): Array<INotice<T & INoticeBaseProps>>;\\n    private getIndexByNoticeKey;\\n    private removeNoticeByKey;\\n}\\nexport {}; \\n  \\n}","moduleName":"@rc-hooks/notification"},{"code":"\\n declare module \\"@co-hooks/table\\" { \\n \\nexport * from \'@co-hooks/table/lib/Table\';\\nexport * from \'@co-hooks/table/lib/RowGroup\';\\nexport * from \'@co-hooks/table/lib/ColumnBase\';\\nexport * from \'@co-hooks/table/lib/Column\';\\nexport * from \'@co-hooks/table/lib/ColumnGroup\';\\nexport * from \'@co-hooks/table/lib/ColumnManager\';\\nexport * from \'@co-hooks/table/lib/LeafColumnManager\';\\nexport * from \'@co-hooks/table/type\'; \\n \\n } \\n declare module \\"@co-hooks/table/lib/Table\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IElementSize } from \'@co-hooks/dom\';\\nimport { ITableOptions } from \'@co-hooks/table/type\';\\nimport { ColumnManager } from \'@co-hooks/table/lib/ColumnManager\';\\nimport { LeafColumnManager } from \'@co-hooks/table/lib/LeafColumnManager\';\\nexport interface ITableEvents<T> {\\n    repaint: [];\\n}\\nexport declare class Table<T, E, K extends keyof T> extends Emitter<ITableEvents<T>> {\\n    private readonly columnManager;\\n    private readonly leafColumnManager;\\n    private readonly rowKey;\\n    constructor(rowKey: K);\\n    updateTableOptions(options: ITableOptions<T, E, K>): void;\\n    updateTableSize(size: IElementSize): void;\\n    getColumnManager(): ColumnManager<T, E>;\\n    getLeafColumnManager(): LeafColumnManager<T, E>;\\n    getRowKey(): K;\\n    repaint(): void;\\n    emitRowChange(): void;\\n} \\n \\n } \\n declare module \\"@co-hooks/table/lib/RowGroup\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IRowExpandInfo } from \'@co-hooks/table\';\\nimport { Table } from \'@co-hooks/table/lib/Table\';\\nexport interface IRowGroupOptions<T extends {\\n    children?: T[];\\n}, K extends keyof T> {\\n    datasource: T[];\\n    expandedRowKeys: Array<T[K]>;\\n}\\nexport interface IRowGroupEvent<T extends {\\n    children?: T[];\\n}, K extends keyof T> {\\n    \'expanded-change\': [Array<T[K]>];\\n}\\nexport interface IRowGroupItem<T> extends IRowExpandInfo {\\n    id: string;\\n    row: T;\\n}\\nexport declare class RowGroup<T extends {\\n    children?: T[];\\n}, E, K extends keyof T> extends Emitter<IRowGroupEvent<T, K>> {\\n    readonly id: string;\\n    private readonly map;\\n    private readonly table;\\n    private expandedRowKeyMap;\\n    private expandedRows;\\n    constructor(table: Table<T, E, K>);\\n    updateRowGroup(options: IRowGroupOptions<T, K>): void;\\n    getRenderRows(): Array<IRowGroupItem<T>>;\\n    setRowExpand(id: string, expanded: boolean): void;\\n} \\n \\n } \\n declare module \\"@co-hooks/table/lib/ColumnBase\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { ColumnFixedType, ColumnType, IColumnCommonOptions, IColumnInfo } from \'@co-hooks/table/type\';\\nimport { ColumnGroup } from \'@co-hooks/table/lib/ColumnGroup\';\\nimport { ColumnManager } from \'@co-hooks/table/lib/ColumnManager\';\\nexport interface IColumnEvents {\\n    repaint: [];\\n}\\nexport declare class ColumnBase<T, E> extends Emitter<IColumnEvents> implements IColumnInfo<T, E> {\\n    renderHead: () => E;\\n    protected readonly key: string;\\n    protected readonly manager: ColumnManager<T, E>;\\n    protected readonly parent: ColumnGroup<T, E> | null;\\n    protected readonly type: ColumnType;\\n    protected show: boolean;\\n    protected fixed: ColumnFixedType;\\n    protected disposed: boolean;\\n    constructor(manager: ColumnManager<T, E>, options: IColumnCommonOptions<T, E>, parent?: ColumnGroup<T, E>);\\n    repaint(): void;\\n    updateColumnOptions(options: IColumnCommonOptions<T, E>): void;\\n    isTop(): boolean;\\n    getParent(): ColumnGroup<T, E> | null;\\n    getFixedType(): ColumnFixedType;\\n    getKey(): string;\\n    isShow(): boolean;\\n    isParentShow(): boolean;\\n    isActualShow(): boolean;\\n    getLevel(): number;\\n    isGroup(): this is ColumnGroup<T, E>;\\n    dispose(): void;\\n    isDisposed(): boolean;\\n    getType(): ColumnType;\\n} \\n \\n } \\n declare module \\"@co-hooks/table/lib/Column\\" { \\n \\nimport { IColumnLeafOptions, IRowExpandInfo } from \'@co-hooks/table/type\';\\nimport { ColumnGroup } from \'@co-hooks/table/lib/ColumnGroup\';\\nimport { ColumnManager } from \'@co-hooks/table/lib/ColumnManager\';\\nimport { ColumnBase } from \'@co-hooks/table/lib/ColumnBase\';\\nexport declare class Column<T, E> extends ColumnBase<T, E> {\\n    renderData: (row: T, expand: IRowExpandInfo, onExpand: (expanded: boolean) => void) => E;\\n    onRowChange: () => void;\\n    private expectWidth;\\n    private widthFixed;\\n    private width;\\n    private className;\\n    constructor(manager: ColumnManager<T, E>, options: IColumnLeafOptions<T, E>, parent?: ColumnGroup<T, E>);\\n    updateColumnOptions(options: IColumnLeafOptions<T, E>): void;\\n    getExpectWidth(): number;\\n    isWidthFixed(): boolean;\\n    getWidth(): number;\\n    setWidth(width: number): void;\\n    isShow(): boolean;\\n    getClassName(): string;\\n} \\n \\n } \\n declare module \\"@co-hooks/table/lib/ColumnGroup\\" { \\n \\nimport { IColumnGroupOptions } from \'@co-hooks/table/type\';\\nimport { Column } from \'@co-hooks/table/lib/Column\';\\nimport { ColumnBase } from \'@co-hooks/table/lib/ColumnBase\';\\nexport declare class ColumnGroup<T, E> extends ColumnBase<T, E> {\\n    private columns;\\n    updateColumnOptions(options: IColumnGroupOptions<T, E>): void;\\n    getColumns(): Array<ColumnGroup<T, E> | Column<T, E>>;\\n    getRenderColumnKeys(): string[];\\n    dispose(): void;\\n    getLeafColumns(): Array<Column<T, E>>;\\n} \\n \\n } \\n declare module \\"@co-hooks/table/lib/ColumnManager\\" { \\n import { IColumnOptions } from \'@co-hooks/table/type\';\\nimport { Column } from \'@co-hooks/table/lib/Column\';\\nimport { ColumnGroup } from \'@co-hooks/table/lib/ColumnGroup\';\\nexport declare class ColumnManager<T, E> {\\n    private columns;\\n    private readonly map;\\n    private fixedLeftColumns;\\n    private nonFixedColumns;\\n    private fixedRightColumns;\\n    createOrUpdateColumn(options: IColumnOptions<T, E>, parent?: ColumnGroup<T, E>): Column<T, E> | ColumnGroup<T, E>;\\n    updateColumns(columns: Array<IColumnOptions<T, E>>): void;\\n    getFixedLeftColumns(): string[];\\n    getNonFixedColumns(): string[];\\n    getFixedRightColumns(): string[];\\n    getShownColumns(): string[];\\n    getColumn(key: string): Column<T, E> | ColumnGroup<T, E>;\\n    getLeafColumns(): Array<Column<T, E>>;\\n    private updateShownColumns;\\n} \\n \\n } \\n declare module \\"@co-hooks/table/lib/LeafColumnManager\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IColumnScrollInfo, IColumnSizeInfo } from \'@co-hooks/table/type\';\\nimport { Column } from \'@co-hooks/table/lib/Column\';\\nexport interface ILeafColumnManagerOptions<T, E> {\\n    minimalNonFixedWidth?: number;\\n    columns: Array<Column<T, E>>;\\n}\\ninterface ILeafColumnManagerEvent {\\n    size: [IColumnSizeInfo];\\n    scroll: [IColumnScrollInfo];\\n}\\nexport declare class LeafColumnManager<T, E> extends Emitter<ILeafColumnManagerEvent> {\\n    private width;\\n    private map;\\n    private fixedLeftColumns;\\n    private nonFixedColumns;\\n    private fixedRightColumns;\\n    private minimalNonFixedWidth;\\n    private nonFixedScroll;\\n    updateOptions(options: ILeafColumnManagerOptions<T, E>): void;\\n    getHeadDeep(): number;\\n    getColumnSizeInfo(): IColumnSizeInfo;\\n    getColumnScrollInfo(): IColumnScrollInfo;\\n    isFirstShowColumn(key: string): boolean;\\n    isLastShownColumn(key: string): boolean;\\n    updateTableWidth(width: number): void;\\n    getTableWidth(): number;\\n    getNonFixedScroll(): number;\\n    updateNonFixedScroll(scroll: number): void;\\n    getVisibleWidth(): number;\\n    getScrollerWidth(): number;\\n    getFixedLeftColumns(): string[];\\n    getNonFixedColumns(): string[];\\n    getFixedRightColumns(): string[];\\n    getShownColumns(): string[];\\n    getColumn(key: string): Column<T, E>;\\n    getFixedLeftWidth(): number;\\n    getNonFixedWidth(): number;\\n    getFixedRightWidth(): number;\\n    ignoreFixed(): boolean;\\n    ignoreFixedLeft(): boolean;\\n    ignoreFixedRight(): boolean;\\n    isFixedLeftCover(): boolean;\\n    isFixedRightCover(): boolean;\\n    private updateColumnSize;\\n    private updateColumns;\\n}\\nexport {}; \\n \\n } \\n declare module \\"@co-hooks/table/type\\" { \\n \\nimport { ColumnGroup } from \'@co-hooks/table/lib/ColumnGroup\';\\nexport declare type ColumnFixedType = \'left\' | \'right\' | false;\\nexport declare enum ColumnType {\\n    LEAF = 0,\\n    GROUP = 1\\n}\\nexport interface IColumnCommonOptions<T, E> {\\n    type: ColumnType;\\n    key: string;\\n    renderHead: () => E;\\n    show?: boolean;\\n    fixed?: ColumnFixedType;\\n}\\nexport interface IColumnLeafOptions<T, E> extends IColumnCommonOptions<T, E> {\\n    type: ColumnType.LEAF;\\n    width: number;\\n    widthFixed?: boolean;\\n    renderData: (row: T, expand: IRowExpandInfo, onExpand: (expanded: boolean) => void) => E;\\n    onRowChange?: () => void;\\n    className?: string;\\n}\\nexport interface IColumnGroupOptions<T, E> extends IColumnCommonOptions<T, E> {\\n    type: ColumnType.GROUP;\\n    children: Array<Omit<IColumnGroupOptions<T, E>, \'fixed\'> | Omit<IColumnLeafOptions<T, E>, \'fixed\'>>;\\n}\\nexport declare type IColumnOptions<T, E> = IColumnLeafOptions<T, E> | IColumnGroupOptions<T, E>;\\nexport interface IColumnInfo<T, E> {\\n    isTop: () => boolean;\\n    getKey: () => string;\\n    getFixedType: () => ColumnFixedType;\\n    isShow: () => boolean;\\n    isParentShow: () => boolean;\\n    isActualShow: () => boolean;\\n    isGroup: () => this is ColumnGroup<T, E>;\\n    getParent: () => ColumnGroup<T, E> | null;\\n    getLevel: () => number;\\n    getType: () => ColumnType;\\n    dispose: () => void;\\n    isDisposed: () => boolean;\\n}\\nexport interface ITableOptions<T, E, K extends keyof T> {\\n    rowKey: K;\\n    minimalNonFixedWidth: number;\\n    columns: Array<IColumnOptions<T, E>>;\\n}\\nexport interface IColumnSizeInfo {\\n    tableWidth: number;\\n    fixedLeftWidth: number;\\n    visibleWidth: number;\\n    scrollerWidth: number;\\n    fixedRightWidth: number;\\n    ignoreFixedLeft: boolean;\\n    ignoreFixedRight: boolean;\\n}\\nexport interface IColumnScrollInfo {\\n    isFixedLeftCover: boolean;\\n    isFixedRightCover: boolean;\\n    scroll: number;\\n}\\nexport interface IRowExpandInfo {\\n    isLeaf: boolean;\\n    level: number;\\n    expanded: boolean;\\n} \\n  \\n}","moduleName":"@co-hooks/table"},{"code":"\\n declare module \\"@rc-hooks/table\\" { \\n \\nexport { TableProvider } from \'@rc-hooks/table/context/table\';\\nexport * from \'@rc-hooks/table/hooks/useCreateTable\';\\nexport * from \'@rc-hooks/table/hooks/useTable\';\\nexport * from \'@rc-hooks/table/hooks/useHead\';\\nexport * from \'@rc-hooks/table/hooks/useCell\';\\nexport * from \'@rc-hooks/table/hooks/useIsGroup\';\\nexport * from \'@rc-hooks/table/hooks/useColumnGroup\';\\nexport * from \'@rc-hooks/table/hooks/useColumnScroll\';\\nexport * from \'@rc-hooks/table/hooks/useColumnCover\';\\nexport * from \'@rc-hooks/table/hooks/useColumnSize\';\\nexport * from \'@rc-hooks/table/hooks/useRow\';\\nexport * from \'@rc-hooks/table/hooks/useRowGroup\';\\nexport * from \'@rc-hooks/table/hooks/useScrollerBar\';\\nexport * from \'@co-hooks/table\'; \\n \\n } \\n declare module \\"@rc-hooks/table/context/table\\" { \\n \\nimport { Table } from \'@co-hooks/table\';\\nimport { ProviderProps } from \'react\';\\nexport declare const TableContext: import(\\"react\\").Context<unknown>;\\nexport declare const TableProvider: <T, E, K extends keyof T>(props: ProviderProps<Table<T, E, K>>) => JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useCreateTable\\" { \\n import { ITableOptions, Table } from \'@co-hooks/table\';\\nimport { RefObject } from \'react\';\\nexport declare function useCreateTable<T, E, K extends keyof T>(ref: RefObject<HTMLElement>, options: ITableOptions<T, E, K>): Table<T, E, K>; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useTable\\" { \\n import { Table } from \'@co-hooks/table\';\\nexport declare function useTable<T, E, K extends keyof T>(): Table<T, E, K>; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useHead\\" { \\n \\nexport interface ITableHeadInfo {\\n    deep: number;\\n    fixedLeftColumns: string[];\\n    nonFixedColumns: string[];\\n    fixedRightColumns: string[];\\n}\\nexport declare function useHead(): ITableHeadInfo; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useCell\\" { \\n \\nimport { IRowExpandInfo } from \'@co-hooks/table\';\\nexport interface ITableCellInfo<T, E> {\\n    renderHead: () => E;\\n    renderData: (row: T, expand: IRowExpandInfo, onExpand: (expanded: boolean) => void) => E;\\n    className: string;\\n    width: number;\\n    isFirstShownColumn: boolean;\\n    isLastShownColumn: boolean;\\n}\\nexport declare function useCell<T, E>(id: string): ITableCellInfo<T, E>; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useIsGroup\\" { \\n \\nexport declare function useIsGroup(id: string): boolean | null; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useColumnGroup\\" { \\n \\nimport { ReactNode } from \'react\';\\nexport interface IColumnGroup<E> {\\n    renderHead: () => ReactNode;\\n    columnKeys: string[];\\n    isFirstShownColumn: boolean;\\n    isLastShownColumn: boolean;\\n}\\nexport declare function useColumnGroup<E>(id: string): IColumnGroup<E>; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useColumnScroll\\" { \\n export declare function useColumnScroll(onUpdateScroll?: (scroll: number) => void): [number, (value: number, delta?: boolean) => void]; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useColumnCover\\" { \\n export declare function useColumnCover(position: \'left\' | \'right\'): boolean; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useColumnSize\\" { \\n \\nimport { IColumnSizeInfo } from \'@co-hooks/table\';\\nexport declare function useColumnSize(): IColumnSizeInfo; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useRow\\" { \\n \\nexport interface ITableRowInfo<T> {\\n    id: string;\\n    fixedLeftColumns: string[];\\n    nonFixedColumns: string[];\\n    fixedRightColumns: string[];\\n}\\nexport declare function useRow<T, K extends keyof T>(row: T): ITableRowInfo<T>; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useRowGroup\\" { \\n \\nimport { IRowGroupItem, IRowGroupOptions } from \'@rc-hooks/table\';\\nexport interface ITableRowGroupInfo<T, K extends keyof T> {\\n    rowKey: K;\\n    rows: Array<IRowGroupItem<T>>;\\n    onExpand: (id: string, expanded: boolean) => void;\\n}\\nexport interface ITableRowGroupOptions<T, K extends keyof T> extends IRowGroupOptions<T, K> {\\n    onExpandedRowChange?: (keys: Array<T[K]>) => void;\\n}\\nexport declare function useRowGroup<T, K extends keyof T>(options: ITableRowGroupOptions<T, K>): ITableRowGroupInfo<T, K>; \\n \\n } \\n declare module \\"@rc-hooks/table/hooks/useScrollerBar\\" { \\n export interface IScrollerBarInfo {\\n    scroll: number;\\n    width: number;\\n    scrollerWidth: number;\\n    onScrollChange: (value: number) => void;\\n}\\nexport declare function useScrollerBar(onScroll?: (value: number) => void): IScrollerBarInfo; \\n  \\n}","moduleName":"@rc-hooks/table"},{"code":"\\n declare module \\"@co-hooks/drag\\" { \\n \\nexport * from \'@co-hooks/drag/lib/Drag\'; \\n \\n } \\n declare module \\"@co-hooks/drag/lib/Drag\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nexport declare type IsBoolean = () => boolean;\\nexport interface IDrag<T> {\\n    draggable?: boolean | IsBoolean;\\n    trigger?: string;\\n    data?: T;\\n    dragLimit?: number;\\n}\\nexport interface IDragEvent<T> {\\n    shiftKey: boolean;\\n    ctrlKey: boolean;\\n    altKey: boolean;\\n    metaKey: boolean;\\n    startMousePos: IMousePos;\\n    latestMousePos: IMousePos;\\n    currentMousePos: IMousePos;\\n    target: HTMLElement;\\n    data?: T;\\n}\\nexport interface IMousePos {\\n    clientX: number;\\n    clientY: number;\\n    pageX: number;\\n    pageY: number;\\n}\\nexport declare function getDefaultMousePos(): IMousePos;\\nexport interface IDragEventType<T> {\\n    \'drag-prepare\': [IDragEvent<T>];\\n    \'drag-start\': [IDragEvent<T>];\\n    \'dragging\': [IDragEvent<T>];\\n    \'drag-end\': [IDragEvent<T>];\\n    \'click\': [IDragEvent<T>];\\n}\\nexport interface IDragInterface extends EventListenerObject {\\n    prepareDrag: (e: MouseEvent) => void;\\n    handleDragStart: (e: MouseEvent) => void;\\n    handleDragging: (e: MouseEvent) => void;\\n    handleDragEnd: (e: MouseEvent) => void;\\n    handleClick: (e: MouseEvent) => void;\\n}\\nexport declare class Drag<T = null> extends Emitter<IDragEventType<T>> implements IDragInterface {\\n    private elem;\\n    private draggable;\\n    private dragLimit;\\n    private trigger;\\n    private data?;\\n    private firstFlag;\\n    private startMousePos;\\n    private latestMousePos;\\n    constructor();\\n    dispose(): void;\\n    init(ele: HTMLElement): void;\\n    updateOptions(options: IDrag<T>): void;\\n    getElem(): HTMLElement | null;\\n    handleEvent(e: MouseEvent): void;\\n    prepareDrag(e: MouseEvent): void;\\n    handleDragStart(e: MouseEvent): void;\\n    handleDragging(e: MouseEvent): void;\\n    handleDragEnd(e: MouseEvent): void;\\n    handleClick(e: MouseEvent): void;\\n    private bindEvent;\\n    private unbindEvent;\\n    private getDragElem;\\n} \\n  \\n}","moduleName":"@co-hooks/drag"},{"code":"\\n declare module \\"@co-hooks/schedule\\" { \\n \\nexport * from \'@co-hooks/schedule/lib/Schedule\';\\nexport * from \'@co-hooks/schedule/lib/SchedulePanel\';\\nexport * from \'@co-hooks/schedule/lib/ScheduleMask\'; \\n \\n } \\n declare module \\"@co-hooks/schedule/lib/Schedule\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { ScheduleSelectType } from \'@co-hooks/schedule/lib/SchedulePanel\';\\nexport interface IScheduleValue {\\n    label: string;\\n    value: number[];\\n}\\nexport interface IScheduleDisplayInfo {\\n    label: string;\\n    value: string[];\\n}\\nexport interface IRcScheduleBaseOptions {\\n    datasource: string[];\\n    divider?: number;\\n    interrupted?: boolean;\\n    inverseSelect?: boolean;\\n    disabled?: boolean;\\n    isTimeDisabled?: (label: string, index: number) => boolean;\\n}\\nexport interface IScheduleEvent {\\n    \'value-change\': [IScheduleValue[]];\\n    \'datasource-update\': [];\\n    \'repaint-panel\': [];\\n}\\nexport declare class Schedule extends Emitter<IScheduleEvent> {\\n    private value;\\n    private datasource;\\n    private divider;\\n    private interrupted;\\n    private inverseSelect;\\n    private disabled;\\n    private valueHash;\\n    updateValue(value: IScheduleValue[]): void;\\n    updateOptions(options: IRcScheduleBaseOptions): void;\\n    getDatasource(): string[];\\n    getDivider(): number;\\n    getInterrupted(): boolean;\\n    getDisabled(): boolean;\\n    getItemSelectType(label: string, index: number): ScheduleSelectType;\\n    isTimeDisabled(lable: string, index: number): boolean;\\n    setValue(addVal: IScheduleValue[]): void;\\n    clearValue(): void;\\n    getDisplayInfo(): IScheduleDisplayInfo[];\\n    private splitValue;\\n    private calcInterrupted;\\n    private calcUninterrupted;\\n} \\n \\n } \\n declare module \\"@co-hooks/schedule/lib/SchedulePanel\\" { \\n import { Schedule } from \'@co-hooks/schedule/lib/Schedule\';\\nexport declare enum ScheduleSelectType {\\n    NONE = \\"none\\",\\n    SELECTED = \\"selected\\"\\n}\\nexport interface IScheduleItem {\\n    label: string;\\n    value: number;\\n    formatValue: string;\\n    selectType: ScheduleSelectType;\\n    disabled: boolean;\\n}\\nexport interface IScheduleList {\\n    label: string;\\n    items: IScheduleItem[];\\n}\\nexport declare class SchedulePanel {\\n    private readonly root;\\n    constructor(root: Schedule);\\n    getScheduleList(): IScheduleList[];\\n    private getFormatValue;\\n}\\nexport declare function formatTime(time: number): string; \\n \\n } \\n declare module \\"@co-hooks/schedule/lib/ScheduleMask\\" { \\n \\nimport { IElementPosition, IElementSize } from \'@co-hooks/dom\';\\nimport { IMousePos } from \'@co-hooks/drag\';\\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { Schedule } from \'@co-hooks/schedule/lib/Schedule\';\\nexport interface IScheduleMaskEvent {\\n    repaint: [];\\n}\\nexport interface IScheduleMaskRelativeRect {\\n    top: number;\\n    left: number;\\n    right: number;\\n    bottom: number;\\n}\\nexport declare class ScheduleMask extends Emitter<IScheduleMaskEvent> {\\n    private readonly root;\\n    private boxRect;\\n    private startPos;\\n    private endPos;\\n    private colSize;\\n    private dragging;\\n    private maskRelativeRect;\\n    constructor(root: Schedule);\\n    updateBoxRect(rect: IElementPosition): void;\\n    updateColSize(): void;\\n    getColSize(): IElementSize;\\n    updateStartPos(pos: IMousePos): void;\\n    updateEndPos(pos: IMousePos): void;\\n    stopDrag(endPos: IMousePos): void;\\n    getDragging(): boolean;\\n    getMaskRelativeRect(): IScheduleMaskRelativeRect | null;\\n    private calcMaskRect;\\n    private calcRegionRect;\\n    private calcRegionValue;\\n} \\n  \\n}","moduleName":"@co-hooks/schedule"},{"code":"\\n declare module \\"@rc-hooks/schedule\\" { \\n \\nexport * from \'@rc-hooks/schedule/components/RcScheduleProvider\';\\nexport * from \'@rc-hooks/schedule/hooks/useSchedule\';\\nexport * from \'@rc-hooks/schedule/hooks/useCreateSchedule\';\\nexport * from \'@rc-hooks/schedule/hooks/useSchedulePanel\';\\nexport * from \'@rc-hooks/schedule/hooks/useScheduleMask\';\\nexport * from \'@co-hooks/schedule\'; \\n \\n } \\n declare module \\"@rc-hooks/schedule/components/RcScheduleProvider\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { Schedule } from \'@co-hooks/schedule\';\\nexport interface IRcScheduleProviderProps {\\n    schedule: Schedule;\\n    children: ReactNode;\\n}\\nexport declare function RcScheduleProvider(props: IRcScheduleProviderProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/schedule/hooks/useSchedule\\" { \\n \\nimport { Schedule } from \'@co-hooks/schedule\';\\nexport declare function useSchedule(): Schedule; \\n \\n } \\n declare module \\"@rc-hooks/schedule/hooks/useCreateSchedule\\" { \\n import { IRcScheduleBaseOptions, IScheduleValue, Schedule } from \'@co-hooks/schedule\';\\nexport interface IRcScheduleOptions extends IRcScheduleBaseOptions {\\n    onValueChange?: (value: IScheduleValue[]) => void;\\n    value?: IScheduleValue[];\\n}\\nexport interface IUseCreateScheduleResult {\\n    schedule: Schedule;\\n}\\nexport declare function useCreateSchedule(options: IRcScheduleOptions): IUseCreateScheduleResult; \\n \\n } \\n declare module \\"@rc-hooks/schedule/hooks/useSchedulePanel\\" { \\n import { IScheduleDisplayInfo, IScheduleList, IScheduleValue } from \'@co-hooks/schedule\';\\nexport interface IUseSchedulePanelResult {\\n    divider: number;\\n    datasource: string[];\\n    scheduleList: IScheduleList[];\\n    displayInfo: IScheduleDisplayInfo[];\\n    onClearAll: () => void;\\n    onSetValue: (value: IScheduleValue[]) => void;\\n}\\nexport declare function useSchedulePanel(): IUseSchedulePanelResult; \\n \\n } \\n declare module \\"@rc-hooks/schedule/hooks/useScheduleMask\\" { \\n import { RefObject } from \'react\';\\nimport { IScheduleMaskRelativeRect } from \'@co-hooks/schedule\';\\nexport interface IUseScheduleMaskResult {\\n    maskRelativeRect: IScheduleMaskRelativeRect | null;\\n    dragging: boolean;\\n}\\nexport declare function useScheduleMask(elem: HTMLElement | RefObject<HTMLElement> | null, name: string, draggable: boolean): IUseScheduleMaskResult; \\n  \\n}","moduleName":"@rc-hooks/schedule"},{"code":"\\n declare module \\"@co-hooks/anchor\\" { \\n \\nexport * from \'@co-hooks/anchor/lib/Anchor\';\\nexport * from \'@co-hooks/anchor/lib/AnchorItem\'; \\n \\n } \\n declare module \\"@co-hooks/anchor/lib/Anchor\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { AnchorItem } from \'@co-hooks/anchor/lib/AnchorItem\';\\nexport interface IAnchorEvent {\\n    \'active-item\': [string];\\n}\\nexport interface IAnchorOptions {\\n    getContainer?: () => HTMLElement;\\n    duration?: number;\\n    targetOffset?: number;\\n    activeDot?: boolean;\\n    hashLink?: boolean;\\n}\\nexport declare class Anchor extends Emitter<IAnchorEvent> {\\n    private readonly itemMap;\\n    private scrolling;\\n    private duration;\\n    private targetOffset;\\n    private activeId;\\n    private activeDot;\\n    private hashLink;\\n    updateOptions(options: IAnchorOptions): void;\\n    getContainer(): HTMLElement;\\n    getTargetOffset(): number;\\n    setScrolling(scrolling: boolean): void;\\n    getActiveDot(): boolean;\\n    getScrolling(): boolean;\\n    getActiveId(): string;\\n    getHashLink(): boolean;\\n    updateAllItemOffsetTop(excludeId?: string): void;\\n    updateScrollTop(): void;\\n    registerAnchorItem(item: AnchorItem): void;\\n    unregisterAnchorItem(item: AnchorItem): void;\\n} \\n \\n } \\n declare module \\"@co-hooks/anchor/lib/AnchorItem\\" { \\n import { Anchor } from \'@co-hooks/anchor/lib/Anchor\';\\nexport interface IAnchorItemOptions {\\n    href?: string;\\n}\\nexport declare class AnchorItem {\\n    private readonly root;\\n    private readonly parent;\\n    private readonly id;\\n    private offsetTop;\\n    private href;\\n    constructor(root: Anchor, parent: AnchorItem | null, id?: string);\\n    updateOptions(options: IAnchorItemOptions): void;\\n    updateOffsetTop(isSilent?: boolean): boolean;\\n    getOffsetTop(): number;\\n    getId(): string;\\n    getLevel(): number;\\n    dispose(): void;\\n    private init;\\n} \\n  \\n}","moduleName":"@co-hooks/anchor"},{"code":"\\n declare module \\"@rc-hooks/dom\\" { \\n \\nexport * from \'@rc-hooks/dom/hooks/useDocumentClick\';\\nexport * from \'@rc-hooks/dom/hooks/useElementSize\';\\nexport * from \'@rc-hooks/dom/hooks/useElementPosition\';\\nexport * from \'@rc-hooks/dom/hooks/useScroll\';\\nexport * from \'@rc-hooks/dom/hooks/useScrollTo\';\\nexport * from \'@rc-hooks/dom/hooks/useContainerScroll\';\\nexport * from \'@rc-hooks/dom/hooks/useWindowSize\';\\nexport * from \'@rc-hooks/dom/hooks/useZIndex\';\\nexport * from \'@rc-hooks/dom/hooks/useContainer\';\\nexport * from \'@rc-hooks/dom/hooks/useLockScreen\';\\nexport * from \'@rc-hooks/dom/hooks/useElementResponsive\';\\nexport * from \'@rc-hooks/dom/hooks/useWindowResponsive\';\\nexport * from \'@co-hooks/dom\'; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useDocumentClick\\" { \\n \\nexport declare type DocClickHandler = (e: MouseEvent) => void;\\nexport declare function useDocumentClick(enable: () => boolean, onClick: DocClickHandler): void; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useElementSize\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { IElementSize } from \'@co-hooks/dom\';\\nimport { ResizeHandler } from \'@rc-hooks/dom/hooks/useWindowSize\';\\nexport declare function useElementSize(element: HTMLElement | null | RefObject<HTMLElement>, enable: () => boolean, onResize: ResizeHandler): IElementSize; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useElementPosition\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { IElementPosition, IElementPositionCaptureOptions } from \'@co-hooks/dom\';\\nexport declare type PositionChangeHandler = (position: IElementPosition) => void;\\nexport declare function useElementPosition(element: HTMLElement | null | RefObject<HTMLElement>, enable: () => boolean, onChange: PositionChangeHandler, options: IElementPositionCaptureOptions): IElementPosition; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useScroll\\" { \\n \\nexport declare type ScrollHandler = (e: Event) => void;\\nexport declare function useScroll(enable: () => boolean, onScroll: VoidFunction): void; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useScrollTo\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { AnimateType } from \'@co-hooks/util\';\\nexport declare type ScrollDirection = \'left\' | \'top\';\\nexport interface IUseScrollToResult {\\n    startScroll: () => void;\\n    stopScroll: () => void;\\n}\\nexport interface IUseScrollToOptions {\\n    start?: () => void;\\n    end?: () => void;\\n    animateType?: AnimateType;\\n}\\nexport declare function useScrollTo(container: RefObject<HTMLElement> | HTMLElement | null, direction: ScrollDirection, targetPosition: number | (() => number), duration: number | (() => number), enable: () => boolean, options?: IUseScrollToOptions): IUseScrollToResult; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useContainerScroll\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { ScrollHandler } from \'@rc-hooks/dom/hooks/useScroll\';\\nexport declare function useContainerScroll(element: HTMLElement | null | RefObject<HTMLElement>, enable: () => boolean, onScroll: ScrollHandler): void; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useWindowSize\\" { \\n \\nimport { IElementSize } from \'@co-hooks/dom\';\\nexport declare type ResizeHandler = (size: IElementSize, oldSize: IElementSize) => void;\\nexport declare function useWindowSize(enable: () => boolean, onResize: ResizeHandler): IElementSize; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useZIndex\\" { \\n \\nexport declare function useZIndex(): number; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useContainer\\" { \\n \\nimport { RefObject } from \'react\';\\nexport declare type UseContainerResult = () => HTMLElement | null;\\nexport declare function useContainer(elem: RefObject<HTMLElement> | HTMLElement | null): UseContainerResult; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useLockScreen\\" { \\n export interface IUseLockScreenResult {\\n    lockScreen: () => void;\\n    unlockScreen: () => void;\\n}\\nexport declare function useLockScreen(): IUseLockScreenResult; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useElementResponsive\\" { \\n import { RefObject } from \'react\';\\nexport interface IResponsiveBreakpoint {\\n    name: string;\\n    point: number;\\n}\\nexport interface IResponsiveBreakpointInfo extends IResponsiveBreakpoint {\\n    reverse: boolean;\\n    width: number;\\n    lastWidth: number;\\n}\\nexport declare type ResponsiveHandler = (info: IResponsiveBreakpointInfo) => void;\\nexport declare function useElementResponsive(element: HTMLElement | null | RefObject<HTMLElement>, enable: () => boolean, breakpoints: IResponsiveBreakpoint[], onBreakpointChange?: ResponsiveHandler, range?: boolean): void;\\nexport declare function matchBreakpointRange(bkList: IResponsiveBreakpoint[], width: number): IResponsiveBreakpoint;\\nexport declare function matchBreakpoints(bkList: IResponsiveBreakpoint[], width: number, lastWidth: number): IResponsiveBreakpointInfo | null; \\n \\n } \\n declare module \\"@rc-hooks/dom/hooks/useWindowResponsive\\" { \\n \\nimport { IResponsiveBreakpoint, ResponsiveHandler } from \'@rc-hooks/dom/hooks/useElementResponsive\';\\nexport declare function useWindowResponsive(enable: () => boolean, breakpoints: IResponsiveBreakpoint[], onBreakpointChange?: ResponsiveHandler, range?: boolean): void; \\n  \\n}","moduleName":"@rc-hooks/dom"},{"code":"\\n declare module \\"@rc-hooks/anchor\\" { \\n \\nexport * from \'@rc-hooks/anchor/components/RcAnchorProvider\';\\nexport * from \'@rc-hooks/anchor/components/RcAnchorItemProvider\';\\nexport * from \'@rc-hooks/anchor/hooks/useAnchor\';\\nexport * from \'@rc-hooks/anchor/hooks/useAnchorItem\';\\nexport * from \'@rc-hooks/anchor/hooks/useParentAnchorItem\';\\nexport * from \'@rc-hooks/anchor/hooks/useCreateAnchor\';\\nexport * from \'@co-hooks/anchor\'; \\n \\n } \\n declare module \\"@rc-hooks/anchor/components/RcAnchorProvider\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { Anchor } from \'@co-hooks/anchor\';\\nexport interface IRcAnchor {\\n    anchor: Anchor;\\n    children: ReactNode;\\n}\\nexport declare function RcAnchorProvider(props: IRcAnchor): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/anchor/components/RcAnchorItemProvider\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { AnchorItem } from \'@co-hooks/anchor\';\\nexport interface IRcAnchorItem {\\n    anchorItem: AnchorItem;\\n    children: ReactNode;\\n}\\nexport declare function RcAnchorItemProvider(props: IRcAnchorItem): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/anchor/hooks/useAnchor\\" { \\n import { Anchor } from \'@co-hooks/anchor\';\\nexport declare function useAnchor(): Anchor; \\n \\n } \\n declare module \\"@rc-hooks/anchor/hooks/useAnchorItem\\" { \\n import { IUseScrollToResult } from \'@rc-hooks/dom\';\\nimport { AnchorItem } from \'@co-hooks/anchor\';\\nexport interface IUseAnchorItemResult extends IUseScrollToResult {\\n    anchorItem: AnchorItem;\\n    level: number;\\n    isActive: boolean;\\n    activeDot: boolean;\\n    hashLink: boolean;\\n}\\nexport declare function useAnchorItem(href: string, id?: string): IUseAnchorItemResult; \\n \\n } \\n declare module \\"@rc-hooks/anchor/hooks/useParentAnchorItem\\" { \\n import { AnchorItem } from \'@co-hooks/anchor\';\\nexport declare function useParentAnchorItem(): AnchorItem | null; \\n \\n } \\n declare module \\"@rc-hooks/anchor/hooks/useCreateAnchor\\" { \\n import { Anchor, IAnchorOptions } from \'@co-hooks/anchor\';\\nexport declare function useCreateAnchor(options: IAnchorOptions): Anchor; \\n  \\n}","moduleName":"@rc-hooks/anchor"},{"code":"\\n declare module \\"@co-hooks/tree-map\\" { \\n \\nexport * from \'@co-hooks/tree-map/lib/TreeMapData\';\\nexport * from \'@co-hooks/tree-map/lib/TreeMapValue\'; \\n \\n } \\n declare module \\"@co-hooks/tree-map/lib/TreeMapData\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nexport interface ITreeMapData<D> {\\n    type?: string;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    needLoad?: boolean;\\n    selectable?: boolean;\\n    showAll?: boolean;\\n    spread?: boolean;\\n    children?: D[];\\n}\\nexport interface ITreeMapHashItem<T, D> {\\n    id: string;\\n    parentId: string | null;\\n    isLeaf: boolean;\\n    needLoad: boolean;\\n    loading: boolean;\\n    selectable: boolean;\\n    readonly: boolean;\\n    disabled: boolean;\\n    showAll: boolean;\\n    level: number;\\n    type: string;\\n    value: T;\\n    values: T[];\\n    label: string;\\n    search: string;\\n    nodePath: string[];\\n    children: Array<ITreeMapHashItem<T, D>>;\\n    item: D;\\n}\\nexport declare type GetValueFromDataFunc<D, T> = (datasource: D) => T;\\nexport declare type GetLabelFromData<D> = (datasource: D) => string;\\nexport interface ITreeMapDataOptions<T, D extends ITreeMapData<D>> {\\n    datasource: D[];\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    showAll?: boolean;\\n    multiple?: boolean;\\n    spread?: boolean;\\n    association?: boolean;\\n}\\nexport interface ITreeMapDataEvent {\\n    \'reset\': [];\\n    \'need-update-value\': [];\\n}\\nexport declare enum NOT_OPTION {\\n    ROOT = \\"root\\",\\n    UNKNOWN = \\"unknown\\"\\n}\\nexport declare class TreeMapData<T, D extends ITreeMapData<D>> extends Emitter<ITreeMapDataEvent> {\\n    multiple: boolean;\\n    disabled: boolean;\\n    readonly: boolean;\\n    showAll: boolean;\\n    spread: boolean;\\n    association: boolean;\\n    protected hashMap: {\\n        [key: string]: ITreeMapHashItem<T, D>;\\n    };\\n    protected renderList: Array<ITreeMapHashItem<T, D>>;\\n    protected root: string;\\n    protected datasource: D[];\\n    private idMap;\\n    private readonly getValueFromData;\\n    private readonly getLabelFromData;\\n    constructor(getValueFromData: GetValueFromDataFunc<D, T>, getLabelFromData: GetLabelFromData<D>);\\n    \\n    dispose(): void;\\n    \\n    getRootId(): string;\\n    \\n    getItemInfo(id: string): ITreeMapHashItem<T, D>;\\n    getHashMap(): {\\n        [key: string]: ITreeMapHashItem<T, D>;\\n    };\\n    getDescendants(ancestorId: string): string[];\\n    \\n    updateTreeMapDataOptions(options: ITreeMapDataOptions<T, D>): [boolean, boolean];\\n    createDataHashMap(data: D, parentId?: string | null, level?: number): ITreeMapHashItem<T, D>;\\n    \\n    getIdByValue(value: T): string;\\n    \\n    getIdsByValues(values: T[]): string[];\\n    getRenderList(): Array<ITreeMapHashItem<T, D>>;\\n    private needUpdate;\\n} \\n \\n } \\n declare module \\"@co-hooks/tree-map/lib/TreeMapValue\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { ITreeMapHashItem, TreeMapData } from \'@co-hooks/tree-map/lib/TreeMapData\';\\nexport declare enum TreeMapState {\\n    UNSELECTED = 0,\\n    PARTIAL = 1,\\n    SELECTED = 2\\n}\\nexport interface ITreeMapValueEvent<T> {\\n    \'value-change\': [T[]];\\n    \'value-unvalid\': [T[]];\\n}\\nexport interface ITreeMapValueOptions<T> {\\n    value: T[];\\n    particalCheck?: boolean;\\n}\\nexport declare class TreeMapValue<T, D> extends Emitter<ITreeMapValueEvent<T>> {\\n    private readonly core;\\n    private value;\\n    private particalCheck;\\n    private stateMap;\\n    constructor(core: TreeMapData<T, D>);\\n    updateTreeMapValueOptions(options: ITreeMapValueOptions<T>, forceUpdate?: boolean): boolean;\\n    \\n    resetValue(): void;\\n    \\n    resetValueToSelected(): void;\\n    \\n    setItemState(id: string, newState?: TreeMapState, force?: boolean): boolean;\\n    getValue(): T[];\\n    getItemState(id: string): TreeMapState;\\n    getIdFromSelected(): string[];\\n    getSortedIdFromSelected(): string[];\\n    addLoadingItemState(items: Array<ITreeMapHashItem<T, D>>): void;\\n    private updateSelectedState;\\n    private emitValueChange;\\n    private getValueFromSelected;\\n    private setValueToSelected;\\n    private resetHashState;\\n    \\n    private setHashState;\\n} \\n  \\n}","moduleName":"@co-hooks/tree-map"},{"code":"\\n declare module \\"@co-hooks/cascader\\" { \\n \\nexport * from \'@co-hooks/cascader/lib/Cascader\'; \\n \\n } \\n declare module \\"@co-hooks/cascader/lib/Cascader\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { ITreeMapData, ITreeMapDataOptions, ITreeMapHashItem, TreeMapState } from \'@co-hooks/tree-map\';\\nexport declare type renderColumnTitles<T> = (info: ITreeMapHashItem<T, ICascaderData<T>>) => string | null;\\nexport declare type IColumnTitles<T> = string[] | renderColumnTitles<T>;\\nexport declare type ICascaderLoad<T> = (item: ITreeMapHashItem<T, ICascaderData<T>>) => Promise<ICascaderData<T>[]>;\\nexport declare type ICascaderSearch<T> = (query: string, data: ITreeMapHashItem<T, ICascaderData<T>>) => boolean;\\nexport interface IGroupDisplayInfoItem<T> {\\n    list: Array<ITreeMapHashItem<T, ICascaderData<T>>>;\\n    level: number;\\n}\\nexport interface ICascaderData<T> extends ITreeMapData<ICascaderData<T>> {\\n    label: string;\\n    value: T;\\n}\\nexport interface ICascaderHashItem<T> extends ITreeMapHashItem<T, ICascaderData<T>> {\\n    state: TreeMapState;\\n}\\nexport interface ICascaderOptions<T> extends ITreeMapDataOptions<T, ICascaderData<T>> {\\n    columnTitles?: IColumnTitles<T>;\\n    load?: ICascaderLoad<T>;\\n    search?: ICascaderSearch<T>;\\n    value: T[];\\n    particalCheck?: boolean;\\n    columnWidth?: number;\\n    onChange?: (value: T[], info: Array<ITreeMapHashItem<T, ICascaderData<T>>>) => void;\\n}\\nexport interface ICascaderEvent<T> {\\n    \'reset\': [];\\n    \'data-loading\': [string];\\n    \'value-change\': [];\\n    \'change\': [T[], Array<ITreeMapHashItem<T, ICascaderData<T>>>];\\n    \'active-change\': [];\\n    \'query-change\': [string[]];\\n    \'active-id-change\': [string];\\n}\\nexport declare class Cascader<T> extends Emitter<ICascaderEvent<T>> {\\n    columnWidth: number;\\n    query: string;\\n    private activeId;\\n    private queries;\\n    private columnTitles;\\n    private readonly treeMapData;\\n    private readonly treeMapValue;\\n    constructor();\\n    \\n    updateCascader(options: ICascaderOptions<T>): void;\\n    get multiple(): boolean;\\n    \\n    setActiveId(id: string): void;\\n    \\n    setItemState(id: string, newState?: TreeMapState): void;\\n    getItemState(id: string): TreeMapState;\\n    \\n    getAvticeId(): string;\\n    \\n    getActiveIds(): string[];\\n    getRootId(): string;\\n    \\n    getDisplayInfo(): Array<ITreeMapHashItem<T, ICascaderData<T>>>;\\n    \\n    getGroupDisplayInfo(): Array<IGroupDisplayInfoItem<T>>;\\n    getColumnTitle(idx: number, parentId: string): string | null;\\n    \\n    setQuery(query: string): void;\\n    \\n    getQueries(): string[];\\n    resetValue(): void;\\n    getItemInfo(id: string): ICascaderHashItem<T>;\\n    dispose(): void;\\n    private load;\\n    private search;\\n    private getValueFromData;\\n    private getLabelFromData;\\n    private init;\\n    private valueChange;\\n    private setActiveIdBySetValue;\\n} \\n  \\n}","moduleName":"@co-hooks/cascader"},{"code":"\\n declare module \\"@rc-hooks/cascader\\" { \\n \\nexport * from \'@rc-hooks/cascader/components/RcCascaderProvider\';\\nexport * from \'@rc-hooks/cascader/hooks/useCascader\';\\nexport * from \'@rc-hooks/cascader/hooks/useCascaderItem\';\\nexport * from \'@rc-hooks/cascader/hooks/useCascaderRoot\';\\nexport * from \'@rc-hooks/cascader/hooks/useCascaderActive\';\\nexport * from \'@rc-hooks/cascader/hooks/useCascaderSearch\';\\nexport * from \'@rc-hooks/cascader/hooks/useCascaderDatasource\';\\nexport * from \'@rc-hooks/cascader/hooks/useMultipleCascaderDatasource\';\\nexport * from \'@rc-hooks/cascader/hooks/useCreateCascader\';\\nexport * from \'@co-hooks/cascader\';\\nexport * from \'@co-hooks/tree-map\'; \\n \\n } \\n declare module \\"@rc-hooks/cascader/components/RcCascaderProvider\\" { \\n \\nimport React from \'react\';\\nimport { Cascader } from \'@co-hooks/cascader\';\\nexport interface IRcCascaderProviderProps<T> {\\n    cascader: Cascader<T>;\\n    children?: React.ReactNode;\\n}\\nexport declare function RcCascaderProvider<T>(props: IRcCascaderProviderProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/cascader/hooks/useCascader\\" { \\n \\nimport { Cascader } from \'@co-hooks/cascader\';\\nexport declare function useCascader<T>(): Cascader<T>; \\n \\n } \\n declare module \\"@rc-hooks/cascader/hooks/useCascaderItem\\" { \\n import { ICascaderHashItem } from \'@co-hooks/cascader\';\\nexport declare function useCascaderItem<T>(id: string): ICascaderHashItem<T>; \\n \\n } \\n declare module \\"@rc-hooks/cascader/hooks/useCascaderRoot\\" { \\n \\nimport { ITreeMapHashItem } from \'@co-hooks/tree-map\';\\nimport { ICascaderData } from \'@co-hooks/cascader\';\\nexport declare function useCascaderRoot<T>(): ITreeMapHashItem<T, ICascaderData<T>>; \\n \\n } \\n declare module \\"@rc-hooks/cascader/hooks/useCascaderActive\\" { \\n \\nexport declare function useCascaderActive(): string[]; \\n \\n } \\n declare module \\"@rc-hooks/cascader/hooks/useCascaderSearch\\" { \\n \\nexport declare function useCascaderSearch(): [string, string[], (newQuery: string) => void]; \\n \\n } \\n declare module \\"@rc-hooks/cascader/hooks/useCascaderDatasource\\" { \\n import { ICascaderData } from \'@co-hooks/cascader\';\\nexport interface IDatasourceHashMap<T> {\\n    [key: string]: T[];\\n}\\nexport interface IUseCascaderDatasourceResult<T, D extends ICascaderData<string>> {\\n    value?: string;\\n    datasource: D[];\\n    onChange: (value?: string) => void;\\n}\\nexport declare function useCascaderDatasource<T, D extends ICascaderData<T>>(value: T[], datasource: D[], onChange: (value: T[]) => void): IUseCascaderDatasourceResult<T, ICascaderData<string>>;\\nexport declare function createDatasource<T, D extends ICascaderData<T>>(datasource: D[], rootValue: T[] | undefined, hashMap: IDatasourceHashMap<T>): Array<ICascaderData<string>>; \\n \\n } \\n declare module \\"@rc-hooks/cascader/hooks/useMultipleCascaderDatasource\\" { \\n import { ICascaderData } from \'@co-hooks/cascader\';\\nexport interface IUseMultipleCascaderDatasourceResult<T, D extends ICascaderData<string>> {\\n    value: string[];\\n    datasource: D[];\\n    onChange: (value: string[]) => void;\\n}\\nexport declare function useMultipleCascaderDatasource<T, D extends ICascaderData<T>>(value: T[][], datasource: D[], onChange: (value: T[][]) => void): IUseMultipleCascaderDatasourceResult<T, ICascaderData<string>>; \\n \\n } \\n declare module \\"@rc-hooks/cascader/hooks/useCreateCascader\\" { \\n \\nimport { Cascader, ICascaderOptions } from \'@co-hooks/cascader\';\\nexport interface IUseCascaderUniqueResult<T> {\\n    cascader: Cascader<T>;\\n}\\nexport declare function useCreateCascader<T>(options: ICascaderOptions<T>): IUseCascaderUniqueResult<T>; \\n  \\n}","moduleName":"@rc-hooks/cascader"},{"code":"\\n declare module \\"@co-hooks/collapse\\" { \\n \\nexport * from \'@co-hooks/collapse/lib/Collapse\';\\nexport * from \'@co-hooks/collapse/lib/SubCollapse\'; \\n \\n } \\n declare module \\"@co-hooks/collapse/lib/Collapse\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { SubCollapse } from \'@co-hooks/collapse/lib/SubCollapse\';\\nexport interface IRcCollapse {\\n    accordion?: boolean;\\n    openIds?: string[];\\n}\\nexport declare type IRcCollapseOptions = IRcCollapse;\\nexport interface ICollapseEvent {\\n    \'open-ids-change\': [string[]];\\n}\\nexport declare class Collapse extends Emitter<ICollapseEvent> {\\n    openIds: string[];\\n    private accordion;\\n    private subCollapseMap;\\n    private originOpenIds;\\n    private init;\\n    \\n    updateCollapse(options: IRcCollapse): void;\\n    getAccordion(): boolean;\\n    isOpened(id: string): boolean;\\n    setOpen(insId: string, id: string, open?: boolean): void;\\n    setOpenById(id: string, open: boolean): void;\\n    setOpenIds(ids: string[]): void;\\n    resetOpenIds(): void;\\n    emitOpenIdsChange(): void;\\n    registerSubCollapse(subCollapse: SubCollapse): void;\\n    unregisterSubCollapse(subCollapse: SubCollapse): void;\\n    dispose(): void;\\n} \\n \\n } \\n declare module \\"@co-hooks/collapse/lib/SubCollapse\\" { \\n \\nimport { Collapse } from \\"@co-hooks/collapse/lib/Collapse\\";\\nexport interface IRcSubCollapse {\\n    id: string;\\n}\\nexport declare class SubCollapse {\\n    private readonly parent;\\n    private rootCollapse;\\n    private readonly insId;\\n    private id;\\n    private subCollapseMap;\\n    private isDispose;\\n    constructor(root: Collapse, parent?: SubCollapse | null, insId?: string);\\n    updateSubCollapseOption(options: IRcSubCollapse): void;\\n    updateOpened(open: boolean): void;\\n    setOpened(open: boolean): void;\\n    updateParentOpenedState(open: boolean): void;\\n    updateChildOpenedState(open: boolean): void;\\n    updateOpenedState(open: boolean): void;\\n    isSubCollapse(): boolean;\\n    isOpened(): boolean;\\n    getInsId(): string;\\n    getId(): string;\\n    getInsIdsPath(): string[];\\n    registerSubCollapse(subCollapse: SubCollapse): void;\\n    unregisterSubCollapse(subCollapse: SubCollapse): void;\\n    dispose(): void;\\n    private doSetOpened;\\n} \\n  \\n}","moduleName":"@co-hooks/collapse"},{"code":"\\n declare module \\"@rc-hooks/collapse\\" { \\n \\nexport * from \'@rc-hooks/collapse/hooks/useCollapse\';\\nexport * from \'@rc-hooks/collapse/hooks/useSubCollapse\';\\nexport * from \'@rc-hooks/collapse/hooks/useCreateSubCollapse\';\\nexport * from \'@rc-hooks/collapse/components/RcCollapse\';\\nexport * from \'@rc-hooks/collapse/components/RcSubCollapseProvider\';\\nexport * from \'@co-hooks/collapse\'; \\n \\n } \\n declare module \\"@rc-hooks/collapse/hooks/useCollapse\\" { \\n \\nimport { Collapse } from \'@co-hooks/collapse\';\\nexport declare function useCollapse(): Collapse; \\n \\n } \\n declare module \\"@rc-hooks/collapse/hooks/useSubCollapse\\" { \\n \\nimport { SubCollapse } from \'@co-hooks/collapse\';\\nexport declare function useSubCollapse(): SubCollapse | null; \\n \\n } \\n declare module \\"@rc-hooks/collapse/hooks/useCreateSubCollapse\\" { \\n \\nimport { IRcSubCollapse, SubCollapse } from \'@co-hooks/collapse\';\\nexport interface IUseCreateSubCollapseResult {\\n    subCollapse: SubCollapse;\\n    isOpen: boolean;\\n    setOpened: (open: boolean) => void;\\n}\\nexport declare function useCreateSubCollapse(options: IRcSubCollapse, id?: string): IUseCreateSubCollapseResult; \\n \\n } \\n declare module \\"@rc-hooks/collapse/components/RcCollapse\\" { \\n \\nimport React from \'react\';\\nimport { IRcCollapseOptions } from \'@co-hooks/collapse\';\\nexport declare type IRcCollapseProps = IRcCollapseOptions & {\\n    onOpenIdsChange?: (ids: string[]) => void;\\n    children?: React.ReactNode;\\n};\\nexport declare function RcCollapse(props: IRcCollapseProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/collapse/components/RcSubCollapseProvider\\" { \\n \\nimport { SubCollapse } from \'@co-hooks/collapse\';\\nimport { ReactNode } from \'react\';\\nexport interface IRcSubCollapseProviderProps {\\n    subCollapse: SubCollapse;\\n    children: ReactNode;\\n}\\nexport declare function RcSubCollapseProvider(props: IRcSubCollapseProviderProps): JSX.Element; \\n  \\n}","moduleName":"@rc-hooks/collapse"},{"code":"\\n declare module \\"@co-hooks/validate\\" { \\n \\nimport { func } from \'@co-hooks/validate/rules/func\';\\nimport { min } from \'@co-hooks/validate/rules/min\';\\nimport { max } from \'@co-hooks/validate/rules/max\';\\nimport { maxCount } from \'@co-hooks/validate/rules/maxCount\';\\nimport { maxLength } from \'@co-hooks/validate/rules/maxLength\';\\nimport { minCount } from \'@co-hooks/validate/rules/minCount\';\\nimport { minLength } from \'@co-hooks/validate/rules/minLength\';\\nimport { regexp } from \'@co-hooks/validate/rules/regexp\';\\nimport { required } from \'./rules/required\';\\nimport { array } from \'@co-hooks/validate/rules/types/array\';\\nimport { date } from \'@co-hooks/validate/rules/types/date\';\\nimport { digits } from \'@co-hooks/validate/rules/types/digits\';\\nimport { email } from \'@co-hooks/validate/rules/types/email\';\\nimport { number } from \'@co-hooks/validate/rules/types/number\';\\nimport { url } from \'@co-hooks/validate/rules/types/url\';\\nimport { registerRule, registerTypeRule, validate } from \'@co-hooks/validate/util\';\\nexport { ValidateErrorTipFunc, ValidateRuleFunc, SyncValidateRuleFunc, ValidateTriggerType, IValidateResult, IValidateRule } from \'@co-hooks/validate/types\';\\nexport { Validator } from \'@co-hooks/validate/lib/Validator\';\\nexport { registerTypeRule, registerRule, validate };\\nexport { func, min, max, maxCount, maxLength, minCount, minLength, regexp, required, array, date, digits, email, number, url }; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/func\\" { \\n \\nimport { IValidateRule } from \'@co-hooks/validate/types\';\\ndeclare module \'@co-hooks/validate/types\' {\\n    interface IValidateRule<T> {\\n        fn?: IValidateFunc<T>;\\n    }\\n}\\n\\nexport declare function func<T>(this: T, rule: IValidateRule<T>, value: unknown): Promise<void>; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/min\\" { \\n \\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\ndeclare module \'@co-hooks/validate/types\' {\\n    interface IValidateRuleInfo {\\n        min?: string | number;\\n    }\\n}\\n\\nexport declare const min: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/max\\" { \\n \\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\ndeclare module \'@co-hooks/validate/types\' {\\n    interface IValidateRuleInfo {\\n        max?: string | number;\\n    }\\n}\\n\\nexport declare const max: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/maxCount\\" { \\n \\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\ndeclare module \'@co-hooks/validate/types\' {\\n    interface IValidateRuleInfo {\\n        maxCount?: string | number;\\n    }\\n}\\n\\nexport declare const maxCount: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/maxLength\\" { \\n \\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\ndeclare module \'@co-hooks/validate/types\' {\\n    interface IValidateRuleInfo {\\n        maxLength?: string | number;\\n        maxLengthType?: \'byte\' | \'char\';\\n    }\\n}\\n\\nexport declare const maxLength: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/minCount\\" { \\n \\nimport { ValidateRuleFunc } from \'../types\';\\ndeclare module \'../types\' {\\n    interface IValidateRuleInfo {\\n        minCount?: string | number;\\n    }\\n}\\n\\nexport declare const minCount: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/minLength\\" { \\n \\nimport { ValidateRuleFunc } from \'../types\';\\ndeclare module \'../types\' {\\n    interface IValidateRuleInfo {\\n        minLength?: string | number;\\n        minLengthType?: \'byte\' | \'char\';\\n    }\\n}\\n\\nexport declare const minLength: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/regexp\\" { \\n \\nimport { ValidateRuleFunc } from \'../types\';\\ndeclare module \'../types\' {\\n    interface IValidateRuleInfo {\\n        regexp?: string | RegExp;\\n    }\\n}\\n\\nexport declare const regexp: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/types/array\\" { \\n \\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\n\\nexport declare const array: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/types/date\\" { \\n \\nimport { IDateLocale } from \'@co-hooks/util\';\\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\ndeclare module \'@co-hooks/validate/types\' {\\n    interface IValidateRuleInfo {\\n        format?: string;\\n        locale?: IDateLocale;\\n    }\\n}\\n\\nexport declare const date: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/types/digits\\" { \\n \\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\n\\nexport declare const digits: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/types/email\\" { \\n \\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\n\\nexport declare const email: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/types/number\\" { \\n \\nimport { ValidateRuleFunc } from \'@co-hooks/validate/types\';\\n\\nexport declare const number: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/rules/types/url\\" { \\n \\nimport { ValidateRuleFunc } from \'../../types\';\\ndeclare module \'../../types\' {\\n    interface IValidateRuleInfo {\\n        protocol?: boolean | string;\\n        slashes?: boolean;\\n        domain?: boolean | string;\\n        port?: boolean | number;\\n        pathname?: boolean;\\n        search?: boolean;\\n        hash?: boolean;\\n    }\\n}\\nexport declare const url: ValidateRuleFunc; \\n \\n } \\n declare module \\"@co-hooks/validate/util\\" { \\n \\nimport { IValidateResult, IValidateRule, SyncValidateRuleFunc, ValidateRuleFunc, ValidateTriggerType } from \'../types\';\\nexport declare function wrapSyncFunc(fn: SyncValidateRuleFunc): ValidateRuleFunc;\\nexport declare function registerTypeRule(type: string, func: ValidateRuleFunc): void;\\nexport declare function registerRule(func: ValidateRuleFunc): void;\\nexport declare function validateRule<T>(context: T, rule: IValidateRule<T>, value: unknown): Promise<void>;\\nexport declare function validate<T>(context: T, rules: Array<IValidateRule<T>>, value: unknown, trigger?: ValidateTriggerType): Promise<IValidateResult>; \\n \\n } \\n declare module \\"@co-hooks/validate/types\\" { \\n export declare type ValidateErrorTipFunc = (rule: IValidateRuleInfo) => Promise<string>;\\nexport declare type ValidateRuleFunc = (rule: IValidateRuleInfo, value: unknown) => Promise<void>;\\nexport declare type SyncValidateRuleFunc = (rule: IValidateRuleInfo, value: unknown) => boolean | string | void;\\nexport declare type IValidateFunc<T> = (value: any, context: T) => void | Promise<void>;\\nexport declare const TriggerType: [\\"reset\\", \\"change\\", \\"blur\\", \\"manual\\", \\"force\\"];\\nexport declare const TriggerTypeMap: Record<string, number>;\\nexport declare type ValidateTriggerType = (typeof TriggerType)[number];\\nexport interface IValidateResult {\\n    partial: boolean;\\n    valid: boolean;\\n    msg: string;\\n}\\nexport interface IValidateRuleInfo {\\n    type?: string;\\n    errorTip?: string | ValidateErrorTipFunc;\\n    label?: string;\\n}\\nexport interface IValidateRule<T> extends IValidateRuleInfo {\\n    trigger?: Exclude<ValidateTriggerType, \'reset\'>;\\n} \\n \\n } \\n declare module \\"@co-hooks/validate/lib/Validator\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IValidateResult, IValidateRule, ValidateTriggerType } from \'../types\';\\nexport interface IValidatorEvents {\\n    change: [IValidateResult];\\n}\\nexport declare class Validator<T> extends Emitter<IValidatorEvents> {\\n    private value;\\n    private result;\\n    private rules;\\n    private manual;\\n    private state;\\n    private readonly validateQueue;\\n    private readonly context;\\n    constructor(context: T);\\n    updateRules(rules: Array<IValidateRule<T>>): boolean;\\n    updateValue(value: unknown, manual?: boolean): boolean;\\n    validate(state?: ValidateTriggerType): Promise<void>;\\n    getValidateInfo(): IValidateResult & {\\n        manual: boolean;\\n    };\\n    reset(): void;\\n    dispose(): void;\\n    private initValidateQueue;\\n} \\n  \\n}","moduleName":"@co-hooks/validate"},{"code":"\\n declare module \\"@co-hooks/dom-node\\" { \\n \\nexport * from \'@co-hooks/dom-node/lib/DomNode\'; \\n \\n } \\n declare module \\"@co-hooks/dom-node/lib/DomNode\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nexport declare type OptionalDomNode<T> = DomNode<T> | null;\\nexport interface IDomNodeEvent<T> {\\n    valueChange: [T, T];\\n    childChange: [];\\n    attached: [];\\n    detached: [DomNode<T>];\\n}\\n\\nexport declare class DomNode<T> extends Emitter<IDomNodeEvent<T>> {\\n    \\n    readonly id: string;\\n    \\n    firstChild: OptionalDomNode<T>;\\n    \\n    lastChild: OptionalDomNode<T>;\\n    \\n    leftNode: OptionalDomNode<T>;\\n    \\n    rightNode: OptionalDomNode<T>;\\n    \\n    parentNode: OptionalDomNode<T>;\\n    private value;\\n    \\n    constructor(value: T, parentNode?: OptionalDomNode<T>);\\n    \\n    getValue(): T;\\n    \\n    setValue(value: T): void;\\n    \\n    getPathNodes(filter: (node: DomNode<T>) => boolean): Array<DomNode<T>>;\\n    \\n    getPathKeys(processor: (node: DomNode<T>) => string | null): string[];\\n    \\n    remove(): void;\\n    \\n    appendChild(node: DomNode<T>): void;\\n    \\n    removeChild(node: DomNode<T>): void;\\n    \\n    replaceChild(node: DomNode<T>, refNode: DomNode<T>): OptionalDomNode<T>;\\n    \\n    insertBefore(node: DomNode<T>, refNode?: OptionalDomNode<T>): void;\\n    \\n    insertAfter(node: DomNode<T>, refNode?: DomNode<T>): void;\\n    \\n    insert(node: DomNode<T>, index?: number): number;\\n    \\n    getIndex(node: DomNode<T>): number;\\n    \\n    isEmpty(): boolean;\\n    \\n    getChildNodes(): Array<DomNode<T>>;\\n    \\n    getSubNodes(matcher: (node: DomNode<T>) => boolean | null): Array<DomNode<T>>;\\n    \\n    getSubNode(matcher: (node: DomNode<T>) => boolean | null): OptionalDomNode<T>;\\n    private removeNode;\\n} \\n  \\n}","moduleName":"@co-hooks/dom-node"},{"code":"\\n declare module \\"@co-hooks/mem-cache\\" { \\n \\nexport * from \'@co-hooks/mem-cache/lib/MemCache\'; \\n \\n } \\n declare module \\"@co-hooks/mem-cache/lib/MemCache\\" { \\n \\n\\nexport declare class MemCache<T> {\\n    \\n    private cache;\\n    \\n    private readonly direct;\\n    \\n    constructor(direct?: boolean);\\n    \\n    addCache(key: string, value: T): void;\\n    \\n    removeCache(): {\\n        [key: string]: T;\\n    };\\n    removeCache(key: string): T;\\n    \\n    getCache(): {\\n        [key: string]: T;\\n    };\\n    \\n    getCache(key: string): T;\\n    \\n    hasKey(key: string): boolean;\\n} \\n  \\n}","moduleName":"@co-hooks/mem-cache"},{"code":"\\n declare module \\"@co-hooks/nest-watcher\\" { \\n \\nexport * from \'@co-hooks/nest-watcher/lib/NestWatcher\'; \\n \\n } \\n declare module \\"@co-hooks/nest-watcher/lib/NestWatcher\\" { \\n \\nexport declare const FUNC_ID_KEY: string;\\nexport interface IWatcherFlags {\\n    [key: string]: boolean;\\n}\\nexport declare type WatcherFunc = (changes: string[], flags: IWatcherFlags) => Promise<void>;\\nexport declare class NestWatcher {\\n    private static keysIsMatch;\\n    private static mergeFlags;\\n    private static getWatcherFuncId;\\n    private readonly watchers;\\n    private readonly watcherFuncMap;\\n    private currentInDispatching;\\n    private waitingChanges;\\n    private waitingLazyChanges;\\n    private dispatchingCount;\\n    \\n    register(creator: string, keys: string[], func: WatcherFunc, lazy?: boolean): void;\\n    \\n    unregister(creator: string, fn?: WatcherFunc): void;\\n    \\n    notify(keys: string[], flags?: IWatcherFlags): void;\\n    private mergeWaitingInfo;\\n    private processList;\\n    private processLazyList;\\n} \\n  \\n}","moduleName":"@co-hooks/nest-watcher"},{"code":"\\n declare module \\"@co-hooks/form\\" { \\n \\nexport * from \'@co-hooks/form/lib/Form\';\\nexport * from \'@co-hooks/form/lib/FormField\';\\nexport * from \'@co-hooks/form/lib/FormGroup\';\\nexport * from \'@co-hooks/form/types\';\\nexport * from \'@co-hooks/form/util\'; \\n \\n } \\n declare module \\"@co-hooks/form/lib/Form\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IValidateResult } from \'@co-hooks/validate\';\\nimport { FormDomNode, FormModel, FormValidateError, FormWatchFunc, IField, IForm } from \'@co-hooks/form/types\';\\nexport interface IFormOptions {\\n    model?: FormModel;\\n}\\nexport interface IFormEvent {\\n    \'submit\': [FormModel];\\n    \'submit-failed\': [Array<FormValidateError<unknown>>];\\n    \'validate-change\': [];\\n    \'model-change\': [FormModel];\\n}\\nexport declare class Form extends Emitter<IFormEvent> implements IForm {\\n    private readonly id;\\n    private readonly watcher;\\n    private readonly root;\\n    private model;\\n    private readonly map;\\n    constructor(options: IFormOptions);\\n    getRootNode(): FormDomNode;\\n    register(field: IField): void;\\n    unregister(field: IField): void;\\n    dispose(): void;\\n    disposeNode(node: FormDomNode): void;\\n    watch(id: string, scope: FormDomNode | null, paths: string[], callback: FormWatchFunc, lazy?: boolean): void;\\n    absoluteWatch(id: string, paths: string[], callback: FormWatchFunc, lazy?: boolean): void;\\n    unwatch(id: string): void;\\n    getModel<T extends FormModel>(): T;\\n    getPathValue<T extends unknown>(path: string): T;\\n    setPathValue(path: string, value: unknown, isSilent?: boolean): boolean;\\n    updateModel(model: FormModel): void;\\n    submit(): void;\\n    validate(): Promise<boolean>;\\n    reset(): void;\\n    getErrors(): Array<FormValidateError<unknown>>;\\n    dispatchValidateResult(key: string, node: FormDomNode, result: IValidateResult): void;\\n    private processKeys;\\n    private processNeedValidateFields;\\n    private init;\\n} \\n \\n } \\n declare module \\"@co-hooks/form/lib/FormField\\" { \\n import { Emitter } from \'@co-hooks/emitter\';\\nimport { IValidateResult, IValidateRule, ValidateTriggerType } from \'@co-hooks/validate\';\\nimport { FormDomNode, FormValidateError, IField, IFormField } from \'@co-hooks/form/types\';\\nimport { FormRepeat } from \'@co-hooks/form/lib/FormRepeat\';\\nimport { Form } from \'@co-hooks/form/lib/Form\';\\nimport { FormGroup } from \'@co-hooks/form/lib/FormGroup\';\\nexport interface IFormFieldEvent {\\n    repaint: [];\\n    focus: [];\\n}\\nexport interface IFormFieldOptions<T> {\\n    field: string;\\n    label?: string;\\n    initialValue: T;\\n    defaultValue?: T;\\n    rules?: IFormValidateRule | IFormValidateRule[];\\n}\\nexport interface IFormFieldInfo<T> extends IValidateResult {\\n    value: T;\\n    manual: boolean;\\n    field: string;\\n    label: string;\\n    path: string;\\n}\\nexport declare type IFormValidateRule = IValidateRule<IFormField<unknown>>;\\nexport declare class FormField<T> extends Emitter<IFormFieldEvent> implements IField, IFormField<T> {\\n    readonly id: string;\\n    readonly field: string;\\n    label: string;\\n    private readonly node;\\n    private value;\\n    private readonly initialValue;\\n    private defaultValue?;\\n    private readonly validator;\\n    private readonly form;\\n    constructor(form: Form, scope: FormDomNode, options: IFormFieldOptions<T>);\\n    updateOptions(options: IFormFieldOptions<T>): void;\\n    isField(): this is FormField<T>;\\n    isRepeat(): this is FormRepeat;\\n    isGroup(): this is FormGroup;\\n    getFieldInfo(): IFormFieldInfo<T>;\\n    getValidateError(): FormValidateError<T>;\\n    reset(): void;\\n    validate(trigger?: ValidateTriggerType): Promise<void>;\\n    getByExpression(rp: string): any;\\n    dispose(): void;\\n    getValue(): T;\\n    setValue(value: T): void;\\n    getForm(): Form;\\n    getNode(): FormDomNode;\\n    getPath(): string;\\n    private init;\\n    private getCache;\\n    private setCacheValue;\\n    private getCacheValue;\\n} \\n \\n } \\n declare module \\"@co-hooks/form/lib/FormGroup\\" { \\n import { Emitter } from \'@co-hooks/emitter\';\\nimport { Form, FormDomNode, FormField, IField, IFormFieldEvent } from \'@co-hooks/form\';\\nimport { IValidateResult } from \'@co-hooks/validate\';\\nimport { FormRepeat } from \'@co-hooks/form/lib/FormRepeat\';\\nexport interface IFormGroupOptions {\\n    field?: string;\\n    captureChildError?: boolean;\\n    errorProcessor?: (errors: string[]) => string;\\n    defaultValue?: unknown;\\n}\\nexport interface IFormGroupInfo extends Omit<IValidateResult, \'partial\'> {\\n    scope: FormDomNode;\\n}\\nexport declare class FormGroup extends Emitter<IFormFieldEvent> implements IField {\\n    readonly id: string;\\n    readonly form: Form;\\n    readonly field: string;\\n    private readonly node;\\n    private captureChildError;\\n    private errorProcessor;\\n    private readonly errors;\\n    private valid;\\n    private msg;\\n    constructor(form: Form, scope: FormDomNode, options: IFormGroupOptions);\\n    updateOptions(options: IFormGroupOptions): void;\\n    isField(): this is FormField<any>;\\n    isGroup(): this is FormGroup;\\n    isRepeat(): this is FormRepeat;\\n    reset(): void;\\n    getGroupInfo(): IFormGroupInfo;\\n    getNode(): FormDomNode;\\n    processValidateResult(id: string, error?: IValidateResult): void;\\n    dispose(): void;\\n    private init;\\n} \\n \\n } \\n declare module \\"@co-hooks/form/types\\" { \\n \\nimport { DomNode } from \'@co-hooks/dom-node\';\\nimport { MemCache } from \'@co-hooks/mem-cache\';\\nimport { IWatcherFlags } from \'@co-hooks/nest-watcher\';\\nimport { ValidateTriggerType } from \'@co-hooks/validate\';\\nimport { FormField, IFormFieldInfo } from \'@co-hooks/form/lib/FormField\';\\nimport { FormGroup } from \'@co-hooks/form/lib/FormGroup\';\\nimport { FormRepeat } from \'@co-hooks/form/lib/FormRepeat\';\\nexport declare type FormWatchFunc = (changes: string[], flags: IWatcherFlags) => void | Promise<void>;\\nexport interface IField {\\n    id: string;\\n    isField(): this is FormField<any>;\\n    isGroup(): this is FormGroup;\\n    isRepeat(): this is FormRepeat;\\n    reset(): void;\\n    dispose(): void;\\n}\\nexport interface IFormField<T> {\\n    getFieldInfo(): IFormFieldInfo<T>;\\n    getForm(): IForm;\\n    reset(): void;\\n    validate(trigger?: ValidateTriggerType): Promise<void>;\\n    getValue(): T;\\n    setValue(value: T): void;\\n    getByExpression(rp: string): any;\\n}\\nexport interface IForm {\\n    watch(id: string, scope: FormDomNode, keys: string[], callback: FormWatchFunc, lazy?: boolean): void;\\n    absoluteWatch(id: string, keys: string[], callback: FormWatchFunc, lazy?: boolean): void;\\n    unwatch(id: string): void;\\n    getModel<T extends FormModel>(): T;\\n    updateModel(model: FormModel): void;\\n    validate(): Promise<boolean>;\\n    dispose(): void;\\n    reset(): void;\\n    getPathValue<T extends unknown>(path: string): T;\\n    setPathValue(path: string, value: unknown, isSilent?: boolean): boolean;\\n    getErrors(includeOriginErrors?: boolean): Array<FormValidateError<unknown>>;\\n}\\nexport declare enum FormNodeType {\\n    ROOT = \\"root\\",\\n    FIELD = \\"field\\",\\n    GROUP = \\"group\\",\\n    REPEAT = \\"repeat\\"\\n}\\nexport interface FormNode {\\n    type: FormNodeType;\\n    field: string;\\n    id: string;\\n    cache?: MemCache<unknown>;\\n}\\nexport declare type FormModel = Record<string, any>;\\nexport declare type FormDomNode = DomNode<FormNode>;\\nexport declare type FormValidateErrorType = \'container\' | \'field\' | \'root\';\\nexport interface FormValidateError<T> {\\n    path: string;\\n    field: string;\\n    label: string;\\n    error: string;\\n    value: T;\\n}\\nexport interface FormValidateErrorTree extends Omit<FormValidateError<unknown>, \'value\'> {\\n    type: FormValidateErrorType;\\n    children: FormValidateErrorTree[];\\n} \\n \\n } \\n declare module \\"@co-hooks/form/util\\" { \\n \\nimport { FunctionAny } from \'@co-hooks/util\';\\nimport { FormDomNode } from \'@co-hooks/form/types\';\\nexport declare function getRelativeKeys(node: FormDomNode): string[];\\nexport declare function getNestCachePath(node: FormDomNode): string[];\\nexport declare function getNestWatchPath(node: FormDomNode): string[];\\nexport declare type IWrappedReturnType<T> = T extends Promise<infer R> ? T : Promise<T>;\\n\\nexport declare function wrapFunction<T extends FunctionAny>(func: T): (...args: Parameters<T>) => IWrappedReturnType<ReturnType<T>>;\\nexport declare function processRelativeKey(scopeKeys: string[], key: string): string; \\n \\n } \\n declare module \\"@co-hooks/form/lib/FormRepeat\\" { \\n \\nimport { Form, FormDomNode, IFormGroupOptions } from \'@co-hooks/form\';\\nimport { FormGroup } from \'@co-hooks/form/lib/FormGroup\';\\nexport interface IFormRepeatOptions extends Omit<IFormGroupOptions, \'defaultValue\'> {\\n    defaultValue?: object[];\\n    field: string;\\n}\\nexport declare class FormRepeat extends FormGroup {\\n    constructor(form: Form, scope: FormDomNode, options: IFormRepeatOptions);\\n    isRepeat(): this is FormRepeat;\\n} \\n  \\n}","moduleName":"@co-hooks/form"},{"code":"\\n declare module \\"@rc-hooks/form\\" { \\n \\nexport { FormProvider } from \'@rc-hooks/form/context/form\';\\nexport { ScopeProvider } from \'@rc-hooks/form/context/scope\';\\nexport * from \'@rc-hooks/form/hooks/useCreateForm\';\\nexport * from \'@rc-hooks/form/hooks/useForm\';\\nexport * from \'@rc-hooks/form/hooks/useFormScope\';\\nexport * from \'@rc-hooks/form/hooks/useFormField\';\\nexport * from \'@rc-hooks/form/hooks/useFormGroup\';\\nexport * from \'@rc-hooks/form/hooks/useWatch\';\\nexport * from \'@rc-hooks/form/hooks/useWatchField\';\\nexport * from \'@co-hooks/form\'; \\n \\n } \\n declare module \\"@rc-hooks/form/context/form\\" { \\n \\nimport { Form } from \'@co-hooks/form\';\\nexport declare const FormContext: import(\\"react\\").Context<Form | null>;\\nexport declare const FormProvider: import(\\"react\\").Provider<Form | null>; \\n \\n } \\n declare module \\"@rc-hooks/form/context/scope\\" { \\n \\nimport { OptionalDomNode } from \'@co-hooks/dom-node\';\\nimport { FormNode } from \'@co-hooks/form\';\\nexport declare const ScopeContext: import(\\"react\\").Context<OptionalDomNode<FormNode>>;\\nexport declare const ScopeProvider: import(\\"react\\").Provider<OptionalDomNode<FormNode>>; \\n \\n } \\n declare module \\"@rc-hooks/form/hooks/useCreateForm\\" { \\n \\nimport { Form, FormModel, FormValidateError } from \'@co-hooks/form\';\\nexport interface ICreateFormOptions {\\n    form?: Form;\\n    defaultModel?: FormModel;\\n    onModelChange: (value: FormModel) => void;\\n    onSubmit: (value: FormModel) => void;\\n    onSubmitFailed: (errors: Array<FormValidateError<unknown>>) => void;\\n}\\nexport declare function useCreateForm(props: ICreateFormOptions): Form; \\n \\n } \\n declare module \\"@rc-hooks/form/hooks/useForm\\" { \\n \\nimport { Form } from \'@co-hooks/form\';\\nexport declare function useForm(): Form; \\n \\n } \\n declare module \\"@rc-hooks/form/hooks/useFormScope\\" { \\n \\nimport { FormDomNode } from \'@co-hooks/form\';\\nexport declare function useFormScope(): FormDomNode; \\n \\n } \\n declare module \\"@rc-hooks/form/hooks/useFormField\\" { \\n \\nimport { FormField, IFormFieldInfo, IFormFieldOptions } from \'@co-hooks/form\';\\nimport { FocusEvent, Ref } from \'react\';\\nexport interface IFormFieldBase<T> {\\n    value?: T;\\n    domRef?: Ref<HTMLElement>;\\n    inputRef?: Ref<HTMLInputElement>;\\n    onBlur?: (e: FocusEvent<HTMLInputElement>) => void;\\n    onValueChange?: (value: T) => void;\\n}\\nexport interface IFormFieldExtra<T> extends Required<IFormFieldBase<T>> {\\n    instance: FormField<T>;\\n    validate: () => Promise<void>;\\n}\\nexport declare function useFormField<T>(options: IFormFieldOptions<T>): IFormFieldInfo<T> & IFormFieldExtra<T>; \\n \\n } \\n declare module \\"@rc-hooks/form/hooks/useFormGroup\\" { \\n \\nimport { FormGroup, IFormGroupInfo, IFormGroupOptions } from \'@co-hooks/form\';\\nexport declare function useFormGroup(options: IFormGroupOptions): IFormGroupInfo & {\\n    instance: FormGroup;\\n}; \\n \\n } \\n declare module \\"@rc-hooks/form/hooks/useWatch\\" { \\n \\nimport { IWatcherFlags } from \'@co-hooks/nest-watcher\';\\nimport { Form } from \'@rc-hooks/form\';\\nexport declare type FormWatcherFunc<T> = (form: Form, changes: string[], flags: IWatcherFlags) => void | Promise<void>;\\nexport declare function useWatch<T>(keys: string[], fn: FormWatcherFunc<T>, lazy?: boolean): void; \\n \\n } \\n declare module \\"@rc-hooks/form/hooks/useWatchField\\" { \\n export declare function useWatchField<T>(key: string, lazy?: boolean): T; \\n  \\n}","moduleName":"@rc-hooks/form"},{"code":"\\n declare module \\"@co-hooks/draggable\\" { \\n \\nexport * from \'@co-hooks/draggable/lib/Draggable\'; \\n \\n } \\n declare module \\"@co-hooks/draggable/lib/Draggable\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IElementPosition, IOffset, IOverFlowBoundaries } from \'@co-hooks/dom\';\\nimport { IDrag, IDragEvent } from \'@co-hooks/drag\';\\nexport interface IDraggablePos {\\n    targetPos: IElementPosition;\\n    containerPos: IElementPosition;\\n}\\nexport declare type IScrollHorizontalDirection = \'left\' | \'right\';\\nexport declare type IScrollVerticalDirection = \'top\' | \'bottom\';\\nexport declare type IScrollDirection = [IScrollHorizontalDirection | null, IScrollVerticalDirection | null];\\nexport declare type IDraggableDirection = \'horizontal\' | \'vertical\' | \'auto\';\\nexport declare type IDragType = \'move\' | \'copy\';\\nexport interface IDraggableEvent<T> extends IDragEvent<T> {\\n    startPos: IDraggablePos;\\n    dragType: IDragType;\\n    offset: IOffset;\\n}\\nexport interface IDraggableOptions<T> extends IDrag<T> {\\n    getDragType: (e: IDragEvent<T>) => IDragType;\\n    getContainer: (e: IDragEvent<T>) => HTMLElement | null;\\n    direction?: IDraggableDirection;\\n    overflow?: boolean;\\n    overflowBoundaries?: IOverFlowBoundaries;\\n    scrollable?: boolean;\\n    scrollableBoundaries?: IOverFlowBoundaries;\\n    scrollableDelay?: number;\\n    scrollStep?: number;\\n    autoFlow?: boolean;\\n    dragOpacity?: number;\\n    dragZIndex?: number;\\n}\\nexport declare function getDefaultScrollableBoundaries(): IOverFlowBoundaries;\\nexport declare function getDefaultScrollDirection(): IScrollDirection;\\nexport interface IDraggableEventType<T> {\\n    \'drag-prepare\': [IDraggableEvent<T>];\\n    \'drag-start\': [IDraggableEvent<T>];\\n    \'dragging\': [IDraggableEvent<T>];\\n    \'drag-end\': [IDraggableEvent<T>];\\n    \'scroll-start\': [IScrollDirection];\\n    \'before-create-action-ele\': [Draggable<T>];\\n    \'scroll-end\': [];\\n}\\nexport declare class Draggable<T> extends Emitter<IDraggableEventType<T>> {\\n    private static getOffsetPosition;\\n    private static setOffset;\\n    actionEle?: HTMLElement;\\n    protected startStyle?: string;\\n    protected getContainer?: (e: IDragEvent<T>) => HTMLElement | null;\\n    protected container: HTMLElement;\\n    private readonly drag;\\n    private direction;\\n    private overflow;\\n    private overflowBoundaries;\\n    private scrollable;\\n    private scrollableBoundaries;\\n    private scrollableDelay;\\n    private scrollStep;\\n    private autoFlow;\\n    private dragOpacity;\\n    private dragZIndex;\\n    private startPos?;\\n    private scrollableTimeId;\\n    private scrollTimeId;\\n    private scrollDirection;\\n    private isStartScroll;\\n    private dragType;\\n    private dragging;\\n    constructor();\\n    updateDraggableOptions(options: IDraggableOptions<T>): void;\\n    updateTarget(ele: HTMLElement): void;\\n    getActionEle(): HTMLElement | null;\\n    getTarget(): HTMLElement | null;\\n    dispose(): void;\\n    protected handleDragPrepare(e: IDragEvent<T>): void;\\n    protected handleDragStart(e: IDragEvent<T>): void;\\n    protected handleDragging(e: IDragEvent<T>): void;\\n    protected handleDragEnd(e: IDragEvent<T>): void;\\n    protected getDragType(e: IDragEvent<T>): IDragType;\\n    protected createActionEle(e: IDragEvent<T>): void;\\n    protected disposeActionEle(): void;\\n    protected cancelDrag(): void;\\n    private calcTargetOffset;\\n    private init;\\n    private abortScrollableTime;\\n    private startScrollableTime;\\n    private containerScroll;\\n    private containerScrollAbort;\\n    private detectScroll;\\n} \\n  \\n}","moduleName":"@co-hooks/draggable"},{"code":"\\n declare module \\"@co-hooks/sortable\\" { \\n \\nexport * from \'@co-hooks/sortable/lib/Sortable\';\\nexport * from \'@co-hooks/sortable/util\'; \\n \\n } \\n declare module \\"@co-hooks/sortable/lib/Sortable\\" { \\n \\nimport { IDraggableEvent } from \'@co-hooks/draggable\';\\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IDragEvent } from \'@co-hooks/drag\';\\nexport declare type ISortableContainerMode = \'vertical\' | \'horizontal\';\\nexport interface ISortableOptions<T> {\\n    containerIdentifierPropName?: string;\\n    elemIdentifierPropName?: string;\\n    hittingContainerClassName?: string;\\n    mode?: ISortableContainerMode;\\n    dragLimit?: number;\\n    isValidContainer?: (data: T, id: string) => boolean;\\n    isValidElement?: (data: T, id: string) => boolean;\\n    isVirtualDrag?: (data: T) => boolean;\\n    createPlaceHolder?: (id: string, index: number, e: IDraggableEvent<T>) => HTMLElement;\\n    getContainerMode?: (id: string) => null | ISortableContainerMode;\\n    getDragRoot?: (data: T) => HTMLElement | null;\\n}\\nexport interface ISortablePosition {\\n    container: string;\\n    index: number;\\n}\\nexport interface ISortableInfo<T> extends ISortablePosition {\\n    move: boolean;\\n    data: T;\\n}\\nexport interface ISortableEvent<T> {\\n    change: [IDraggableEvent<T>, ISortableInfo<T> | null, ISortableInfo<T>];\\n    \'drag-start\': [IDraggableEvent<T>];\\n    \'dragging\': [IDraggableEvent<T>];\\n    \'drag-end\': [IDraggableEvent<T>];\\n    \'drag-cancel\': [];\\n}\\nexport declare class Sortable<T> extends Emitter<ISortableEvent<T>> {\\n    private isDragging;\\n    private target;\\n    private root;\\n    private placeholder;\\n    private dragLimit;\\n    private containerIdentifierPropName;\\n    private elemIdentifierPropName;\\n    private isVirtualDrag;\\n    private isValidContainer;\\n    private isValidElement;\\n    private createPlaceHolder;\\n    private getContainerMode;\\n    private mode;\\n    private getDragRoot;\\n    private virtual;\\n    private lastHitContainer;\\n    private hittingContainerClassName;\\n    ensureDragRoot(e: IDragEvent<T>): HTMLElement | null;\\n    resetDragRoot(): void;\\n    getDragLimit(): number;\\n    updateOptions(options: ISortableOptions<T>): void;\\n    dragStart(e: IDraggableEvent<T>): void;\\n    dragging(e: IDraggableEvent<T>): void;\\n    dragEnd(e: IDraggableEvent<T>): void;\\n    dispose(): void;\\n    private ensurePlaceHolder;\\n    private removePlaceholder;\\n    private getHitContainer;\\n    private ensurePlaceHolderPosition;\\n    private getElementIndex;\\n    private resetDragInfo;\\n    private getRealContainerMode;\\n} \\n \\n } \\n declare module \\"@co-hooks/sortable/util\\" { \\n \\nimport { IMousePos } from \'@co-hooks/drag\';\\nexport interface ICalElemHitWidthMousePosResult {\\n    vertical: \'top\' | \'bottom\';\\n    horizontal: \'left\' | \'right\';\\n    offsetTop: number;\\n    offsetLeft: number;\\n    offsetBottom: number;\\n    offsetRight: number;\\n}\\nexport declare function calElemHitWithMousePos(elem: HTMLElement, pos: IMousePos): false | ICalElemHitWidthMousePosResult; \\n  \\n}","moduleName":"@co-hooks/sortable"},{"code":"\\n declare module \\"@rc-hooks/draggable\\" { \\n \\nexport * from \'@rc-hooks/draggable/hooks/useDynamicDraggable\';\\nexport * from \'@rc-hooks/draggable/hooks/useCopyDraggable\';\\nexport * from \'@rc-hooks/draggable/hooks/useMoveDraggable\';\\nexport * from \'@co-hooks/draggable\'; \\n \\n } \\n declare module \\"@rc-hooks/draggable/hooks/useDynamicDraggable\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { Draggable, IDraggableEvent, IDraggableOptions, IScrollDirection } from \'@co-hooks/draggable\';\\nexport interface IDraggableEventHandler<T> {\\n    onDragPrepare?: (e: IDraggableEvent<T>) => void;\\n    onDragStart?: (e: IDraggableEvent<T>) => void;\\n    onDragging?: (e: IDraggableEvent<T>) => void;\\n    onDragEnd?: (e: IDraggableEvent<T>) => void;\\n    onScrollStart?: (dir: IScrollDirection) => void;\\n    onScrollEnd?: () => void;\\n    onBeforeCreateActionEle?: (ins: Draggable<T>) => void;\\n}\\nexport declare type IDynamicDraggableOptions<T> = IDraggableEventHandler<T> & IDraggableOptions<T>;\\nexport declare function useDynamicDraggable<T>(target: RefObject<HTMLElement> | HTMLElement | null, options: IDynamicDraggableOptions<T>): Draggable<T>; \\n \\n } \\n declare module \\"@rc-hooks/draggable/hooks/useCopyDraggable\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { Draggable, IDraggableOptions } from \'@co-hooks/draggable\';\\nimport { IDraggableEventHandler } from \'@rc-hooks/draggable/hooks/useDynamicDraggable\';\\nexport declare type ICopyDraggableOptions<T> = IDraggableEventHandler<T> & Omit<IDraggableOptions<T>, \'getDragType\'>;\\nexport declare function useCopyDraggable<T>(target: RefObject<HTMLElement> | HTMLElement | null, options: ICopyDraggableOptions<T>): Draggable<T>; \\n \\n } \\n declare module \\"@rc-hooks/draggable/hooks/useMoveDraggable\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { Draggable, IDraggableOptions } from \'@co-hooks/draggable\';\\nimport { IDraggableEventHandler } from \'@rc-hooks/draggable/hooks/useDynamicDraggable\';\\nexport declare type IMoveDraggableOptions<T> = Omit<IDraggableEventHandler<T>, \'before-create-action-ele\'> & Omit<IDraggableOptions<T>, \'getDragType\'>;\\nexport declare function useMoveDraggable<T>(target: RefObject<HTMLElement> | HTMLElement | null, options: IMoveDraggableOptions<T>): Draggable<T>; \\n  \\n}","moduleName":"@rc-hooks/draggable"},{"code":"\\n declare module \\"@rc-hooks/sortable\\" { \\n \\nexport * from \'@rc-hooks/sortable/hooks/useCopySortable\';\\nexport * from \'@rc-hooks/sortable/hooks/useMoveSortable\';\\nexport * from \'@rc-hooks/sortable/hooks/useDynamicSortable\';\\nexport * from \'@rc-hooks/sortable/hooks/useCreateSortable\';\\nexport * from \'@rc-hooks/sortable/hooks/useSortable\';\\nexport * from \'@rc-hooks/sortable/components/RcSortableProvider\';\\nexport * from \'@co-hooks/sortable\'; \\n \\n } \\n declare module \\"@rc-hooks/sortable/hooks/useCopySortable\\" { \\n \\nimport { Draggable } from \'@co-hooks/draggable\';\\nimport { ICopyDraggableOptions } from \'@rc-hooks/draggable\';\\nimport { RefObject } from \'react\';\\nexport declare function useCopySortable<T>(target: RefObject<HTMLElement> | HTMLElement | null, options: Omit<ICopyDraggableOptions<T>, \'getContainer\'>): Draggable<T>; \\n \\n } \\n declare module \\"@rc-hooks/sortable/hooks/useMoveSortable\\" { \\n \\nimport { Draggable } from \'@co-hooks/draggable\';\\nimport { IMoveDraggableOptions } from \'@rc-hooks/draggable\';\\nimport { RefObject } from \'react\';\\nexport declare function useMoveSortable<T>(target: RefObject<HTMLElement> | HTMLElement | null, options: Omit<IMoveDraggableOptions<T>, \'getContainer\'>): Draggable<T>; \\n \\n } \\n declare module \\"@rc-hooks/sortable/hooks/useDynamicSortable\\" { \\n \\nimport { Draggable } from \'@co-hooks/draggable\';\\nimport { IDynamicDraggableOptions } from \'@rc-hooks/draggable\';\\nimport { RefObject } from \'react\';\\nexport declare function useDynamicSortable<T>(target: RefObject<HTMLElement> | HTMLElement | null, options: Omit<IDynamicDraggableOptions<T>, \'getContainer\'>): Draggable<T>; \\n \\n } \\n declare module \\"@rc-hooks/sortable/hooks/useCreateSortable\\" { \\n \\nimport { IDraggableEvent } from \'@co-hooks/draggable\';\\nimport { ISortableInfo, ISortableOptions, Sortable } from \'@co-hooks/sortable\';\\nexport interface ICreateSortableOptions<T> extends ISortableOptions<T> {\\n    onDragStart?: (e: IDraggableEvent<T>) => void;\\n    onDragging?: (e: IDraggableEvent<T>) => void;\\n    onDragEnd?: (e: IDraggableEvent<T>) => void;\\n    onDragCancel?: () => void;\\n    onChange?: (e: IDraggableEvent<T>, from: ISortableInfo<T> | null, to: ISortableInfo<T>) => void;\\n}\\nexport declare function useCreateSortable<T>(options: ICreateSortableOptions<T>): Sortable<T>; \\n \\n } \\n declare module \\"@rc-hooks/sortable/hooks/useSortable\\" { \\n \\nimport { Sortable } from \'@co-hooks/sortable\';\\nexport declare function useSortable<T>(): Sortable<T>; \\n \\n } \\n declare module \\"@rc-hooks/sortable/components/RcSortableProvider\\" { \\n \\nimport React from \'react\';\\nimport { Sortable } from \'@co-hooks/sortable\';\\nexport interface IRcSortableProviderProps<T> {\\n    sortable: Sortable<T>;\\n    children: React.ReactNode;\\n}\\nexport declare function RcSortableProvider<T>(props: IRcSortableProviderProps<T>): JSX.Element; \\n  \\n}","moduleName":"@rc-hooks/sortable"},{"code":"\\n declare module \\"@co-hooks/menu\\" { \\n \\nexport * from \'@co-hooks/menu/lib/Menu\';\\nexport * from \'@co-hooks/menu/lib/SubMenu\';\\nexport * from \'@co-hooks/menu/lib/MenuItem\';\\nexport * from \'@co-hooks/menu/types\'; \\n \\n } \\n declare module \\"@co-hooks/menu/lib/Menu\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IMenuOptions, IMenuTrigger } from \'@co-hooks/menu/types\';\\nimport { MenuItem } from \'@co-hooks/menu/lib/MenuItem\';\\nimport { SubMenu } from \'@co-hooks/menu/lib/SubMenu\';\\nexport interface Events {\\n    \'active-item-change\': [string];\\n    \'active-item-update\': [string];\\n    \'active-menus-update\': [string[]];\\n    \'open-menus-change\': [string[]];\\n    \'open-menus-update\': [];\\n}\\nexport declare class Menu<P> extends Emitter<Events> {\\n    private depth;\\n    private readonly insId;\\n    private readonly menuItemMap;\\n    private readonly subMenuMap;\\n    private openIds;\\n    private trigger;\\n    private activeId;\\n    private activeMenus;\\n    private collapse;\\n    private accordion;\\n    private extraProps?;\\n    constructor(options: IMenuOptions<P>);\\n    updateMenuOptions(options: IMenuOptions<P>): void;\\n    getDepth(): number;\\n    setDepth(depth: number): void;\\n    getInsId(): string;\\n    getActiveId(): string;\\n    getCollapse(): boolean;\\n    getAccordion(): boolean;\\n    setActiveMenus(menuId: string | null): void;\\n    getActiveMenus(): string[];\\n    isOpened(id: string): boolean;\\n    getOpenIds(): string[];\\n    setActiveItem(insId: string, id: string): void;\\n    getExtraProps(): P | {};\\n    getTrigger(): IMenuTrigger;\\n    emitOpenMenusChange(): void;\\n    emitOpenMenusUpdate(): void;\\n    emitActiveItemChange(): void;\\n    emitActiveItemUpdate(): void;\\n    setOpen(insId: string, id: string, open?: boolean): void;\\n    setOpenIds(ids: string[]): void;\\n    resetOpenIds(): void;\\n    registerMenuItem(menu: MenuItem<P>): void;\\n    unregisterMenuItem(menu: MenuItem<P>): void;\\n    registerSubMenu(subMenu: SubMenu<P>): void;\\n    unregisterSubMenu(subMenu: SubMenu<P>): void;\\n} \\n \\n } \\n declare module \\"@co-hooks/menu/lib/SubMenu\\" { \\n import { Emitter } from \'@co-hooks/emitter\';\\nimport { ISubMenuOptions } from \'@co-hooks/menu/types\';\\nimport { Menu } from \'@co-hooks/menu/lib/Menu\';\\nimport { IMenuItem } from \'@co-hooks/menu/lib/MenuItem\';\\ninterface Events {\\n    \'opened-update\': [boolean];\\n}\\nexport declare class SubMenu<P> extends Emitter<Events> implements IMenuItem<P> {\\n    private level;\\n    private readonly insId;\\n    private readonly parent;\\n    private readonly rootMenu;\\n    private readonly itemMap;\\n    private id;\\n    private disposed;\\n    constructor(rootMenu: Menu<P>, options: ISubMenuOptions, parent: SubMenu<P> | null, insId?: string);\\n    private get opened();\\n    updateSubMenuOptions(options: ISubMenuOptions): void;\\n    getInsId(): string;\\n    getInsIdsPath(): string[];\\n    getId(): string;\\n    getLevel(): number;\\n    isSubMenu(): boolean;\\n    setLevel(): void;\\n    setActive(): void;\\n    getActive(): boolean;\\n    getOpened(): boolean;\\n    updateOpened(open: boolean, deep?: boolean): void;\\n    setOpened(open: boolean, deep?: boolean): void;\\n    updateParentOpenedState(open: boolean): void;\\n    updateChildOpenedState(open: boolean): void;\\n    updateOpenedState(open: boolean): void;\\n    register(item: IMenuItem<P>): void;\\n    unregister(item: IMenuItem<P>): void;\\n    dispose(): void;\\n    private init;\\n    private doSetOpened;\\n}\\nexport {}; \\n \\n } \\n declare module \\"@co-hooks/menu/lib/MenuItem\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IMenuItemOptions } from \'@co-hooks/menu/types\';\\nimport { Menu } from \'@co-hooks/menu/lib/Menu\';\\nimport { SubMenu } from \'@co-hooks/menu/lib/SubMenu\';\\nexport interface IMenuItem<P> {\\n    getInsId: () => string;\\n    getInsIdsPath: () => string[];\\n    getId: () => string;\\n    isSubMenu: () => this is SubMenu<P>;\\n}\\nexport declare class MenuItem<P> extends Emitter<{}> implements IMenuItem<P> {\\n    private level;\\n    private readonly insId;\\n    private readonly parent;\\n    private readonly rootMenu;\\n    private id;\\n    private disposed;\\n    constructor(rootMenu: Menu<P>, parent: SubMenu<P> | null, insId?: string);\\n    get opened(): boolean;\\n    isSubMenu(): boolean;\\n    updateMenuItemOptions(options: IMenuItemOptions): void;\\n    getInsId(): string;\\n    getInsIdsPath(): string[];\\n    getId(): string;\\n    getActive(): boolean;\\n    setActive(): void;\\n    setParentActive(): void;\\n    getParent(): SubMenu<P> | null;\\n    getLevel(): number;\\n    setLevel(): void;\\n    dispose(): void;\\n    private init;\\n} \\n \\n } \\n declare module \\"@co-hooks/menu/types\\" { \\n \\nexport declare type IMenuTrigger = \'hover\' | \'click\';\\nexport interface IMenuOptions<P> {\\n    trigger?: IMenuTrigger;\\n    openIds?: string[];\\n    activeId?: string;\\n    collapse?: boolean;\\n    accordion?: boolean;\\n    extraProps?: P;\\n}\\nexport interface IMenuItemOptions {\\n    id: string;\\n    disabled?: boolean;\\n}\\nexport interface ISubMenuOptions {\\n    id: string;\\n    disabled?: boolean;\\n} \\n  \\n}","moduleName":"@co-hooks/menu"},{"code":"\\n declare module \\"@rc-hooks/menu\\" { \\n \\nexport * from \'@rc-hooks/menu/hooks/useMenu\';\\nexport * from \'@rc-hooks/menu/hooks/useSubMenu\';\\nexport * from \'@rc-hooks/menu/hooks/useMenuItem\';\\nexport * from \'@rc-hooks/menu/hooks/useParentSubMenu\';\\nexport * from \'@rc-hooks/menu/components/RcMenu\';\\nexport * from \'@rc-hooks/menu/components/RcSubMenu\';\\nexport * from \'@rc-hooks/menu/types\';\\nexport * from \'@co-hooks/menu\'; \\n \\n } \\n declare module \\"@rc-hooks/menu/hooks/useMenu\\" { \\n import { Menu } from \'@co-hooks/menu\';\\nexport declare function useMenu<P>(): Menu<P>; \\n \\n } \\n declare module \\"@rc-hooks/menu/hooks/useSubMenu\\" { \\n \\nimport { SubMenu } from \'@co-hooks/menu\';\\nexport declare function useSubMenu<P>(): SubMenu<P> | null; \\n \\n } \\n declare module \\"@rc-hooks/menu/hooks/useMenuItem\\" { \\n import { IMenuItemOptions, MenuItem } from \'@co-hooks/menu\';\\nexport declare function useMenuItem<P>(options: IMenuItemOptions, insId?: string): [MenuItem<P>, boolean]; \\n \\n } \\n declare module \\"@rc-hooks/menu/hooks/useParentSubMenu\\" { \\n import { SubMenu } from \'@co-hooks/menu\';\\nexport declare function useParentSubMenu<P>(): SubMenu<P> | null; \\n \\n } \\n declare module \\"@rc-hooks/menu/components/RcMenu\\" { \\n\\nimport { IRcMenuProps } from \'@rc-hooks/menu/types\';\\nexport declare function RcMenu<P>(props: IRcMenuProps<P>): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/menu/components/RcSubMenu\\" { \\n \\nimport { IRcSubMenuProps } from \'@rc-hooks/menu/types\';\\nexport declare function RcSubMenu<P>(props: IRcSubMenuProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/menu/types\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { IMenuOptions, ISubMenuOptions } from \'@co-hooks/menu\';\\nexport interface IRcSubMenuExtra {\\n    children?: ReactNode;\\n    insId?: string;\\n}\\nexport declare type IRcSubMenuProps = IRcSubMenuExtra & ISubMenuOptions;\\nexport interface IRcMenuExtra {\\n    children?: ReactNode;\\n    onClick?: (id: string) => void;\\n    onOpenChange?: (openIds: string[]) => void;\\n}\\nexport declare type IRcMenuProps<P> = IRcMenuExtra & IMenuOptions<P>; \\n  \\n}","moduleName":"@rc-hooks/menu"},{"code":"\\n declare module \\"@co-hooks/select\\" { \\n \\nexport * from \'@co-hooks/select/lib/Select\';\\nexport * from \'@co-hooks/select/lib/Option\';\\nexport * from \'@co-hooks/select/lib/OptionGroup\'; \\n \\n } \\n declare module \\"@co-hooks/select/lib/Select\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IOptionData, Option, OptionState } from \'@co-hooks/select/lib/Option\';\\nimport { OptionGroup } from \'@co-hooks/select/lib/OptionGroup\';\\nexport declare type ISelectQuery<T> = (query: string, option: IOptionData<T>) => boolean;\\nexport declare enum SelectAllEnum {\\n    ALL = \\"__all__\\"\\n}\\nexport interface ISelectOptionsExtra<T, P> {\\n    filterOption?: ISelectQuery<T>;\\n    value: T[];\\n    multiple?: boolean;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    showAll?: boolean;\\n    extraProps: P;\\n}\\nexport declare type ISelectOptions<T, P> = ISelectOptionsExtra<T, P>;\\nexport interface ISelectDisplayInfoItem<T> extends IOptionData<T> {\\n    id: string;\\n}\\nexport interface IQueryItemGroupData {\\n    type: \'group\';\\n    title: string;\\n}\\nexport interface IQueryItemOptionData<T> extends IOptionData<T> {\\n    type: \'option\';\\n}\\nexport interface IQueryItemAllData {\\n    type: \'all\';\\n}\\nexport interface IQueryItems<T> {\\n    [key: string]: IQueryItemData<T>;\\n}\\nexport interface ISelectEvent<T> {\\n    \'update-select-all-state\': [];\\n    \'back-fill-update\': [string];\\n    \'search-query\': [IQueryItems<T>];\\n    \'value-change\': [T[], Array<ISelectDisplayInfoItem<T>>];\\n    \'try-set-state\': [string, OptionState];\\n    \'query-change\': [string];\\n    \'select-option-update\': [];\\n    \'select-label-update\': [];\\n}\\nexport declare type IQueryItemData<T> = IQueryItemGroupData | IQueryItemOptionData<T> | IQueryItemAllData;\\nexport declare class Select<T, P> extends Emitter<ISelectEvent<T>> {\\n    multiple: boolean;\\n    disabled: boolean;\\n    readonly: boolean;\\n    searchQuery: string;\\n    private optionMap;\\n    private optionIdSort;\\n    private groupMap;\\n    private value;\\n    private extraProps?;\\n    private backFillId;\\n    private selectAllDisabled;\\n    private selectAllReadonly;\\n    private selectAll;\\n    private showAll;\\n    private showOptionsIdSort;\\n    constructor(options: ISelectOptions<T, P>);\\n    dispose(): void;\\n    updateSelectOptions(options: ISelectOptions<T, P>): void;\\n    updateOptionIdSort(ids: string[]): void;\\n    stepUp(): void;\\n    stepDown(): void;\\n    selectBackFill(): void;\\n    registerOption(option: Option<T, P>): void;\\n    unregisterOption(option: Option<T, P>): void;\\n    registerOptionGroup(optionGroup: OptionGroup<T, P>): void;\\n    unregisterOptionGroup(optionGroup: OptionGroup<T, P>): void;\\n    setQuery(query: string): void;\\n    setSelect(optionId: string, state: OptionState): void;\\n    trySetSelect(optionId: string, state: OptionState): void;\\n    setSelectAll(state: OptionState): void;\\n    resetValue(): void;\\n    isDisabled(): boolean;\\n    isReadonly(): boolean;\\n    isSelected(value: T): boolean;\\n    getShowOptionsIdSort(): string[];\\n    getSelectAllDisabled(): boolean;\\n    getSelectAllReadonly(): boolean;\\n    getSelectAll(): boolean;\\n    getExtraProps(): P | undefined;\\n    getOption(id: string): Option<T, P>;\\n    getDisplayInfo(value?: T[]): Array<ISelectDisplayInfoItem<T>>;\\n    protected filterOption: ISelectQuery<T>;\\n    private updateOptionData;\\n    private defaultQuery;\\n    private querySearch;\\n    private calcShowOptionsIdSort;\\n    private isSelectAllDisabled;\\n    private isSelectAllReadonly;\\n    private isSelectAll;\\n} \\n \\n } \\n declare module \\"@co-hooks/select/lib/Option\\" { \\n import { Emitter } from \'@co-hooks/emitter\';\\nimport { OptionGroup } from \'@co-hooks/select/lib/OptionGroup\';\\nimport { Select } from \'@co-hooks/select/lib/Select\';\\nexport interface IOptionData<T> {\\n    value: T;\\n    label: string;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    selected?: boolean;\\n}\\nexport declare enum OptionState {\\n    SELECTED = 2,\\n    UNSELECTED = 0\\n}\\nexport interface IOptionEvent {\\n    \'state-updated\': [];\\n}\\nexport declare type IOptionType = \'group\' | \'option\';\\nexport interface IOption {\\n    getId: () => string;\\n    getOptionIdPath: () => string[];\\n    isGroup: () => boolean;\\n}\\nexport declare class Option<T, P> extends Emitter<IOptionEvent> implements IOption {\\n    private readonly id;\\n    private readonly select;\\n    private readonly optionGroup;\\n    private data;\\n    private disposed;\\n    constructor(select: Select<T, P>, data: IOptionData<T>, id?: string, optionGroup?: OptionGroup<T, P>);\\n    updateOption(data: IOptionData<T>): void;\\n    setOptionState(state: OptionState): void;\\n    updateSelected(selected: boolean): void;\\n    getOptionState(): OptionState;\\n    getId(): string;\\n    getData(): IOptionData<T>;\\n    getOptionIdPath(): string[];\\n    isGroup(): boolean;\\n    stateUpdated(): void;\\n    dispose(): void;\\n} \\n \\n } \\n declare module \\"@co-hooks/select/lib/OptionGroup\\" { \\n\\n\\nimport { EventEmitter } from \'events\';\\nimport { IOption, Option } from \'@co-hooks/select/lib/Option\';\\nimport { Select } from \'@co-hooks/select/lib/Select\';\\nexport interface IOptionGroupOptions {\\n    title: string;\\n}\\nexport declare class OptionGroup<T, P> extends EventEmitter implements IOption {\\n    private readonly id;\\n    private select;\\n    private readonly parent;\\n    private optionMap;\\n    private groupMap;\\n    private title;\\n    private disposed;\\n    constructor(select: Select<T, P>, id?: string, optionGroup?: OptionGroup<T, P>);\\n    dispose(): void;\\n    updateOptionGroupOptions(options: IOptionGroupOptions): void;\\n    registerOption(option: Option<T, P>): void;\\n    unregisterOption(option: Option<T, P>): void;\\n    registerOptionGroup(optionGroup: OptionGroup<T, P>): void;\\n    unregisterOptionGroup(optionGroup: OptionGroup<T, P>): void;\\n    getOptionIdPath(): string[];\\n    isGroup(): boolean;\\n    getId(): string;\\n    getTitle(): string;\\n} \\n  \\n}","moduleName":"@co-hooks/select"},{"code":"\\n declare module \\"@rc-hooks/select\\" { \\n \\nexport * from \'@rc-hooks/select/hooks/useSelect\';\\nexport * from \'@rc-hooks/select/hooks/useCreateSelect\';\\nexport * from \'@rc-hooks/select/hooks/useOption\';\\nexport * from \'@rc-hooks/select/hooks/useOptionGroup\';\\nexport * from \'@rc-hooks/select/hooks/useOptionUpdate\';\\nexport * from \'@rc-hooks/select/components/RcOptionGroup\';\\nexport * from \'@rc-hooks/select/components/RcSelectProvider\';\\nexport * from \'@co-hooks/select\'; \\n \\n } \\n declare module \\"@rc-hooks/select/hooks/useSelect\\" { \\n import { Select } from \'@co-hooks/select\';\\nexport declare function useSelect<T, P>(): Select<T, P>; \\n \\n } \\n declare module \\"@rc-hooks/select/hooks/useCreateSelect\\" { \\n \\nimport { ISelectDisplayInfoItem, ISelectOptions, Select } from \'@co-hooks/select\';\\nexport interface ISelect<T, P> extends ISelectOptions<T, P> {\\n    autoClearSearchValue?: boolean;\\n    onChange: (value: T[], info: Array<ISelectDisplayInfoItem<T>>) => void;\\n}\\nexport interface IUseCreateSelectResult<T, P> {\\n    select: Select<T, P>;\\n}\\nexport declare function useCreateSelect<T, P>(options: ISelect<T, P>): IUseCreateSelectResult<T, P>; \\n \\n } \\n declare module \\"@rc-hooks/select/hooks/useOption\\" { \\n import { IOptionData, IQueryItems, Option } from \'@co-hooks/select\';\\nexport declare type SearchQueryEvent<T> = (optionMap: IQueryItems<T>) => void;\\nexport declare type BackFillUpdateEvent = (backFill: string) => void;\\nexport declare function useOption<T, P>(data: IOptionData<T>, id?: string, onSearchQuery?: SearchQueryEvent<T>, onBackFillUpdate?: BackFillUpdateEvent): Option<T, P>; \\n \\n } \\n declare module \\"@rc-hooks/select/hooks/useOptionGroup\\" { \\n import { OptionGroup } from \'@co-hooks/select\';\\nexport declare function useOptionGroup<T, P>(): OptionGroup<T, P> | null; \\n \\n } \\n declare module \\"@rc-hooks/select/hooks/useOptionUpdate\\" { \\n export declare function useOptionUpdate(): void; \\n \\n } \\n declare module \\"@rc-hooks/select/components/RcOptionGroup\\" { \\n \\nimport React from \'react\';\\nimport { IOptionGroupOptions } from \'@co-hooks/select\';\\nexport interface IRcOptionGroup {\\n    groupId?: string;\\n    children?: React.ReactNode;\\n}\\nexport declare type IRcOptionGroupProps = IOptionGroupOptions & IRcOptionGroup;\\nexport declare function RcOptionGroup(props: IRcOptionGroupProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/select/components/RcSelectProvider\\" { \\n \\nimport React from \'react\';\\nimport { Select } from \'@co-hooks/select\';\\nexport interface IRcSelectProvider<T, P> {\\n    select: Select<T, P>;\\n    children: React.ReactNode;\\n}\\nexport declare type IRcSelectProviderProps<T, P> = IRcSelectProvider<T, P>;\\nexport declare function RcSelectProvider<T, P>(props: IRcSelectProviderProps<T, P>): JSX.Element; \\n  \\n}","moduleName":"@rc-hooks/select"},{"code":"\\n declare module \\"@co-hooks/tree\\" { \\n \\nexport * from \'@co-hooks/tree/lib/CascaderCore\';\\nexport * from \'@co-hooks/tree/lib/Cascader\'; \\n \\n } \\n declare module \\"@co-hooks/tree/lib/CascaderCore\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nexport declare enum CascaderState {\\n    UNSELECTED = 0,\\n    PARTIAL = 1,\\n    SELECTED = 2\\n}\\nexport interface ICascaderDatasource<T, P> {\\n    value: T;\\n    type?: string;\\n    label: string;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    needLoad?: boolean;\\n    selectable?: boolean;\\n    showAll?: boolean;\\n    children?: Array<ICascaderDatasource<T, P>>;\\n    extra?: P;\\n}\\nexport declare type ICascaderLoad<T, P> = (item: IHashMapItem<T, P>) => Promise<Array<ICascaderDatasource<T, P>>>;\\nexport declare type renderColumnTitles<T, P> = (info: IHashMapItem<T, P>) => string | null;\\nexport declare type IColumnTitles<T, P> = string[] | renderColumnTitles<T, P>;\\nexport interface ICascaderCoreOption<T, P> {\\n    columnTitles?: IColumnTitles<T, P>;\\n    datasource: Array<ICascaderDatasource<T, P>>;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    showAll?: boolean;\\n    multiple?: boolean;\\n    spread?: boolean;\\n    load?: ICascaderLoad<T, P>;\\n    value: T[];\\n    expandedIds?: T[];\\n    defaultExpandedIds?: T[];\\n    accordion?: boolean;\\n    partialCheckAble?: boolean;\\n    selectToExpand?: boolean;\\n}\\nexport interface IHashMapItem<T, P> {\\n    id: string;\\n    parentId: string | null;\\n    isLeaf: boolean;\\n    needLoad: boolean;\\n    loading: boolean;\\n    selectable: boolean;\\n    readonly: boolean;\\n    disabled: boolean;\\n    showAll: boolean;\\n    level: number;\\n    type: string;\\n    value: T;\\n    values: T[];\\n    label: string;\\n    state: CascaderState;\\n    search: string;\\n    nodePath: string[];\\n    children: Array<IHashMapItem<T, P>>;\\n    extra?: P;\\n}\\nexport interface IValueMap {\\n    id: string;\\n    map: {\\n        [key: string]: IValueMap;\\n    };\\n}\\nexport interface IGroupDisplayInfoItem<T, P> {\\n    list: Array<IHashMapItem<T, P>>;\\n    level: number;\\n}\\nexport interface ICascaderCoreEvent<T> {\\n    \'value-change\': [];\\n    \'change\': [T[]];\\n    \'query-change\': [string[]];\\n    \'reset\': [];\\n}\\nexport interface ICascader<T, P> {\\n    multiple: boolean;\\n    dispose(): void;\\n    getRootId(): string;\\n    getItemInfo(id: string): IHashMapItem<T, P>;\\n    setItemState(id: string, newState?: CascaderState): void;\\n    resetState(): void;\\n    setQuery(query: string): void;\\n    getQueries(): string[];\\n    getDisplayInfo(): Array<IHashMapItem<T, P>>;\\n    getGroupDisplayInfo(): Array<IGroupDisplayInfoItem<T, P>>;\\n}\\nexport declare class CascaderCore<T, P, E extends ICascaderCoreEvent<T>> extends Emitter<E> implements ICascader<T, P> {\\n    multiple: boolean;\\n    protected value: T[];\\n    protected spread: boolean;\\n    protected disabled: boolean;\\n    protected readonly: boolean;\\n    protected showAll: boolean;\\n    protected hashMap: {\\n        [key: string]: IHashMapItem<T, P>;\\n    };\\n    protected valueHash: {\\n        [key: string]: string;\\n    };\\n    protected valueMap: {\\n        [key: string]: IValueMap;\\n    };\\n    protected root: string;\\n    protected datasource: Array<ICascaderDatasource<T, P>>;\\n    protected queries: string[];\\n    protected columnTitles: IColumnTitles<T, P>;\\n    protected accordion: boolean;\\n    protected partialCheckAble: boolean;\\n    protected selectToExpand: boolean;\\n    \\n    dispose(): void;\\n    \\n    getRootId(): string;\\n    \\n    getItemInfo(id: string): IHashMapItem<T, P>;\\n    \\n    setItemState(id: string, newState?: CascaderState): void;\\n    \\n    resetState(): void;\\n    \\n    setQuery(query: string): void;\\n    \\n    getQueries(): string[];\\n    \\n    getDisplayInfo(): Array<IHashMapItem<T, P>>;\\n    \\n    getGroupDisplayInfo(): Array<IGroupDisplayInfoItem<T, P>>;\\n    getDescendants(ancestorId: string): string[];\\n    isAncestor(ancestorId: string, descendantId: string): boolean;\\n    \\n    protected setQueryState(ids: string[], newState?: CascaderState): [Array<IHashMapItem<T, P>>, CascaderState];\\n    \\n    protected updateCascaderOptions(options: ICascaderCoreOption<T, P>): {\\n        needUpdateDatasource: boolean;\\n        needUpdateValue: boolean;\\n    };\\n    protected load: ICascaderLoad<T, P>;\\n    protected setHashState(id: string, state: CascaderState, deep?: boolean): void;\\n    protected needUpdate(options: ICascaderCoreOption<T, P>): [boolean, boolean];\\n    protected createDataHashMap(data: ICascaderDatasource<T, P>, parentId?: string | null, level?: number): IHashMapItem<T, P>;\\n    protected resetHashState(): void;\\n    protected updateSelectedState(id: string, state: CascaderState): void;\\n    protected getIdFromSelected(): string[];\\n    protected getValueFromSelected(): T[];\\n    protected setValueToSelected(value: T[], notReset?: boolean): void;\\n    \\n    protected getIdByValue(value: T): string;\\n    \\n    protected getIdsByValues(values: T[]): string[];\\n} \\n \\n } \\n declare module \\"@co-hooks/tree/lib/Cascader\\" { \\n \\nimport { CascaderCore, CascaderState, ICascaderCoreEvent, ICascaderCoreOption } from \'@co-hooks/tree/lib/CascaderCore\';\\nexport interface ICascaderExtra<T> {\\n    columnWidth?: number;\\n    onChange?: (value: T[]) => void;\\n    onExpand?: (value: T[]) => void;\\n}\\nexport declare type ICascaderOptions<T, P> = ICascaderExtra<T> & ICascaderCoreOption<T, P>;\\nexport interface ICascaderEvent<T> extends ICascaderCoreEvent<T> {\\n    \'expanded-change\': [];\\n    \'expanded\': [T[]];\\n    \'item-loading\': [string];\\n    \'try-set-item-state\': [];\\n}\\nexport declare class Cascader<T, P> extends CascaderCore<T, P, ICascaderEvent<T>> {\\n    treeSearchMatchNodes: string[] | null;\\n    columnWidth: number;\\n    private expandedIds;\\n    private inited;\\n    \\n    updateCascader(options: ICascaderOptions<T, P>): void;\\n    dispose(): void;\\n    getColumnTitle(idx: number, parentId: string): string | null;\\n    getExpandedIdsByValue(value: T[]): string[];\\n    \\n    setExpanded(id: string, expanded?: boolean): void;\\n    getValueFromExpanded(withLeaf?: boolean): T[];\\n    \\n    getExpandedIds(): string[];\\n    getExpandedItemIds(): string[];\\n    \\n    setItemState(id: string, newState?: CascaderState): void;\\n    \\n    resetValue(): void;\\n    setTreeSearch(query: string): void;\\n    matchTreeSearch(id: string): boolean;\\n    private setExpandedBySetValue;\\n    private isItemExpended;\\n} \\n  \\n}","moduleName":"@co-hooks/tree"},{"code":"\\n declare module \\"@rc-hooks/tree\\" { \\n \\nexport * from \'@rc-hooks/tree/components/RcCascaderProvider\';\\nexport * from \'@rc-hooks/tree/hooks/useCascader\';\\nexport * from \'@rc-hooks/tree/hooks/useCascaderExpanded\';\\nexport * from \'@rc-hooks/tree/hooks/useCascaderItem\';\\nexport * from \'@rc-hooks/tree/hooks/useCascaderRoot\';\\nexport * from \'@rc-hooks/tree/hooks/useCascaderSearch\';\\nexport * from \'@rc-hooks/tree/hooks/useCascaderDatasource\';\\nexport * from \'@rc-hooks/tree/hooks/useMultipleCascaderDatasource\';\\nexport * from \'@rc-hooks/tree/hooks/useCreateCascader\';\\nexport * from \'@co-hooks/tree\'; \\n \\n } \\n declare module \\"@rc-hooks/tree/components/RcCascaderProvider\\" { \\n \\nimport React from \'react\';\\nimport { Cascader } from \'@co-hooks/tree\';\\nexport interface IRcCascaderProviderProps<T, P> {\\n    cascader: Cascader<T, P>;\\n    children?: React.ReactNode;\\n}\\nexport declare function RcCascaderProvider<T, P>(props: IRcCascaderProviderProps<T, P>): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/tree/hooks/useCascader\\" { \\n \\nimport { ICascader } from \'@co-hooks/tree\';\\nexport declare function useCascader<T, P>(): ICascader<T, P>; \\n \\n } \\n declare module \\"@rc-hooks/tree/hooks/useCascaderExpanded\\" { \\n \\nexport declare function useCascaderExpanded(): string[]; \\n \\n } \\n declare module \\"@rc-hooks/tree/hooks/useCascaderItem\\" { \\n import { IHashMapItem } from \'@co-hooks/tree\';\\nexport declare function useCascaderItem<T, P>(id: string): IHashMapItem<T, P>; \\n \\n } \\n declare module \\"@rc-hooks/tree/hooks/useCascaderRoot\\" { \\n \\nimport { IHashMapItem } from \'@co-hooks/tree\';\\nexport declare function useCascaderRoot<T, P>(): IHashMapItem<T, P>; \\n \\n } \\n declare module \\"@rc-hooks/tree/hooks/useCascaderSearch\\" { \\n \\nexport declare function useCascaderSearch<T, P>(): [string, string[], (newQuery: string) => void]; \\n \\n } \\n declare module \\"@rc-hooks/tree/hooks/useCascaderDatasource\\" { \\n import { ICascaderDatasource } from \'@co-hooks/tree\';\\nexport interface IDatasourceHashMap<T> {\\n    [key: string]: T[];\\n}\\nexport interface IUseCascaderDatasourceResult<T, P> {\\n    value: string;\\n    datasource: Array<ICascaderDatasource<string, P>>;\\n    onChange: (value?: string) => void;\\n}\\nexport declare function useCascaderDatasource<T, P>(value: T[], datasource: Array<ICascaderDatasource<T, P>>, onChange: (value: T[]) => void): IUseCascaderDatasourceResult<T, P>;\\nexport declare function createDatasource<T, P>(datasource: Array<ICascaderDatasource<T, P>>, rootValue: T[] | undefined, hashMap: IDatasourceHashMap<T>): Array<ICascaderDatasource<string, P>>; \\n \\n } \\n declare module \\"@rc-hooks/tree/hooks/useMultipleCascaderDatasource\\" { \\n import { ICascaderDatasource } from \'@co-hooks/tree\';\\nexport interface IUseMultipleCascaderDatasourceResult<T, P> {\\n    value: string[];\\n    datasource: Array<ICascaderDatasource<string, P>>;\\n    onChange: (value: string[]) => void;\\n}\\nexport declare function useMultipleCascaderDatasource<T, P>(value: T[][], datasource: Array<ICascaderDatasource<T, P>>, onChange: (value: T[][]) => void): IUseMultipleCascaderDatasourceResult<T, P>; \\n \\n } \\n declare module \\"@rc-hooks/tree/hooks/useCreateCascader\\" { \\n \\nimport { Cascader, ICascaderOptions } from \'@co-hooks/tree\';\\nexport interface IUseCascaderUniqueResult<T, P> {\\n    cascader: Cascader<T, P>;\\n}\\nexport declare function useCreateCascader<T, P>(options: ICascaderOptions<T, P>): IUseCascaderUniqueResult<T, P>; \\n  \\n}","moduleName":"@rc-hooks/tree"},{"code":"\\n declare module \\"@co-hooks/popper\\" { \\n \\nexport * from \'@co-hooks/popper/lib/Popper\';\\nexport * from \'@co-hooks/popper/lib/Popover\';\\nexport * from \'@co-hooks/popper/lib/Trigger\';\\nexport * from \'@co-hooks/popper/lib/HoverTrigger\';\\nexport * from \'@co-hooks/popper/lib/TriggerGroup\';\\nexport * from \'@co-hooks/popper/lib/PopperCore\'; \\n \\n } \\n declare module \\"@co-hooks/popper/lib/Popper\\" { \\n \\nimport { Popover } from \'@co-hooks/popper/lib/Popover\';\\nimport { ITrigger } from \'@co-hooks/popper/lib/Trigger\';\\nexport declare class Popper<T> {\\n    private readonly id;\\n    private triggerMap;\\n    private popoverMap;\\n    private showIds;\\n    constructor();\\n    dispose(): void;\\n    registerTrigger(trigger: ITrigger<T>): void;\\n    unregisterTrigger(trigger: ITrigger<T>): void;\\n    registerPopover(popover: Popover<T>): void;\\n    unregisterPopover(popover: Popover<T>): void;\\n    getTrigger(triggerId: string): ITrigger<T>;\\n    getPopover(popoverId: string): Popover<T>;\\n    getShowIds(): string[];\\n    getId(): string;\\n    showPopper(triggerId: string): void;\\n    hidePopper(triggerId: string): void;\\n    updateRefRect(triggerId: string): void;\\n    updatePopoverRect(popoverId: string): void;\\n    setActiveShow(triggerId: string): void;\\n    cancelActiveShow(triggerId: string): void;\\n    isActiveShow(triggerId: string): boolean;\\n    setPopoverShow(popoverId: string, show: boolean): void;\\n    syncSingleGroup(groupId: string, popoverId: string): void;\\n    hideAllPopover(triggerType?: string, excludeIds?: string[]): void;\\n    isTriggerFocus(triggerId: string): boolean;\\n    isPopoverShow(id: string): boolean;\\n} \\n \\n } \\n declare module \\"@co-hooks/popper/lib/Popover\\" { \\n \\nimport { IElementPosition, IOffset, IOverFlowBoundaries } from \'@co-hooks/dom\';\\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport * as CSS from \'csstype\';\\nimport { Popper } from \'@co-hooks/popper/lib/Popper\';\\nexport declare type IRcPlacementLeft = \'left-start\' | \'left\' | \'left-end\';\\nexport declare type IRcPlacementRight = \'right-start\' | \'right\' | \'right-end\';\\nexport declare type IRcPlacementTop = \'top-start\' | \'top\' | \'top-end\';\\nexport declare type IRcPlacementBottom = \'bottom-start\' | \'bottom\' | \'bottom-end\';\\nexport declare type IRcPlacement = IRcPlacementLeft | IRcPlacementRight | IRcPlacementTop | IRcPlacementBottom;\\nexport declare type CSSProperties = CSS.Properties<string | number>;\\nexport interface ITouch {\\n    touchX?: boolean;\\n    touchY?: boolean;\\n    fixed?: boolean;\\n}\\nexport interface IArrowInfo {\\n    arrowStyle: CSSProperties;\\n    arrowDirection: string;\\n}\\nexport declare const reversedDirection: {\\n    left: \'right\';\\n    top: \'bottom\';\\n    right: \'left\';\\n    bottom: \'top\';\\n};\\nexport declare const touchReverse: {\\n    [key: string]: string;\\n};\\nexport declare function getDefaultTouch(): ITouch;\\nexport declare function getDefaultArrowInfo(placement?: IRcPlacement): IArrowInfo;\\nexport declare type IPopoverRefType = \'lastTrigger\' | \'trigger\' | \'popover\';\\nexport interface IPopoverOptions {\\n    refType?: IPopoverRefType;\\n    refId?: string;\\n    triggerIds?: string[];\\n    unionPopoverIds?: string[];\\n    show: boolean;\\n    placement?: IRcPlacement;\\n    offset?: IOffset;\\n    preventOverflow?: boolean;\\n    overflowBoundaries?: IOverFlowBoundaries;\\n    arrow?: boolean;\\n    arrowOffset?: IOffset;\\n}\\nexport interface IPopoverParams<T> {\\n    popper: Popper<T>;\\n    options: IPopoverOptions;\\n    id?: string;\\n    singleGroupId?: string;\\n}\\nexport interface IPopoverEvent {\\n    \'popover-style\': [CSSProperties];\\n    \'last-trigger-update\': [];\\n    \'popover-show\': [boolean];\\n    \'touch-change\': [ITouch];\\n    \'arrow-info-change\': [IArrowInfo];\\n}\\nexport declare class Popover<T> extends Emitter<IPopoverEvent> {\\n    arrowInfo: IArrowInfo;\\n    arrow: boolean;\\n    private readonly id;\\n    private readonly singleGroupId;\\n    private readonly popper;\\n    private triggerIds;\\n    private lastTrigger;\\n    private refType;\\n    private refId;\\n    private unionPopoverIds;\\n    private placement;\\n    private offset;\\n    private preventOverflow;\\n    private overflowBoundaries;\\n    private arrowOffset;\\n    private popoverTouch;\\n    private popover;\\n    private popoverStyle;\\n    private rect;\\n    private disposed;\\n    constructor(params: IPopoverParams<T>);\\n    updatePopover(element: HTMLElement | null): void;\\n    updatePopoverOptions(options: IPopoverOptions): void;\\n    dispose(): void;\\n    getId(): string;\\n    getGroupId(): string;\\n    getPopoverStyle(): CSSProperties;\\n    getArrowStyle(): CSSProperties;\\n    getPopoverFixed(): boolean;\\n    getTriggerIds(): string[];\\n    getRefId(): string;\\n    getRefType(): string;\\n    setLastTrigger(triggerId: string): void;\\n    getLastTrigger(): string;\\n    getUnionPopoverIds(): string[];\\n    showPopover(): void;\\n    hidePopover(): void;\\n    isShow(): boolean;\\n    updateRefRect(): void;\\n    updateRect(rect: IElementPosition): void;\\n    getRect(): IElementPosition;\\n    getTriggerData(): T | null;\\n    onPopperMouseEnter(): void;\\n    onPopperMouseLeave(): void;\\n    onPopperFocus(): void;\\n    onPopperBlur(): void;\\n    getRefTriggerId(): string;\\n    private updatePopperStyle;\\n    private getArrowInfo;\\n    private getOffsetByPlacement;\\n    private getAvailBoundaries;\\n    private getRectByOverflowBoundaries;\\n    private getRefFixed;\\n    private getRefRect;\\n    private getPopover;\\n    private assignRectValue;\\n    private isRectOverBoundary;\\n} \\n \\n } \\n declare module \\"@co-hooks/popper/lib/Trigger\\" { \\n \\nimport { Emitter } from \'@co-hooks/emitter\';\\nimport { IElementPosition, IElementPositionCaptureOptions } from \'@co-hooks/dom\';\\nimport { Popper } from \'@co-hooks/popper/lib/Popper\';\\nimport { TriggerGroup } from \'@co-hooks/popper/lib/TriggerGroup\';\\nexport interface ITriggerOptions<T> {\\n    disabled?: boolean;\\n    captureOptions?: IElementPositionCaptureOptions;\\n    disableToggleClose?: boolean;\\n    data?: T;\\n}\\nexport interface ITrigger<T> {\\n    isTriggerFixed: () => boolean;\\n    setActiveShow: (show: boolean) => void;\\n    getRect: () => IElementPosition;\\n    getData: () => T | null;\\n    getId: () => string;\\n    showPopper: () => void;\\n    hidePopper: () => void;\\n    isGroup: () => this is TriggerGroup<T>;\\n    getTriggerType: () => string;\\n    getTriggerIdPath: () => string[];\\n    getDisableToggleClose: () => boolean;\\n    dispose: () => void;\\n}\\nexport declare type TriggerType = \'hover\' | \'click\' | \'focus\' | \'manual\';\\nexport interface ITriggerEvent {\\n    \'update-active\': [boolean];\\n}\\nexport declare class Trigger<T> extends Emitter<ITriggerEvent> implements ITrigger<T> {\\n    readonly triggerType: TriggerType;\\n    protected readonly popper: Popper<T>;\\n    protected disabled?: boolean;\\n    protected readonly triggerGroup?: TriggerGroup<T>;\\n    protected readonly id: string;\\n    private data;\\n    private reference;\\n    private rect;\\n    private activeShow;\\n    private disposed;\\n    private disableToggleClose;\\n    constructor(popper: Popper<T>, triggerType: TriggerType, id?: string, triggerGroup?: TriggerGroup<T>);\\n    updateReference(reference: HTMLElement | null): void;\\n    updateTriggerOptions(options: ITriggerOptions<T>): void;\\n    dispose(): void;\\n    isTriggerFixed(): boolean;\\n    updateRect(rect: IElementPosition): void;\\n    getRect(): IElementPosition;\\n    getData(): T | null;\\n    getId(): string;\\n    getDisableToggleClose(): boolean;\\n    showPopper(): void;\\n    hidePopper(): void;\\n    setActiveShow(show: boolean): void;\\n    isActiveShow(): boolean;\\n    isFocus(): boolean;\\n    isGroup(): boolean;\\n    getTriggerIdPath(): string[];\\n    getTriggerType(): string;\\n    private getReference;\\n} \\n \\n } \\n declare module \\"@co-hooks/popper/lib/HoverTrigger\\" { \\n \\nimport { ITriggerOptions, Trigger } from \'@co-hooks/popper/lib/Trigger\';\\nexport interface IHoverTriggerOptions<T> extends ITriggerOptions<T> {\\n    showDelay?: number;\\n    hideDelay?: number;\\n}\\nexport declare class HoverTrigger<T> extends Trigger<T> {\\n    private showDelay;\\n    private hideDelay;\\n    private showTimer;\\n    private hideTimer;\\n    updateHoverTriggerOptions(options: Omit<IHoverTriggerOptions<T>, keyof ITriggerOptions<T>>): void;\\n    showPopper(): void;\\n    hidePopper(): void;\\n    private showAbort;\\n    private hideAbort;\\n} \\n \\n } \\n declare module \\"@co-hooks/popper/lib/TriggerGroup\\" { \\n \\nimport { IElementPosition } from \'@co-hooks/dom\';\\nimport { Popper } from \'@co-hooks/popper/lib/Popper\';\\nimport { ITrigger } from \'@co-hooks/popper/lib/Trigger\';\\nexport declare class TriggerGroup<T> implements ITrigger<T> {\\n    private readonly id;\\n    private activeTrigger;\\n    private readonly popper;\\n    private readonly parent;\\n    private readonly triggerMap;\\n    private disposed;\\n    constructor(popper: Popper<T>, parent?: TriggerGroup<T>, triggerId?: string);\\n    getId(): string;\\n    getRect(): IElementPosition;\\n    getData(): T | null;\\n    getTriggerType(): string;\\n    getDisableToggleClose(): boolean;\\n    isTriggerFixed(): boolean;\\n    setActiveShow(show: boolean): void;\\n    setActiveTrigger(triggerId: string): void;\\n    cancelActiveTrigger(triggerId: string): void;\\n    getActiveTrigger(): string;\\n    showPopper(): void;\\n    hidePopper(): void;\\n    isGroup(): boolean;\\n    getTriggerIdPath(): string[];\\n    registerTrigger(trigger: ITrigger<T>): void;\\n    unregisterTrigger(trigger: ITrigger<T>): void;\\n    dispose(): void;\\n    private init;\\n} \\n \\n } \\n declare module \\"@co-hooks/popper/lib/PopperCore\\" { \\n \\nimport { DocClickHandler } from \'@rc-hooks/dom\';\\nimport { Popper } from \'@co-hooks/popper/lib/Popper\';\\ndeclare const DATA_SET_ID_TAG: unique symbol;\\nexport interface IDocumentClickEvent extends MouseEvent {\\n    [DATA_SET_ID_TAG]: string[];\\n}\\nexport declare class PopperCore {\\n    popperMap: {\\n        [key: string]: Popper<unknown>;\\n    };\\n    private eventFlag;\\n    addPopper(popper: Popper<unknown>): void;\\n    removePopper(popper: Popper<unknown>): void;\\n    initPopperCoreEvent(): void;\\n    onDocumentClickCapture: DocClickHandler;\\n    onDocumentClick: DocClickHandler;\\n    private getPopperList;\\n}\\nexport declare const popperCore: PopperCore;\\nexport {}; \\n  \\n}","moduleName":"@co-hooks/popper"},{"code":"\\n declare module \\"@rc-hooks/popper\\" { \\n \\nexport * from \'@rc-hooks/popper/components/RcPopper\';\\nexport * from \'@rc-hooks/popper/components/RcPopperProvider\';\\nexport * from \'@rc-hooks/popper/components/RcHoverTrigger\';\\nexport * from \'@rc-hooks/popper/components/RcClickTrigger\';\\nexport * from \'@rc-hooks/popper/components/RcFocusTrigger\';\\nexport * from \'@rc-hooks/popper/components/RcManualTrigger\';\\nexport * from \'@rc-hooks/popper/components/RcTriggerGroup\';\\nexport * from \'@rc-hooks/popper/context/Popper\';\\nexport * from \'@rc-hooks/popper/context/TriggerGroup\';\\nexport * from \'@rc-hooks/popper/hooks/usePopper\';\\nexport * from \'@rc-hooks/popper/hooks/useGetPopper\';\\nexport * from \'@rc-hooks/popper/hooks/useGetPopover\';\\nexport * from \'@rc-hooks/popper/hooks/useGetTrigger\';\\nexport * from \'@rc-hooks/popper/hooks/usePopover\';\\nexport * from \'@rc-hooks/popper/hooks/useTrigger\';\\nexport * from \'@rc-hooks/popper/hooks/useTriggerGroup\';\\nexport * from \'@rc-hooks/popper/hooks/useManualTrigger\';\\nexport * from \'@co-hooks/popper\'; \\n \\n } \\n declare module \\"@rc-hooks/popper/components/RcPopper\\" { \\n \\nimport React from \'react\';\\ninterface IRcPopper {\\n    children?: React.ReactNode;\\n}\\nexport declare type IRcPopperProps = IRcPopper;\\nexport declare function RcPopper(props: IRcPopperProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@rc-hooks/popper/components/RcPopperProvider\\" { \\n \\nimport { ReactNode } from \'react\';\\nimport { Popper } from \'@co-hooks/popper\';\\nexport interface IRcPopperProvider<T> {\\n    popper: Popper<T>;\\n    children?: ReactNode;\\n}\\nexport declare type IRcPopperProviderProps<T> = IRcPopperProvider<T>;\\nexport declare function RcPopperProvider<T>(props: IRcPopperProviderProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/popper/components/RcHoverTrigger\\" { \\n \\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes, Ref } from \'react\';\\nimport { IHoverTriggerOptions } from \'@co-hooks/popper\';\\nimport { IUseTriggerResult } from \'@rc-hooks/popper/hooks/useTrigger\';\\nexport interface IRcHoverTrigger<T> extends IHoverTriggerOptions<T> {\\n    ref?: Ref<T>;\\n    triggerId?: string;\\n    children?: ((data: IUseTriggerResult) => React.ReactNode) | React.ReactNode;\\n}\\nexport declare type IRcHoverTriggerProps<T> = UnionOmit<IRcHoverTrigger<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare const RcHoverTrigger: <T>(props: UnionOmit<IRcHoverTrigger<T>, React.HTMLAttributes<HTMLSpanElement>>) => JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/popper/components/RcClickTrigger\\" { \\n \\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes, Ref } from \'react\';\\nimport { ITriggerOptions } from \'@co-hooks/popper\';\\nimport { IUseTriggerResult } from \'@rc-hooks/popper/hooks/useTrigger\';\\nexport interface IRcClickTrigger<T> extends ITriggerOptions<T> {\\n    ref?: Ref<T>;\\n    triggerId?: string;\\n    children?: ((data: IUseTriggerResult) => React.ReactNode) | React.ReactNode;\\n}\\nexport declare type IRcClickTriggerProps<T> = UnionOmit<IRcClickTrigger<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare const RcClickTrigger: <T>(props: UnionOmit<IRcClickTrigger<T>, React.HTMLAttributes<HTMLSpanElement>>) => JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/popper/components/RcFocusTrigger\\" { \\n \\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes, Ref } from \'react\';\\nimport { ITriggerOptions } from \'@co-hooks/popper\';\\nimport { IUseTriggerResult } from \'@rc-hooks/popper/hooks/useTrigger\';\\nexport interface IRcFocusTrigger<T> extends ITriggerOptions<T> {\\n    ref?: Ref<T>;\\n    triggerId?: string;\\n    children?: ((data: IUseTriggerResult) => React.ReactNode) | React.ReactNode;\\n}\\nexport declare type IRcFocusTriggerProps<T> = UnionOmit<IRcFocusTrigger<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare const RcFocusTrigger: <T>(props: UnionOmit<IRcFocusTrigger<T>, React.HTMLAttributes<HTMLSpanElement>>) => JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/popper/components/RcManualTrigger\\" { \\n \\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes, Ref } from \'react\';\\nimport { ITriggerOptions } from \'@co-hooks/popper\';\\nimport { IUseTriggerResult } from \'@rc-hooks/popper/hooks/useTrigger\';\\nexport interface IRcManualTrigger<T> extends ITriggerOptions<T> {\\n    ref?: Ref<T>;\\n    triggerId?: string;\\n    children?: ((data: IUseTriggerResult) => React.ReactNode) | React.ReactNode;\\n    show?: boolean;\\n}\\nexport declare type IRcManualTriggerProps<T> = UnionOmit<IRcManualTrigger<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare const RcManualTrigger: <T>(props: UnionOmit<IRcManualTrigger<T>, React.HTMLAttributes<HTMLSpanElement>>) => JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/popper/components/RcTriggerGroup\\" { \\n \\nimport React from \'react\';\\nexport interface IRcTriggerGroup {\\n    triggerGroupId?: string;\\n    children?: React.ReactNode;\\n}\\nexport declare type IRcTriggerGroupProps = IRcTriggerGroup;\\nexport declare function RcTriggerGroup(props: IRcTriggerGroupProps): JSX.Element; \\n \\n } \\n declare module \\"@rc-hooks/popper/context/Popper\\" { \\n \\nimport React from \'react\';\\nimport { Popper } from \'@co-hooks/popper\';\\nexport interface IPopperContext {\\n    popper: Popper<unknown> | null;\\n}\\nexport declare const PopperContext: React.Context<IPopperContext>; \\n \\n } \\n declare module \\"@rc-hooks/popper/context/TriggerGroup\\" { \\n \\nimport React from \'react\';\\nimport { TriggerGroup } from \'@co-hooks/popper\';\\nexport declare const TriggerGroupContext: React.Context<TriggerGroup<unknown> | null>; \\n \\n } \\n declare module \\"@rc-hooks/popper/hooks/usePopper\\" { \\n import { Popper } from \'@co-hooks/popper\';\\nexport interface IUsePopperResult<T> {\\n    popper: Popper<T>;\\n}\\nexport declare function usePopper<T>(): IUsePopperResult<T>; \\n \\n } \\n declare module \\"@rc-hooks/popper/hooks/useGetPopper\\" { \\n \\nimport { Popper } from \'@co-hooks/popper\';\\nexport declare function useGetPopper<T>(): Popper<T>; \\n \\n } \\n declare module \\"@rc-hooks/popper/hooks/useGetPopover\\" { \\n \\nimport { Popover } from \'@co-hooks/popper\';\\nexport declare function useGetPopover<T>(popoverId: string): Popover<T>; \\n \\n } \\n declare module \\"@rc-hooks/popper/hooks/useGetTrigger\\" { \\n \\nimport { ITrigger } from \'@co-hooks/popper\';\\nexport declare function useGetTrigger<T>(triggerId: string): ITrigger<T>; \\n \\n } \\n declare module \\"@rc-hooks/popper/hooks/usePopover\\" { \\n \\nimport { IElementPositionCaptureOptions } from \'@rc-hooks/dom\';\\nimport { RefObject } from \'react\';\\nimport { IPopoverOptions, ITouch, Popover } from \'@co-hooks/popper\';\\nexport interface IUsePopoverOptions extends Partial<IPopoverOptions> {\\n    arrowRef: RefObject<HTMLElement>;\\n    defaultShow?: boolean;\\n    popoverId?: string;\\n    popoverRef: RefObject<HTMLElement>;\\n    singleGroupId?: string;\\n    onVisibleChange?: (show: boolean) => void;\\n    onShow?: () => void;\\n    onHide?: () => void;\\n    captureOptions?: IElementPositionCaptureOptions;\\n}\\nexport interface IUsePopoverResult<T> {\\n    popover: Popover<T>;\\n    touch: ITouch;\\n}\\nexport declare function usePopover<T>(options: IUsePopoverOptions): IUsePopoverResult<T>; \\n \\n } \\n declare module \\"@rc-hooks/popper/hooks/useTrigger\\" { \\n import { RefObject } from \'react\';\\nimport { ITriggerOptions, Popper, Trigger, TriggerGroup, TriggerType } from \'@co-hooks/popper\';\\nexport interface IUseTriggerResult {\\n    activeShow: boolean;\\n}\\nexport declare type IGetTrigger<T, TG> = (popper: Popper<T>, triggerType: TriggerType, triggerId?: string, triggerGroup?: TriggerGroup<T>) => TG;\\nexport declare function useTrigger<T, TG extends Trigger<T>, W extends ITriggerOptions<T>>(getTrigger: IGetTrigger<T, TG>, options: W, triggerRef: RefObject<HTMLElement>, triggerType: TriggerType, triggerId?: string): [TG, IUseTriggerResult, Omit<W, keyof ITriggerOptions<T>>]; \\n \\n } \\n declare module \\"@rc-hooks/popper/hooks/useTriggerGroup\\" { \\n import { TriggerGroup } from \'@co-hooks/popper\';\\nexport declare function useTriggerGroup<T>(): TriggerGroup<T> | undefined; \\n \\n } \\n declare module \\"@rc-hooks/popper/hooks/useManualTrigger\\" { \\n \\nimport { RefObject } from \'react\';\\nimport { ITriggerOptions, Trigger } from \'@co-hooks/popper\';\\nexport declare function useManualTrigger<T, W extends Omit<ITriggerOptions<T>, \'defaultTrigger\'>>(options: W, triggerRef: RefObject<HTMLElement>): [Trigger<T>, () => void, () => void]; \\n  \\n}","moduleName":"@rc-hooks/popper"},{"code":"\\n declare module \\"@byte-design/ui\\" { \\n export * from \'@byte-design/ui/components/anchor\';\\nexport * from \'@byte-design/ui/components/auto-complete\';\\nexport * from \'@byte-design/ui/components/avatar\';\\nexport * from \'@byte-design/ui/components/back-top\';\\nexport * from \'@byte-design/ui/components/badge\';\\nexport * from \'@byte-design/ui/components/breadcrumb\';\\nexport * from \'@byte-design/ui/components/button\';\\nexport * from \'@byte-design/ui/components/card\';\\nexport * from \'@byte-design/ui/components/carousel\';\\nexport * from \'@byte-design/ui/components/cascader\';\\nexport * from \'@byte-design/ui/components/cascader-list\';\\nexport * from \'@byte-design/ui/components/cascader-panel\';\\nexport * from \'@byte-design/ui/components/check-group\';\\nexport * from \'@byte-design/ui/components/checkbox\';\\nexport * from \'@byte-design/ui/components/col\';\\nexport * from \'@byte-design/ui/components/collapse\';\\nexport * from \'@byte-design/ui/components/color-panel\';\\nexport * from \'@byte-design/ui/components/config-provider\';\\nexport * from \'@byte-design/ui/components/cropper\';\\nexport * from \'@byte-design/ui/components/date-comparison-panel\';\\nexport * from \'@byte-design/ui/components/date-comparison-picker\';\\nexport * from \'@byte-design/ui/components/date-panel\';\\nexport * from \'@byte-design/ui/components/date-picker\';\\nexport * from \'@byte-design/ui/components/date-range-panel\';\\nexport * from \'@byte-design/ui/components/date-range-picker\';\\nexport * from \'@byte-design/ui/components/date-time-panel\';\\nexport * from \'@byte-design/ui/components/date-time-picker\';\\nexport * from \'@byte-design/ui/components/divider\';\\nexport * from \'@byte-design/ui/components/drawer\';\\nexport * from \'@byte-design/ui/components/dropdown\';\\nexport * from \'@byte-design/ui/components/empty\';\\nexport * from \'@byte-design/ui/components/error-boundary\';\\nexport * from \'@byte-design/ui/components/form\';\\nexport * from \'@byte-design/ui/components/form-container\';\\nexport * from \'@byte-design/ui/components/image-view\';\\nexport * from \'@byte-design/ui/components/info\';\\nexport * from \'@byte-design/ui/components/input\';\\nexport * from \'@byte-design/ui/components/input-number\';\\nexport * from \'@byte-design/ui/components/layout\';\\nexport * from \'@byte-design/ui/components/link\';\\nexport * from \'@byte-design/ui/components/list\';\\nexport * from \'@byte-design/ui/components/list-viewer\';\\nexport * from \'@byte-design/ui/components/loading\';\\nexport * from \'@byte-design/ui/components/menu\';\\nexport * from \'@byte-design/ui/components/message\';\\nexport * from \'@byte-design/ui/components/modal\';\\nexport * from \'@byte-design/ui/components/month-panel\';\\nexport * from \'@byte-design/ui/components/month-picker\';\\nexport * from \'@byte-design/ui/components/month-range-panel\';\\nexport * from \'@byte-design/ui/components/month-range-picker\';\\nexport * from \'@byte-design/ui/components/multiple-auto-complete\';\\nexport * from \'@byte-design/ui/components/multiple-cascader\';\\nexport * from \'@byte-design/ui/components/multiple-cascader-panel\';\\nexport * from \'@byte-design/ui/components/multiple-date-panel\';\\nexport * from \'@byte-design/ui/components/multiple-date-picker\';\\nexport * from \'@byte-design/ui/components/multiple-month-panel\';\\nexport * from \'@byte-design/ui/components/multiple-month-picker\';\\nexport * from \'@byte-design/ui/components/multiple-rimless-select\';\\nexport * from \'@byte-design/ui/components/multiple-select\';\\nexport * from \'@byte-design/ui/components/multiple-tree\';\\nexport * from \'@byte-design/ui/components/multiple-tree-select\';\\nexport * from \'@byte-design/ui/components/multiple-week-panel\';\\nexport * from \'@byte-design/ui/components/multiple-week-picker\';\\nexport * from \'@byte-design/ui/components/multiple-year-panel\';\\nexport * from \'@byte-design/ui/components/multiple-year-picker\';\\nexport * from \'@byte-design/ui/components/notification\';\\nexport * from \'@byte-design/ui/components/pager\';\\nexport * from \'@byte-design/ui/components/popover\';\\nexport * from \'@byte-design/ui/components/progress\';\\nexport * from \'@byte-design/ui/components/pure-table\';\\nexport * from \'@byte-design/ui/components/radio\';\\nexport * from \'@byte-design/ui/components/radio-group\';\\nexport * from \'@byte-design/ui/components/range-slider\';\\nexport * from \'@byte-design/ui/components/rate\';\\nexport * from \'@byte-design/ui/components/rimless-select\';\\nexport * from \'@byte-design/ui/components/row\';\\nexport * from \'@byte-design/ui/components/schedule\';\\nexport * from \'@byte-design/ui/components/select\';\\nexport * from \'@byte-design/ui/components/skeleton\';\\nexport * from \'@byte-design/ui/components/slider\';\\nexport * from \'@byte-design/ui/components/steps\';\\nexport * from \'@byte-design/ui/components/sticky\';\\nexport * from \'@byte-design/ui/components/switch\';\\nexport * from \'@byte-design/ui/components/table\';\\nexport * from \'@byte-design/ui/components/tabs\';\\nexport * from \'@byte-design/ui/components/tabs-card\';\\nexport * from \'@byte-design/ui/components/tag\';\\nexport * from \'@byte-design/ui/components/text-area\';\\nexport * from \'@byte-design/ui/components/time-panel\';\\nexport * from \'@byte-design/ui/components/time-picker\';\\nexport * from \'@byte-design/ui/components/time-range-panel\';\\nexport * from \'@byte-design/ui/components/time-range-picker\';\\nexport * from \'@byte-design/ui/components/timeline\';\\nexport * from \'@byte-design/ui/components/tooltip\';\\nexport * from \'@byte-design/ui/components/transfer\';\\nexport * from \'@byte-design/ui/components/tree\';\\nexport * from \'@byte-design/ui/components/tree-select\';\\nexport * from \'@byte-design/ui/components/typography\';\\nexport * from \'@byte-design/ui/components/upload\';\\nexport * from \'@byte-design/ui/components/week-panel\';\\nexport * from \'@byte-design/ui/components/week-picker\';\\nexport * from \'@byte-design/ui/components/year-panel\';\\nexport * from \'@byte-design/ui/components/year-picker\';\\nexport * from \'@byte-design/ui/components/year-range-panel\';\\nexport * from \'@byte-design/ui/components/year-range-picker\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/anchor\\" { \\n import { Anchor, IAnchorProps } from \'@byte-design/ui/components/anchor/Anchor\';\\nimport { IAnchorLinkProps } from \'@byte-design/ui/components/anchor/AnchorLink\';\\nexport { Anchor, IAnchorProps, IAnchorLinkProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/auto-complete\\" { \\n import { AutoComplete, IAutoCompleteProps } from \'@byte-design/ui/components/auto-complete/AutoComplete\';\\nexport { IDataSourceItem } from \'@rc-hooks/autocomplete\';\\nexport { AutoComplete, IAutoCompleteProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/avatar\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport declare type AvatarShape = \'angle\' | \'circle\';\\nexport interface IAvatar {\\n    shape?: AvatarShape;\\n    size?: Exclude<ComponentSize, \'xs\'> | number;\\n    src?: string;\\n    srcSet?: string;\\n    alt?: string;\\n    onError?: () => void;\\n}\\nexport declare type IAvatarProps = UnionOmit<IAvatar, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function Avatar(props: IAvatarProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/back-top\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface IBackTop {\\n    getContainer?: () => HTMLElement;\\n    visibleHeight?: number;\\n    children?: React.ReactNode;\\n    duration?: number;\\n}\\nexport declare type BackTopProps = UnionOmit<IBackTop, HTMLAttributes<HTMLDivElement>>;\\nexport declare function BackTop(props: BackTopProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/badge\\" { \\n import { Badge as BadgeComponent, IBadgeProps } from \'@byte-design/ui/components/badge/Badge\';\\nimport { IBadgeNumberProps, BadgeNumber as Number } from \'@byte-design/ui/components/badge/Number\';\\nimport { BadgeDot as Dot, IBadgeDotProps } from \'@byte-design/ui/components/badge/Dot\';\\nimport { IBadgeTextProps, BadgeText as Text } from \'@byte-design/ui/components/badge/Text\';\\nexport declare const Badge: typeof BadgeComponent & {\\n    Number: typeof Number;\\n    Dot: typeof Dot;\\n    Text: typeof Text;\\n};\\nexport { IBadgeProps, IBadgeDotProps, IBadgeTextProps, IBadgeNumberProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/breadcrumb\\" { \\n import { Breadcrumb } from \'@byte-design/ui/components/breadcrumb/components/Breadcrumb\';\\nimport { IBreadcrumbItemProps, IBreadcrumbProps } from \'@byte-design/ui/components/breadcrumb/types\';\\nexport { IBreadcrumbProps, IBreadcrumbItemProps, Breadcrumb }; \\n \\n } \\n declare module \\"@byte-design/ui/components/button\\" { \\n import { FC } from \'react\';\\nimport { ButtonShape, ButtonType, IButtonProps } from \'@byte-design/ui/components/button/Button\';\\nimport { ICheckableButtonProps } from \'@byte-design/ui/components/button/CheckableButton\';\\nimport { IButtonGroupProps } from \'@byte-design/ui/components/button/Group\';\\nexport declare const Button: FC<IButtonProps> & {\\n    Group: FC<IButtonGroupProps>;\\n    Checkable: FC<ICheckableButtonProps>;\\n};\\nexport { IButtonProps, IButtonGroupProps, ICheckableButtonProps, ButtonType, ButtonShape }; \\n \\n } \\n declare module \\"@byte-design/ui/components/card\\" { \\n import { Card, ICardProps } from \'@byte-design/ui/components/card/Card\';\\nexport { Card, ICardProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/carousel\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ICarouselOptions } from \'@rc-hooks/carousel\';\\nimport React, { HTMLAttributes } from \'react\';\\nimport { CarouselArrowNext, ICarouselArrowNextProps } from \'@byte-design/ui/components/carousel/CarouselArrowNext\';\\nimport { ICarouselArrowPrevProps } from \'@byte-design/ui/components/carousel/CarouselArrowPrev\';\\nimport { ICarouselPaginationProps } from \'@byte-design/ui/components/carousel/CarouselPagination\';\\nimport { ICarouselSliderProps } from \'@byte-design/ui/components/carousel/CarouselSlider\';\\ndeclare type ICarousel = Partial<ICarouselOptions> & {\\n    onActiveChange?: (currentIndex: number) => void;\\n    children?: React.ReactNode;\\n};\\ndeclare type ICarouselProps = UnionOmit<ICarousel, HTMLAttributes<HTMLDivElement>>;\\ndeclare function Carousel(props: ICarouselProps): JSX.Element;\\ndeclare namespace Carousel {\\n    var Slider: (props: UnionOmit<import(\\"./CarouselSlider\\").ICarouselSlider, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element;\\n    var ArrowNext: typeof CarouselArrowNext;\\n    var ArrowPrev: (props: UnionOmit<import(\\"./CarouselArrowPrev\\").ICarouselArrowPrev, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element;\\n    var Pagination: (props: UnionOmit<import(\\"./CarouselPagination\\").ICarouselPagination, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element | null;\\n}\\nexport { Carousel, ICarouselProps, ICarouselSliderProps, ICarouselArrowNextProps, ICarouselArrowPrevProps, ICarouselPaginationProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader\\" { \\n import { Cascader, ICascaderProps } from \'@byte-design/ui/components/cascader/Cascader\';\\nimport { ICascaderSelectPlacement } from \'@byte-design/ui/components/cascader/components/CascaderSelectPopper\';\\nexport { ICascaderSelectPlacement, ICascaderProps, Cascader }; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader-list\\" { \\n export { CascaderList, ICascaderListProps } from \'@byte-design/ui/components/cascader-list/CascaderList\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader-panel\\" { \\n import { CascaderPanel, ICascaderPanelProps } from \'@byte-design/ui/components/cascader-panel/CascaderPanel\';\\nexport { CascaderPanel, ICascaderPanelProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/check-group\\" { \\n import { CheckGroupButton as Button, ICheckGroupButtonProps } from \'@byte-design/ui/components/check-group/Button\';\\nimport { CheckGroupCheckbox as Checkbox, ICheckGroupCheckboxProps } from \'@byte-design/ui/components/check-group/Checkbox\';\\nimport { CheckGroupFreeButton as FreeButton, ICheckGroupFreeButtonProps } from \'@byte-design/ui/components/check-group/FreeButton\';\\nimport { CheckGroup as CheckGroupComponent, ICheckGroupProps } from \'@byte-design/ui/components/check-group/Group\';\\nimport { ICheckGroupTagProps, CheckGroupTag as Tag } from \'@byte-design/ui/components/check-group/Tag\';\\nexport declare const CheckGroup: typeof CheckGroupComponent & {\\n    Button: typeof Button;\\n    Checkbox: typeof Checkbox;\\n    FreeButton: typeof FreeButton;\\n    Tag: typeof Tag;\\n};\\nexport { ICheckGroupProps, ICheckGroupButtonProps, ICheckGroupCheckboxProps, ICheckGroupTagProps, ICheckGroupFreeButtonProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/checkbox\\" { \\n\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ICheckWrapper, ICheckWrapperProps } from \'@byte-design/ui/units/check-wrapper\';\\nexport interface ICheckbox {\\n    indeterminate?: boolean;\\n}\\ndeclare type OmitCheckWrapperPropKeys = \'type\' | \'checkedWave\' | \'waveElementRef\';\\nexport declare type ICheckboxProps = UnionOmit<ICheckbox, Omit<ICheckWrapperProps, OmitCheckWrapperPropKeys>>;\\nexport { ICheckWrapper };\\nexport declare function Checkbox(props: ICheckboxProps): JSX.Element;\\nexport declare namespace Checkbox {\\n    var Valued: typeof ValuedCheckbox;\\n}\\nexport declare type IValuedCheckboxProps<T> = UnionOmit<{\\n    value?: T;\\n    onValueChange?: (value: T) => void;\\n    trueValue: T;\\n    falseValue: T;\\n}, Omit<ICheckboxProps, \'checked\'>>;\\ndeclare function ValuedCheckbox<T>(props: IValuedCheckboxProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/col\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\ndeclare type ColSpanType = number | string;\\nexport interface IColSize {\\n    span?: ColSpanType;\\n    order?: ColSpanType;\\n    offset?: ColSpanType;\\n    push?: ColSpanType;\\n    pull?: ColSpanType;\\n}\\nexport interface ICol {\\n    span?: ColSpanType;\\n    order?: ColSpanType;\\n    offset?: ColSpanType;\\n    push?: ColSpanType;\\n    pull?: ColSpanType;\\n    xxs?: ColSpanType | IColSize;\\n    xs?: ColSpanType | IColSize;\\n    sm?: ColSpanType | IColSize;\\n    md?: ColSpanType | IColSize;\\n    lg?: ColSpanType | IColSize;\\n    xl?: ColSpanType | IColSize;\\n    xxl?: ColSpanType | IColSize;\\n}\\nexport declare type IColProps = UnionOmit<ICol, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Col(props: IColProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/collapse\\" { \\n import { Collapse, CollapseType, ICollapseProps } from \'@byte-design/ui/components/collapse/Collapse\';\\nimport { CollapseItemIconPosition, CollapseItemIconType, ICollapseItemProps } from \'@byte-design/ui/components/collapse/CollapseItem\';\\nimport { ISubCollapseProps } from \'@byte-design/ui/components/collapse/SubCollapse\';\\nexport { Collapse, ICollapseItemProps, ICollapseProps, ISubCollapseProps, CollapseItemIconType, CollapseItemIconPosition, CollapseType }; \\n \\n } \\n declare module \\"@byte-design/ui/components/color-panel\\" { \\n import { IRcColorProps } from \'@rc-hooks/color\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface IColorPanel extends IRcColorProps {\\n    presetColors?: string[];\\n}\\nexport declare type IColorPanelProps = UnionOmit<IColorPanel, HTMLAttributes<HTMLDivElement>>;\\nexport declare function ColorPanel(props: IColorPanelProps): JSX.Element;\\nexport declare namespace ColorPanel {\\n    var Hue: React.MemoExoticComponent<(props: UnionOmit<import(\\"./Hue\\").IHue, UnionOmit<import(\\"./components/ColorSlider\\").IColorSlider, React.HTMLAttributes<HTMLDivElement>>>) => JSX.Element>;\\n    var Saturation: React.MemoExoticComponent<(props: UnionOmit<import(\\"./Saturation\\").ISaturation, UnionOmit<import(\\"./components/ColorSlider\\").IColorSlider, React.HTMLAttributes<HTMLDivElement>>>) => JSX.Element>;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/config-provider\\" { \\n import React from \'react\';\\nimport { IConfigProps } from \'@byte-design/config\';\\nexport interface IConfigProviderProps extends Partial<IConfigProps> {\\n    children: React.ReactNode;\\n}\\nexport declare function ConfigProvider(props: IConfigProviderProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/cropper\\" { \\n import React from \'react\';\\nexport interface IBoundaries {\\n    left?: number;\\n    right?: number;\\n    top?: number;\\n    bottom?: number;\\n}\\nexport interface ICropperRep {\\n    getJpgUrl: () => string | null;\\n    getPngUrl: () => string | null;\\n    getBlob: (type?: string | undefined) => Blob | null;\\n    getImageUrl: (type: string, quality?: number | undefined) => string | null;\\n}\\nexport interface ICropperProps {\\n    url: string;\\n    delay?: number;\\n    fixed?: boolean;\\n    containerWidth?: number;\\n    containerHeight?: number;\\n    minWidth?: number;\\n    minHeight?: number;\\n    aspectRatio?: number;\\n    clipWidth?: number;\\n    clipHeight?: number;\\n    onChange?: (res: ICropperRep) => void;\\n    modalStyle?: React.CSSProperties;\\n}\\nexport declare function Cropper(props: ICropperProps): JSX.Element;\\nexport default Cropper; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-comparison-panel\\" { \\n import { IBaseDateOptions, IDatePresetItem } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { IDateComparisonValue } from \'@byte-design/ui/units/date\';\\nexport interface IDateComparisonPanel extends Partial<IBaseDateOptions> {\\n    value: IDateComparisonValue;\\n    sourceOffset?: number;\\n    targetOffset?: number;\\n    onChange?: (value: IDateComparisonValue) => void;\\n    format?: string;\\n    offset?: number;\\n    sourcePresets?: IDatePresetItem[];\\n    hideComparisonSwitch?: boolean;\\n    getDefaultTargetBySource?: (source: Date[]) => Date[];\\n    getTargetPresets?: (sourceValue: Date[], offset: number | null) => IDatePresetItem[];\\n}\\nexport declare type IDateComparisonPanelProps = UnionOmit<IDateComparisonPanel, HTMLAttributes<HTMLDivElement>>;\\nexport declare function DateComparisonPanel(props: IDateComparisonPanelProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-comparison-picker\\" { \\n import { IBaseDateOptions, IDatePresetItem } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nimport { IDateComparisonValue, IPopperWrapperBase } from \'@byte-design/ui/units/date\';\\nexport interface IDateComparisonPicker extends Partial<IBaseDateOptions>, IPopperWrapperBase {\\n    value: IDateComparisonValue;\\n    sourceOffset?: number;\\n    onChange?: (value: IDateComparisonValue) => void;\\n    format?: string;\\n    offset?: number;\\n    clearable?: boolean;\\n    sourcePresets?: IDatePresetItem[];\\n    getTargetPresets?: (sourceValue: Date[], offset: number | null) => IDatePresetItem[];\\n    footer?: React.ReactNode;\\n    getDefaultTargetBySource?: (source: Date[]) => Date[];\\n    hideComparisonSwitch?: boolean;\\n}\\nexport declare type IDateComparisonPickerProps = UnionOmit<IDateComparisonPicker, HTMLAttributes<HTMLDivElement>>;\\nexport declare function DateComparisonPicker(props: IDateComparisonPickerProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-panel\\" { \\n import { FC } from \'react\';\\nimport { ISimpleDateProps } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const DatePanel: FC<Omit<ISimpleDateProps, keyof IDatePickerProps>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-picker\\" { \\n import { FC } from \'react\';\\nimport { ISimpleDateProps } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nexport { IDateComparisonValue } from \'@byte-design/ui/units/date\';\\nexport { ISimpleDatePresetItem, ISimpleDate } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nexport declare const DatePicker: FC<ISimpleDateProps>;\\nexport { ISimpleDateProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-range-panel\\" { \\n import { FC } from \'react\';\\nimport { IRangeDate } from \'@byte-design/ui/units/date/hoc/withRangeDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const DateRangePanel: FC<Omit<IRangeDate, keyof IDatePickerProps>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-range-picker\\" { \\n import { FC } from \'react\';\\nimport { IRangeDate, IRangeDateProps } from \'@byte-design/ui/units/date/hoc/withRangeDate\';\\nexport declare const DateRangePicker: FC<IRangeDateProps>;\\nexport { IRangeDate, IRangeDateProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-time-panel\\" { \\n export { DateTimePanel, IDateTimePanelProps, IDateTimePanel } from \'@byte-design/ui/components/date-time-panel/DateTimePanel\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-time-picker\\" { \\n import { HTMLAttributes } from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IDateTimePanel } from \'@byte-design/ui/components/date-time-panel\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare type IDateTimePickerProps = UnionOmit<IDateTimePanel & IDatePickerProps, HTMLAttributes<HTMLDivElement>>;\\nexport declare function DateTimePicker(props: IDateTimePickerProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/divider\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport declare type IDividerProps = UnionOmit<IDivider, HTMLAttributes<HTMLDivElement>>;\\nexport declare type DividerType = \'vertical\' | \'horizontal\';\\nexport declare type TextDirection = \'left\' | \'center\' | \'right\';\\nexport interface IDivider {\\n    type?: DividerType;\\n    orientation?: TextDirection;\\n    dashed?: boolean;\\n}\\nexport declare function Divider(props: IDividerProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/drawer\\" { \\n import { Drawer, IDrawerProps } from \'@byte-design/ui/components/drawer/Drawer\';\\nimport { IDrawerPlacement, useDrawerPosition } from \'@byte-design/ui/components/drawer/useDrawerPosition\';\\nexport { Drawer, useDrawerPosition, IDrawerProps, IDrawerPlacement }; \\n \\n } \\n declare module \\"@byte-design/ui/components/dropdown\\" { \\n import { IDropdownMenuProps } from \'@byte-design/ui/components/dropdown/components/DropdownMenu\';\\nimport { IDropdownMenuItemProps } from \'@byte-design/ui/components/dropdown/components/DropdownMenuItem\';\\nimport { IDropdownSubMenuProps } from \'@byte-design/ui/components/dropdown/components/DropdownSubMenu\';\\nimport { Dropdown, IDropdownProps } from \'@byte-design/ui/components/dropdown/Dropdown\';\\nimport { IDropdownButtonProps } from \'@byte-design/ui/components/dropdown/DropdownButton\';\\nimport { IDropdownLinkProps } from \'@byte-design/ui/components/dropdown/DropdownLink\';\\nimport { IDropdownOptions, useDropdown } from \'@byte-design/ui/components/dropdown/useDropdown\';\\nexport { Dropdown, useDropdown, IDropdownProps, IDropdownOptions, IDropdownLinkProps, IDropdownButtonProps, IDropdownMenuProps, IDropdownSubMenuProps, IDropdownMenuItemProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/empty\\" { \\n import { Empty, IEmptyProps } from \'@byte-design/ui/components/empty/Empty\';\\nexport { Empty, IEmptyProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/error-boundary\\" { \\n export { ErrorBoundary, IErrorBoundaryProps, IFallbackComponentProps } from \'@byte-design/ui/components/error-boundary/ErrorBoundary\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/form\\" { \\n import { FormGroup } from \'@byte-design/ui/components/form/FormGroup\';\\nimport { FormItem } from \'@byte-design/ui/components/form/FormItem\';\\nimport { Form as FormComp } from \'@byte-design/ui/components/form/Form\';\\nimport { withField } from \'@byte-design/ui/components/form/withField\';\\nimport { useForm } from \'@byte-design/ui/components/form/useForm\';\\nexport declare const Form: typeof FormComp & {\\n    Group: typeof FormGroup;\\n    Item: typeof FormItem;\\n    withField: typeof withField;\\n    useForm: typeof useForm;\\n};\\nexport { IForm, IFormProps } from \'@byte-design/ui/components/form/Form\';\\nexport { IFormItem, IFormItemProps } from \'@byte-design/ui/components/form/FormItem\';\\nexport { IFormGroupProps } from \'@byte-design/ui/components/form/FormGroup\';\\nexport { IWithField, IWithFieldProps } from \'@byte-design/ui/components/form/withField\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/form-container\\" { \\n export * from \'@byte-design/ui/components/form-container/FormContainer\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/image-view\\" { \\n import { IImageView } from \'@byte-design/ui/components/image-view/ImageView\';\\nexport declare type IImageViewProps = Omit<IImageView, \'handleClose\'>;\\nexport declare function imageView(props: IImageViewProps): void; \\n \\n } \\n declare module \\"@byte-design/ui/components/info\\" { \\n export * from \'@byte-design/ui/components/info/Info\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/input\\" { \\n import { IInput, IInputProps, Input as InputComp } from \'@byte-design/ui/components/input/Input\';\\nimport { IInputGroupProps, InputGroup } from \'@byte-design/ui/components/input/InputGroup\';\\nexport declare const Input: typeof InputComp & {\\n    Group: typeof InputGroup;\\n};\\nexport { IInputGroupProps, IInputProps, IInput }; \\n \\n } \\n declare module \\"@byte-design/ui/components/input-number\\" { \\n\\nimport { ISimpleRegionOptions } from \'@rc-hooks/region\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IInputNumberContentProps } from \'@byte-design/ui/components/input-number/InputNumberContent\';\\nexport interface IInputNumber extends Omit<ISimpleRegionOptions, \'value\'> {\\n    onChange?: (value: number) => void;\\n    onValueChange?: (value: number) => void;\\n    value?: number;\\n}\\nexport declare type IInputNumberProps = UnionOmit<IInputNumber, IInputNumberContentProps>;\\nexport { IInputNumberContent } from \'@byte-design/ui/components/input-number/InputNumberContent\';\\nexport declare function InputNumber(props: IInputNumberProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/layout\\" { \\n export { Layout } from \'@byte-design/ui/components/layout/Layout\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/link\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { AnchorHTMLAttributes, MouseEvent } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport interface ILink {\\n    disabled?: boolean;\\n    size?: ComponentSize;\\n    onClick?: (e: MouseEvent<HTMLElement>) => void;\\n}\\nexport declare type ILinkProps = UnionOmit<ILink, AnchorHTMLAttributes<HTMLAnchorElement>>;\\nexport declare function Link(props: ILinkProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/list\\" { \\n export * from \'@byte-design/ui/components/list/List\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/list-viewer\\" { \\n export * from \'@byte-design/ui/components/list-viewer/Viewer\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/loading\\" { \\n import { IRcDialogProps, IRcPosition } from \'@rc-hooks/dialog\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { CSSProperties, HTMLAttributes, ReactNode } from \'react\';\\nimport { IBlockLoadingProps, IInlineLoadingProps } from \'@byte-design/ui/components/loading/BaseLoading\';\\nimport { IFullLoadingProps } from \'@byte-design/ui/components/loading/FullLoading\';\\ndeclare type pickDialog = \'maskStyle\' | \'maskClassName\' | \'zIndex\' | keyof IRcPosition;\\nexport declare type loadingType = \'full\' | \'block\' | \'inline\';\\nexport interface ILoading {\\n    show?: boolean;\\n    type?: loadingType;\\n    children?: React.ReactNode;\\n    icon?: ReactNode;\\n    iconStyle?: CSSProperties;\\n    iconClassName?: string;\\n}\\nexport declare type ILoadingProps = UnionOmit<ILoading, HTMLAttributes<HTMLDivElement>> & Partial<Pick<IRcDialogProps, pickDialog>>;\\nexport declare function Loading(props: ILoadingProps): JSX.Element;\\nexport declare namespace Loading {\\n    var FullLoading: typeof import(\\"./FullLoading\\").FullLoading;\\n    var BlockLoading: (props: Pick<ILoading & Pick<React.HTMLAttributes<HTMLDivElement>, \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"color\\" | \\"translate\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\"> & Partial<Pick<UnionOmit<import(\\"@rc-hooks/dialog\\").IRcDialogExtraProps & import(\\"@rc-hooks/dialog\\").IRcHorizontal & import(\\"@rc-hooks/dialog\\").IRcVertical, React.HTMLAttributes<HTMLDivElement>>, \\"left\\" | \\"right\\" | \\"bottom\\" | \\"top\\" | \\"horizontal\\" | \\"vertical\\" | \\"zIndex\\" | \\"maskStyle\\" | \\"maskClassName\\">> & {\\n        type: string;\\n    }, \\"left\\" | \\"right\\" | \\"show\\" | \\"bottom\\" | \\"top\\" | \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"color\\" | \\"horizontal\\" | \\"vertical\\" | \\"icon\\" | \\"children\\" | \\"translate\\" | \\"zIndex\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\" | \\"maskStyle\\" | \\"maskClassName\\" | \\"iconStyle\\" | \\"iconClassName\\">) => JSX.Element;\\n    var InlineLoading: (props: Pick<ILoading & Pick<React.HTMLAttributes<HTMLDivElement>, \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"color\\" | \\"translate\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\"> & Partial<Pick<UnionOmit<import(\\"@rc-hooks/dialog\\").IRcDialogExtraProps & import(\\"@rc-hooks/dialog\\").IRcHorizontal & import(\\"@rc-hooks/dialog\\").IRcVertical, React.HTMLAttributes<HTMLDivElement>>, \\"left\\" | \\"right\\" | \\"bottom\\" | \\"top\\" | \\"horizontal\\" | \\"vertical\\" | \\"zIndex\\" | \\"maskStyle\\" | \\"maskClassName\\">> & {\\n        type: string;\\n    }, \\"left\\" | \\"right\\" | \\"show\\" | \\"bottom\\" | \\"top\\" | \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"color\\" | \\"horizontal\\" | \\"vertical\\" | \\"icon\\" | \\"children\\" | \\"translate\\" | \\"zIndex\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\" | \\"maskStyle\\" | \\"maskClassName\\" | \\"iconStyle\\" | \\"iconClassName\\">) => JSX.Element;\\n}\\nexport { IFullLoadingProps, IBlockLoadingProps, IInlineLoadingProps };\\nexport default Loading; \\n \\n } \\n declare module \\"@byte-design/ui/components/menu\\" { \\n import { Menu } from \'@byte-design/ui/components/menu/Menu\';\\nexport * from \'@byte-design/ui/components/menu/types\';\\nexport { Menu }; \\n \\n } \\n declare module \\"@byte-design/ui/components/message\\" { \\n import { INotificationOpened } from \'@rc-hooks/notification\';\\nimport { IMessage, IMessageProps, Message, MessageType } from \'@byte-design/ui/components/message/Message\';\\nexport interface IMessageOptions extends Omit<IMessage, \'shadow\'> {\\n    duration?: number;\\n    key?: string;\\n}\\nexport declare type IMessageOpened = INotificationOpened;\\nexport declare const message: {\\n    success(content: string | Pick<IMessageOptions, \\"content\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"onClose\\" | \\"showIcon\\" | \\"hasClose\\">): INotificationOpened;\\n    error(content: string | Pick<IMessageOptions, \\"content\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"onClose\\" | \\"showIcon\\" | \\"hasClose\\">): INotificationOpened;\\n    info(content: string | Pick<IMessageOptions, \\"content\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"onClose\\" | \\"showIcon\\" | \\"hasClose\\">): INotificationOpened;\\n    warning(content: string | Pick<IMessageOptions, \\"content\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"onClose\\" | \\"showIcon\\" | \\"hasClose\\">): INotificationOpened;\\n    loading(content: string | Pick<IMessageOptions, \\"content\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"onClose\\" | \\"showIcon\\" | \\"hasClose\\">): INotificationOpened;\\n    open(conf: IMessageOptions): INotificationOpened;\\n    close(key: string): void;\\n};\\nexport { Message, IMessage, IMessageProps, MessageType }; \\n \\n } \\n declare module \\"@byte-design/ui/components/modal\\" { \\n import { Alert, IAlertProps } from \'@byte-design/ui/components/modal/Alert\';\\nimport { Confirm, IConfirmProps } from \'@byte-design/ui/components/modal/Confirm\';\\nimport { alert, confirm } from \'@byte-design/ui/components/modal/manual\';\\nimport { IModalProps, Modal } from \'@byte-design/ui/components/modal/Modal\';\\nexport { Modal, IModalProps, IConfirmProps, IAlertProps };\\ndeclare module \'@byte-design/ui/components/modal/Modal\' {\\n    interface ModalType {\\n        Alert: typeof Alert;\\n        Confirm: typeof Confirm;\\n        alert: typeof alert;\\n        confirm: typeof confirm;\\n    }\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/month-panel\\" { \\n import { FC } from \'react\';\\nimport { ISimpleDateProps } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const MonthPanel: FC<Omit<ISimpleDateProps, keyof IDatePickerProps | \'isDateDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/month-picker\\" { \\n import { FC } from \'react\';\\nimport { ISimpleDateProps } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nexport declare const MonthPicker: FC<Omit<ISimpleDateProps, \'isDateDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/month-range-panel\\" { \\n import { FC } from \'react\';\\nimport { IRangeDateProps } from \'@byte-design/ui/units/date/hoc/withRangeDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const MonthRangePanel: FC<Omit<IRangeDateProps, keyof IDatePickerProps | \'isDateDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/month-range-picker\\" { \\n import { FC } from \'react\';\\nimport { IRangeDateProps } from \'@byte-design/ui/units/date/hoc/withRangeDate\';\\nexport declare const MonthRangePicker: FC<Omit<IRangeDateProps, \'isDateDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-auto-complete\\" { \\n import { IMultipleAutoCompleteProps, MultipleAutoComplete } from \'@byte-design/ui/components/multiple-auto-complete/MultipleAutoComplete\';\\nexport { MultipleAutoComplete, IMultipleAutoCompleteProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-cascader\\" { \\n import { IMultipleCascaderProps, MultipleCascader } from \'@byte-design/ui/components/multiple-cascader/MultipleCascader\';\\nexport { MultipleCascader, IMultipleCascaderProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-cascader-panel\\" { \\n import { IMultipleCascaderPanelProps, MultipleCascaderPanel } from \'@byte-design/ui/components/multiple-cascader-panel/MultipleCascaderPanel\';\\nexport { MultipleCascaderPanel, IMultipleCascaderPanelProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-date-panel\\" { \\n import { FC } from \'react\';\\nimport { IMultipleDateProps } from \'@byte-design/ui/units/date/hoc/withMultipleDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const MultipleDatePanel: FC<Omit<IMultipleDateProps, keyof IDatePickerProps>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-date-picker\\" { \\n import { FC } from \'react\';\\nimport { IMultipleDateProps } from \'@byte-design/ui/units/date/hoc/withMultipleDate\';\\nexport declare const MultipleDatePicker: FC<IMultipleDateProps>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-month-panel\\" { \\n import { FC } from \'react\';\\nimport { IMultipleDateProps } from \'@byte-design/ui/units/date/hoc/withMultipleDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const MultipleMonthPanel: FC<Omit<IMultipleDateProps, keyof IDatePickerProps | \'isDateDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-month-picker\\" { \\n import { FC } from \'react\';\\nimport { IMultipleDateProps } from \'@byte-design/ui/units/date/hoc/withMultipleDate\';\\nexport declare const MultipleMonthPicker: FC<Omit<IMultipleDateProps, \'isDateDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-rimless-select\\" { \\n import { MultipleRimlessSelect, MultipleRimlessSelectProps } from \'@byte-design/ui/components/multiple-rimless-select/MultipleRimlessSelect\';\\nexport { MultipleRimlessSelect, MultipleRimlessSelectProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-select\\" { \\n import { MultipleSelect, MultipleSelectProps } from \'@byte-design/ui/components/multiple-select/MultipleSelect\';\\nexport { MultipleSelect, MultipleSelectProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-tree\\" { \\n export { IMultipleTreeProps } from \'@byte-design/ui/components/tree/types\';\\nexport { MultipleTree } from \'@byte-design/ui/components/multiple-tree/MultipleTree\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-tree-select\\" { \\n export { MultipleTreeSelect, IMultipleTreeSelectProps } from \'@byte-design/ui/components/multiple-tree-select/MultipleTreeSelect\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-week-panel\\" { \\n import { FC } from \'react\';\\nimport { IMultipleDateProps } from \'@byte-design/ui/units/date/hoc/withMultipleDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const MultipleWeekPanel: FC<Omit<IMultipleDateProps, keyof IDatePickerProps>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-week-picker\\" { \\n import { FC } from \'react\';\\nimport { IMultipleDateProps } from \'@byte-design/ui/units/date/hoc/withMultipleDate\';\\nexport declare const MultipleWeekPicker: FC<IMultipleDateProps>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-year-panel\\" { \\n import { FC } from \'react\';\\nimport { IMultipleDateProps } from \'@byte-design/ui/units/date/hoc/withMultipleDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const MultipleYearPanel: FC<Omit<IMultipleDateProps, keyof IDatePickerProps | \'isDateDisabled\' | \'isMonthDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-year-picker\\" { \\n import { FC } from \'react\';\\nimport { IMultipleDateProps } from \'@byte-design/ui/units/date/hoc/withMultipleDate\';\\nexport declare const MultipleYearPicker: FC<Omit<IMultipleDateProps, \'isDateDisabled\' | \'isMonthDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/notification\\" { \\n import { INotificationOpened } from \'@rc-hooks/notification\';\\nimport { INotification, INotificationProps, Notification, NotificationType } from \'@byte-design/ui/components/notification/Notification\';\\nexport declare type NotificationPlacement = \'top-left\' | \'top-right\' | \'bottom-left\' | \'bottom-right\';\\nexport interface INotificationOptions extends Omit<INotification, \'shadow\'> {\\n    duration?: number;\\n    key?: string;\\n    placement?: NotificationPlacement;\\n}\\nexport declare const notification: {\\n    success(description: string | Pick<INotificationOptions, \\"message\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"placement\\" | \\"onClose\\" | \\"btn\\" | \\"showIcon\\" | \\"hasClose\\" | \\"description\\">): INotificationOpened;\\n    error(description: string | Pick<INotificationOptions, \\"message\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"placement\\" | \\"onClose\\" | \\"btn\\" | \\"showIcon\\" | \\"hasClose\\" | \\"description\\">): INotificationOpened;\\n    info(description: string | Pick<INotificationOptions, \\"message\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"placement\\" | \\"onClose\\" | \\"btn\\" | \\"showIcon\\" | \\"hasClose\\" | \\"description\\">): INotificationOpened;\\n    warning(description: string | Pick<INotificationOptions, \\"message\\" | \\"icon\\" | \\"key\\" | \\"duration\\" | \\"placement\\" | \\"onClose\\" | \\"btn\\" | \\"showIcon\\" | \\"hasClose\\" | \\"description\\">): INotificationOpened;\\n    open(conf: INotificationOptions): INotificationOpened;\\n    close(key: string): void;\\n};\\nexport { Notification, INotification, INotificationProps, NotificationType, INotificationOpened }; \\n \\n } \\n declare module \\"@byte-design/ui/components/pager\\" { \\n import { IPagerProps, Pager } from \'@byte-design/ui/components/pager/Pager\';\\nimport { ISimplePageProps } from \'@byte-design/ui/components/pager/PagerSimple\';\\nexport { Pager, IPagerProps, ISimplePageProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover\\" { \\n import { IClickTriggerProps } from \'@byte-design/ui/components/popover/components/ClickTrigger\';\\nimport { IFocusTriggerProps } from \'@byte-design/ui/components/popover/components/FocusTrigger\';\\nimport { IHoverTriggerProps } from \'@byte-design/ui/components/popover/components/HoverTrigger\';\\nimport { IPopoverProps, Popover } from \'@byte-design/ui/components/popover/Popover\';\\nimport { IPopoverAlertProps } from \'@byte-design/ui/components/popover/PopoverAlert\';\\nimport { IPopoverConfirmProps } from \'@byte-design/ui/components/popover/PopoverConfirm\';\\nimport { IPopoverContainerProps } from \'@byte-design/ui/components/popover/PopoverContainer\';\\nimport { ISingletonPopoverProps } from \'@byte-design/ui/components/popover/SingletonPopover\';\\nexport { Popover, IPopoverProps, IPopoverConfirmProps, IPopoverAlertProps, IPopoverContainerProps, ISingletonPopoverProps, IClickTriggerProps, IFocusTriggerProps, IHoverTriggerProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/progress\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport declare type IProgressStatus = \'success\' | \'exception\' | \'normal\';\\ninterface IProgress {\\n    size?: \'md\' | \'sm\' | \'xs\';\\n    shape?: \'line\' | \'circle\' | \'inner-line\';\\n    className?: string;\\n    percent: number;\\n    status?: IProgressStatus;\\n    format?: (percent?: number) => React.ReactNode;\\n    width?: number;\\n}\\nexport declare type IProgressProps = UnionOmit<IProgress, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Progress(props: IProgressProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/pure-table\\" { \\n import { IColumnOptions } from \'@rc-hooks/table\';\\nimport React, { CSSProperties, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { TableHead } from \'@byte-design/ui/components/pure-table/TableHead\';\\nimport { TableScrollerBar } from \'@byte-design/ui/components/pure-table/TableScrollerBar\';\\nexport interface IPureTableProps<T, K extends keyof T> {\\n    minimalNonFixedWidth?: number;\\n    columns: Array<IColumnOptions<T, ReactNode>>;\\n    bordered?: boolean;\\n    stripe?: boolean;\\n    rowBordered?: boolean;\\n    innerBordered?: boolean;\\n    outerBordered?: boolean;\\n    size?: Exclude<ComponentSize, \'xs\'>;\\n    headGroupHeight?: number;\\n    headRowHeight?: number;\\n    rowHeight?: number;\\n    children?: ReactNode;\\n    className?: string;\\n    style?: CSSProperties;\\n    rowKey: K;\\n}\\nexport declare function PureTable<T, K extends keyof T>(props: IPureTableProps<T, K>): JSX.Element;\\nexport declare namespace PureTable {\\n    var Head: typeof TableHead;\\n    var Body: (props: import(\\"@co-hooks/util\\").UnionOmit<import(\\"@byte-design/ui/components/table/TableBody\\").ITableBody, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element;\\n    var Row: <T>(props: import(\\"@co-hooks/util\\").UnionOmit<import(\\"./TableRow\\").ITableRow<T>, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element;\\n    var RowGroup: <T, K extends keyof T>(props: import(\\"./TableRowGroup\\").ITableRowGroupProps<T, K>) => JSX.Element;\\n    var ScrollerBar: typeof TableScrollerBar;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/radio\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { ICheckWrapperProps } from \'@byte-design/ui/units/check-wrapper\';\\nexport interface IRadio {\\n    checked?: boolean;\\n    disabled?: boolean;\\n    size?: ComponentSize;\\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\\n}\\ndeclare type OmitCheckWrapperPropKeys = \'type\' | \'checkedWave\' | \'waveElementRef\';\\nexport declare type IRadioProps = UnionOmit<IRadio, Omit<ICheckWrapperProps, OmitCheckWrapperPropKeys>>;\\nexport declare function Radio(props: IRadioProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/radio-group\\" { \\n import { IRadioGroupButtonProps } from \'@byte-design/ui/components/radio-group/Button\';\\nimport { IRadioGroupProps, RadioGroup, RadioGroupType } from \'@byte-design/ui/components/radio-group/Group\';\\nimport { IRadioGroupRadioProps } from \'@byte-design/ui/components/radio-group/Radio\';\\nimport { IRadioGroupTagProps } from \'@byte-design/ui/components/radio-group/Tag\';\\nexport { RadioGroup, RadioGroupType, IRadioGroupProps, IRadioGroupRadioProps, IRadioGroupButtonProps, IRadioGroupTagProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/range-slider\\" { \\n import { INumberConverter, IRangeRegionOptions } from \'@rc-hooks/region\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React from \'react\';\\nimport { ISliderContentProps } from \'@byte-design/ui/components/slider/SliderContent\';\\nexport interface IRangeSlider {\\n    format?: INumberConverter;\\n    parse?: INumberConverter;\\n    onChange?: (value: number[]) => void;\\n    onValueChange?: (value: number[]) => void;\\n}\\nexport declare type IRangeSliderProps = UnionOmit<IRangeSlider & IRangeRegionOptions, Omit<ISliderContentProps, \'rangeStart\' | \'rangeEnd\'>>;\\nexport declare const RangeSlider: React.MemoExoticComponent<(props: UnionOmit<IRangeSlider & IRangeRegionOptions, Pick<UnionOmit<import(\\"../slider/SliderContent\\").ISliderContent, React.HTMLAttributes<HTMLDivElement>>, \\"disabled\\" | \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"invalid\\" | \\"color\\" | \\"children\\" | \\"translate\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\" | \\"mode\\" | \\"format\\" | \\"markList\\" | \\"showStart\\">>) => JSX.Element>; \\n \\n } \\n declare module \\"@byte-design/ui/components/rate\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport interface IRate {\\n    value?: number;\\n    defaultValue?: number;\\n    allowHalf?: boolean;\\n    allowClear?: boolean;\\n    character?: ReactNode;\\n    disabled?: boolean;\\n    size?: ComponentSize;\\n    tooltips?: string[];\\n    activeColor?: string;\\n    textColor?: string;\\n    count?: number;\\n    onChange?: (value: number) => void;\\n    onHoverChange?: (value: number) => void;\\n}\\nexport declare type IRateProps = UnionOmit<IRate, HTMLAttributes<HTMLElement>>;\\nexport declare function Rate(props: IRateProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/rimless-select\\" { \\n import { RimlessSelect, RimlessSelectProps } from \'@byte-design/ui/components/rimless-select/RimlessSelect\';\\nexport { RimlessSelect, RimlessSelectProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/row\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { BreakpointSizeType } from \'@byte-design/ui/components/layout/util/breakpoint\';\\ndeclare const RowAligns: [\\"start\\", \\"end\\", \\"center\\"];\\ndeclare const RowJustify: [\\"start\\", \\"end\\", \\"center\\", \\"space-around\\", \\"space-between\\"];\\nexport interface IRow {\\n    gutter?: number | Partial<Record<BreakpointSizeType, number>>;\\n    type?: \'flex\';\\n    align?: (typeof RowAligns)[number];\\n    justify?: (typeof RowJustify)[number];\\n    prefixCls?: string;\\n}\\nexport declare type IRowProps = UnionOmit<IRow, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Row(props: IRowProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/schedule\\" { \\n import { IScheduleDisplayInfo, IScheduleItem, IScheduleList, IScheduleValue } from \'@rc-hooks/schedule\';\\nimport { IScheduleProps, Schedule } from \'@byte-design/ui/components/schedule/Schedule\';\\nexport { Schedule, IScheduleProps, IScheduleValue, IScheduleList, IScheduleItem, IScheduleDisplayInfo }; \\n \\n } \\n declare module \\"@byte-design/ui/components/select\\" { \\n import { SelectOptionProps } from \'@byte-design/ui/components/select/Option\';\\nimport { SelectOptionGroupProps } from \'@byte-design/ui/components/select/OptionGroup\';\\nimport { Select, SelectProps } from \'@byte-design/ui/components/select/Select\';\\nexport { Select, SelectProps, SelectOptionProps, SelectOptionGroupProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/skeleton\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ISkeletonAvatarProps } from \'@byte-design/ui/components/skeleton/Avatar\';\\nimport { ISkeletonParagraphProps } from \'@byte-design/ui/components/skeleton/Paragraph\';\\nimport { ISkeletonTitleProps } from \'@byte-design/ui/components/skeleton/Title\';\\nexport interface ISkeleton {\\n    active?: boolean;\\n    loading?: boolean;\\n    avatar?: ISkeletonAvatarProps | boolean;\\n    title?: ISkeletonTitleProps | boolean;\\n    paragraph?: ISkeletonParagraphProps | boolean;\\n}\\nexport declare type ISkeletonProps<T> = UnionOmit<ISkeleton, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Skeleton<T>(props: ISkeletonProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/slider\\" { \\n import { INumberConverter, ISimpleRegionOptions } from \'@rc-hooks/region\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React from \'react\';\\nimport { ISliderContentProps } from \'@byte-design/ui/components/slider/SliderContent\';\\nexport interface ISlider {\\n    format?: INumberConverter;\\n    parse?: INumberConverter;\\n    onChange?: (value: number) => void;\\n    onValueChange?: (value: number) => void;\\n    withInput?: boolean;\\n}\\nexport { ISliderContent } from \'@byte-design/ui/components/slider/SliderContent\';\\nexport declare type ISliderProps = UnionOmit<ISlider & ISimpleRegionOptions, Omit<ISliderContentProps, \'rangeStart\' | \'rangeEnd\'>>;\\nexport declare const Slider: React.MemoExoticComponent<(props: UnionOmit<ISlider & ISimpleRegionOptions, Pick<UnionOmit<import(\\"./SliderContent\\").ISliderContent, React.HTMLAttributes<HTMLDivElement>>, \\"disabled\\" | \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"invalid\\" | \\"color\\" | \\"children\\" | \\"translate\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\" | \\"mode\\" | \\"format\\" | \\"markList\\" | \\"showStart\\">>) => JSX.Element>;\\nexport { ISliderMark } from \'@byte-design/ui/components/slider/SliderMark\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/steps\\" { \\n import { StepDot as Dot, IStepDotProps } from \'@byte-design/ui/components/steps/Dot\';\\nimport { IStepNumberProps, StepNumber as Number } from \'@byte-design/ui/components/steps/Number\';\\nimport { IStepProps, Step } from \'@byte-design/ui/components/steps/Step\';\\nimport { IStepsProps, Steps as StepsComponent } from \'@byte-design/ui/components/steps/Steps\';\\nexport declare const Steps: typeof StepsComponent & {\\n    Step: typeof Step;\\n    Dot: typeof Dot;\\n    Number: typeof Number;\\n};\\nexport { IStepProps, IStepsProps, IStepDotProps, IStepNumberProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/sticky\\" { \\n export * from \'@byte-design/ui/components/sticky/Sticky\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/switch\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { ICheckWrapperProps } from \'@byte-design/ui/units/check-wrapper\';\\nexport interface ISwitch {\\n    size?: Exclude<ComponentSize, \'xs\' | \'xl\'>;\\n    trueContent?: ReactNode;\\n    falseContent?: ReactNode;\\n}\\ndeclare type OmitCheckWrapperPropKeys = \'type\' | \'checkedWave\' | \'children\' | \'waveElementRef\';\\nexport declare type ISwitchProps = UnionOmit<ISwitch, Omit<ICheckWrapperProps, OmitCheckWrapperPropKeys>>;\\nexport declare function Switch(props: ISwitchProps): JSX.Element;\\nexport declare namespace Switch {\\n    var Valued: typeof ValuedSwitch;\\n}\\nexport declare type IValuedSwitchProps<T> = UnionOmit<{\\n    value?: T;\\n    onValueChange?: (value: T) => void;\\n    trueValue: T;\\n    falseValue: T;\\n}, Omit<ISwitchProps, \'checked\'>>;\\nexport declare function ValuedSwitch<T>(props: IValuedSwitchProps<T>): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/table\\" { \\n export * from \'./Table\';\\nexport * from \'@byte-design/ui/units/table/types\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/tabs\\" { \\n export { Tabs } from \'@byte-design/ui/components/tabs/components/Tabs\';\\nexport { ITabItemProps, ITabsProps, TabSize, TabPosition, ITabAction, TabType } from \'@byte-design/ui/components/tabs/types\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/tabs-card\\" { \\n export { TabsCard, ITabsCardProps, TabsCardSize, TabsCardType } from \'@byte-design/ui/components/tabs-card/TabsCard\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/tag\\" { \\n import { CheckableTag as Checkable, ICheckableTagProps } from \'@byte-design/ui/components/tag/CheckableTag\';\\nimport { ITagProps, Tag as TagComponent, TagType } from \'@byte-design/ui/components/tag/Tag\';\\nimport { Group, ITagGroupProps } from \'@byte-design/ui/components/tag/Group\';\\nexport declare const Tag: typeof TagComponent & {\\n    Checkable: typeof Checkable;\\n    Group: typeof Group;\\n};\\nexport { TagType, ITagGroupProps, ITagProps, ICheckableTagProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/text-area\\" { \\n import React, { KeyboardEventHandler, TextareaHTMLAttributes } from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nexport interface AutoSizeType {\\n    minRows?: number;\\n    maxRows?: number;\\n}\\nexport interface TextAreaState {\\n    textareaStyles?: React.CSSProperties;\\n}\\nexport interface TextAreaProps {\\n    value?: string;\\n    onPressEnter?: KeyboardEventHandler<HTMLTextAreaElement>;\\n    onValueChange?: (value: string) => void;\\n}\\nexport declare type ITextAreaProps = UnionOmit<TextAreaProps, TextareaHTMLAttributes<HTMLTextAreaElement>>;\\nexport declare function TextArea(props: ITextAreaProps, state: TextAreaState): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-panel\\" { \\n export { ITimeBaseProps, TimeBase } from \'@byte-design/ui/components/time-panel/components/TimeBase\';\\nexport { ITimePanelProps, TimePanel } from \'@byte-design/ui/components/time-panel/TimePanel\';\\nexport { TimeContent } from \'@byte-design/ui/components/time-panel/components/TimeContent\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-picker\\" { \\n export { ITimePickerProps, TimePicker } from \'@byte-design/ui/components/time-picker/TimePicker\';\\nexport { ITimePopperBase, TimePopper } from \'@byte-design/ui/components/time-picker/TimePopper\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-range-panel\\" { \\n export { ITimeRangDisabled } from \'@rc-hooks/date\';\\nexport { ITimeRangePanelProps, TimeRangePanel } from \'@byte-design/ui/components/time-range-panel/TimeRangePanel\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-range-picker\\" { \\n export { ITimeRangePickerProps, TimeRangePicker } from \'@byte-design/ui/components/time-range-picker/TimeRangePicker\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/timeline\\" { \\n import { ITimelineItemProps, TimelineItem as Item } from \'@byte-design/ui/components/timeline/item\';\\nimport { ITimelineProps, Timeline as TimelineComponent } from \'@byte-design/ui/components/timeline/timeline\';\\nexport declare const Timeline: typeof TimelineComponent & {\\n    Item: typeof Item;\\n};\\nexport { ITimelineProps, ITimelineItemProps }; \\n \\n } \\n declare module \\"@byte-design/ui/components/tooltip\\" { \\n export { Tooltip, ITooltipProps } from \'@byte-design/ui/components/tooltip/Tooltip\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/transfer\\" { \\n import { Transfer } from \'@byte-design/ui/components/transfer/Transfer\';\\nexport { Transfer }; \\n \\n } \\n declare module \\"@byte-design/ui/components/tree\\" { \\n export { ISingleTreeProps as ITreeProps } from \'@byte-design/ui/components/tree/types\';\\nexport { SingleTree as Tree } from \'@byte-design/ui/components/tree/SingleTree\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/tree-select\\" { \\n export { TreeSelect, ITreeSelectProps } from \'@byte-design/ui/components/tree-select/TreeSelect\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/typography\\" { \\n export * from \'@byte-design/ui/components/typography/Typography\';\\nexport { ITypographyDecorationProps, ITypographyBaseProps } from \'@byte-design/ui/components/typography/Base\';\\nexport { TypographyTextType, ITypographyTextProps } from \'@byte-design/ui/components/typography/Text\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/upload\\" { \\n import { AvatarUpload } from \'@byte-design/ui/components/upload/AvatarUpload\';\\nimport { DropUpload } from \'@byte-design/ui/components/upload/DropUpload\';\\nimport { Upload } from \'@byte-design/ui/components/upload/Upload\';\\nexport { Upload, AvatarUpload, DropUpload };\\nexport { IUploadProps } from \'@byte-design/ui/components/upload/Upload\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/week-panel\\" { \\n import { FC } from \'react\';\\nimport { ISimpleDateProps } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const WeekPanel: FC<Omit<ISimpleDateProps, keyof IDatePickerProps>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/week-picker\\" { \\n import { FC } from \'react\';\\nimport { ISimpleDateProps } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nexport declare const WeekPicker: FC<ISimpleDateProps>; \\n \\n } \\n declare module \\"@byte-design/ui/components/year-panel\\" { \\n import { FC } from \'react\';\\nimport { ISimpleDateProps } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const YearPanel: FC<Omit<ISimpleDateProps, keyof IDatePickerProps | \'isDateDisabled\' | \'isMonthDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/year-picker\\" { \\n import { FC } from \'react\';\\nimport { ISimpleDateProps } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nexport declare const YearPicker: FC<Omit<ISimpleDateProps, \'isDateDisabled\' | \'isMonthDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/year-range-panel\\" { \\n import { FC } from \'react\';\\nimport { IRangeDateProps } from \'@byte-design/ui/units/date/hoc/withRangeDate\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport declare const YearRangePanel: FC<Omit<IRangeDateProps, keyof IDatePickerProps | \'isDateDisabled\' | \'isMonthDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/year-range-picker\\" { \\n import { FC } from \'react\';\\nimport { IRangeDateProps } from \'@byte-design/ui/units/date/hoc/withRangeDate\';\\nexport declare const YearRangePicker: FC<Omit<IRangeDateProps, \'isDateDisabled\' | \'isMonthDisabled\'>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/anchor/Anchor\\" { \\n import { IAnchorOptions } from \'@rc-hooks/anchor\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { AnchorLink } from \'@byte-design/ui/components/anchor/AnchorLink\';\\nexport declare type IAnchorProps = UnionOmit<IAnchorOptions, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Anchor(props: IAnchorProps): JSX.Element;\\nexport declare namespace Anchor {\\n    var Link: typeof AnchorLink;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/anchor/AnchorLink\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, MouseEventHandler, ReactNode } from \'react\';\\nexport interface IAnchorLink {\\n    title: ReactNode;\\n    href: string;\\n    onClick?: MouseEventHandler<HTMLAnchorElement>;\\n}\\nexport declare type IAnchorLinkProps = UnionOmit<IAnchorLink, HTMLAttributes<HTMLDivElement>>;\\nexport declare function AnchorLink(props: IAnchorLinkProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/auto-complete/AutoComplete\\" { \\n import { ISingleAutoComplete } from \'@rc-hooks/autocomplete\';\\nimport React from \'react\';\\nimport { IAutoCompletePanelBase } from \'@byte-design/ui/components/auto-complete/AutoCompletePanel\';\\nimport { IAutoCompleteMainBase } from \'@byte-design/ui/components/auto-complete/AutoCompleteMain\';\\nexport declare type IAutoCompleteProps<T> = Omit<ISingleAutoComplete<T>, \'onHide\' | \'checkable\'> & IAutoCompleteMainBase & IAutoCompletePanelBase & {\\n    className?: string;\\n    style?: React.CSSProperties;\\n    onValueChange?: (value: T | string) => void;\\n};\\nexport declare function AutoComplete<T>(props: IAutoCompleteProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/badge/Badge\\" { \\n import { IOffset } from \'@rc-hooks/dom\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { CSSProperties, HTMLAttributes, MouseEventHandler, ReactNode } from \'react\';\\nexport declare type BadgeType = \'info\' | \'primary\' | \'danger\' | \'warning\' | \'success\' | string;\\nexport declare type PlacementType = \'top-left\' | \'top-right\' | \'bottom-left\' | \'bottom-right\';\\nexport interface IBadge {\\n    placement?: PlacementType;\\n    content?: ReactNode;\\n    offset?: IOffset;\\n    badgeStyle?: CSSProperties;\\n    show?: boolean;\\n    onBadgeClick?: MouseEventHandler<HTMLElement>;\\n}\\nexport declare type IBadgeProps = UnionOmit<IBadge, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Badge(props: IBadgeProps): JSX.Element;\\nexport default Badge; \\n \\n } \\n declare module \\"@byte-design/ui/components/badge/Number\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { BadgeType, IBadge } from \'@byte-design/ui/components/badge/Badge\';\\ninterface IBadgeNumber extends IBadge {\\n    content: number;\\n    type?: BadgeType;\\n    max?: number;\\n    supCls?: string;\\n    showZero?: boolean;\\n}\\nexport declare type IBadgeNumberProps = UnionOmit<IBadgeNumber, HTMLAttributes<HTMLDivElement>>;\\nexport declare function BadgeNumber(props: IBadgeNumberProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/badge/Dot\\" { \\n\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { BadgeType, IBadgeProps } from \'@byte-design/ui/components/badge/Badge\';\\nexport interface IBadgeDot {\\n    type?: BadgeType;\\n    supCls?: string;\\n}\\nexport declare type IBadgeDotProps = UnionOmit<IBadgeDot, Omit<IBadgeProps, \'content\'>>;\\nexport declare function BadgeDot(props: IBadgeDotProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/badge/Text\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { BadgeType, IBadge } from \'@byte-design/ui/components/badge/Badge\';\\ninterface IBadgeText extends IBadge {\\n    content: string;\\n    type?: BadgeType;\\n    supCls?: string;\\n}\\nexport declare type IBadgeTextProps = UnionOmit<IBadgeText, HTMLAttributes<HTMLDivElement>>;\\nexport declare function BadgeText(props: IBadgeTextProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/breadcrumb/components/Breadcrumb\\" { \\n\\nimport { IBreadcrumbProps } from \'@byte-design/ui/components/breadcrumb/types\';\\nimport { BreadcrumbItem } from \'@byte-design/ui/components/breadcrumb/components/BreadcrumbItem\';\\nexport declare function Breadcrumb(props: IBreadcrumbProps): JSX.Element;\\nexport declare namespace Breadcrumb {\\n    var Item: typeof BreadcrumbItem;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/breadcrumb/types\\" { \\n import { CSSProperties, Ref } from \'react\';\\nexport declare type BreadcrumbType = \'basic\' | \'overlay\';\\nexport declare type IBreadcrumbProps = IItemExtraProps & {\\n    type?: BreadcrumbType;\\n    max?: number;\\n    className?: string;\\n    style?: CSSProperties;\\n    separator?: React.ReactNode;\\n    children: React.ReactElement | React.ReactElement[];\\n};\\nexport interface IItemExtraProps {\\n    itemMaxWidth?: number;\\n    onClick?: (id: string) => void;\\n}\\nexport interface IBreadcrumbItemProps {\\n    id?: string;\\n    href?: string;\\n    icon?: React.ReactNode;\\n    children?: React.ReactNode;\\n}\\nexport declare type IItemProps = IBreadcrumbItemProps & IItemExtraProps & {\\n    index: number;\\n    active?: boolean;\\n    collapsed?: boolean;\\n    domRef?: Ref<HTMLDivElement>;\\n    style?: CSSProperties;\\n}; \\n \\n } \\n declare module \\"@byte-design/ui/components/button/Button\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ButtonHTMLAttributes } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport declare type ButtonType = \'default\' | \'primary\' | \'danger\' | \'warning\' | \'success\' | \'dashed\' | \'text\' | \'white\' | \'text-primary\';\\nexport declare type ButtonShape = \'angle\' | \'round\' | \'cycle\' | \'square\';\\nexport interface IButton {\\n    triangle?: boolean;\\n    size?: ComponentSize;\\n    type?: ButtonType;\\n    shape?: ButtonShape;\\n    block?: boolean;\\n    disabled?: boolean;\\n    ghost?: boolean;\\n    needGrouped?: boolean;\\n    htmlType?: \'submit\' | \'reset\' | \'button\';\\n}\\nexport declare type IButtonProps = UnionOmit<IButton, ButtonHTMLAttributes<HTMLButtonElement>>;\\nexport declare function Button(props: IButtonProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/button/CheckableButton\\" { \\n\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IButtonProps } from \'@byte-design/ui/components/button/Button\';\\nexport interface ICheckableButton {\\n    checked: boolean;\\n    onChange: (checked: boolean) => void;\\n}\\nexport declare type ICheckableButtonProps = UnionOmit<ICheckableButton, IButtonProps>;\\nexport declare function CheckableButton(props: ICheckableButtonProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/button/Group\\" { \\n import { HTMLAttributes } from \'react\';\\nexport declare type IButtonGroupProps = HTMLAttributes<HTMLDivElement>;\\nexport declare function Group(props: IButtonGroupProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/card/Card\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { CSSProperties, HTMLAttributes, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport interface ICard {\\n    title?: ReactNode;\\n    extra?: ReactNode;\\n    bordered?: boolean;\\n    innerLine?: boolean;\\n    headStyle?: CSSProperties;\\n    bodyStyle?: CSSProperties;\\n    footerStyle?: CSSProperties;\\n    footer?: ReactNode;\\n    size?: Exclude<ComponentSize, \'xs\' | \'xl\'>;\\n}\\nexport declare type ICardProps = UnionOmit<ICard, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Card(props: ICardProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/carousel/CarouselArrowNext\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface ICarouselArrowNext {\\n    children?: React.ReactNode;\\n}\\nexport declare type ICarouselArrowNextProps = UnionOmit<ICarouselArrowNext, HTMLAttributes<HTMLDivElement>>;\\nexport declare function CarouselArrowNext(props: ICarouselArrowNextProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/carousel/CarouselArrowPrev\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface ICarouselArrowPrev {\\n    children?: React.ReactNode;\\n}\\nexport declare type ICarouselArrowPrevProps = UnionOmit<ICarouselArrowPrev, HTMLAttributes<HTMLDivElement>>;\\nexport declare const CarouselArrowPrev: (props: UnionOmit<ICarouselArrowPrev, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/carousel/CarouselPagination\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface ICarouselPagination {\\n    children?: React.ReactNode;\\n}\\nexport declare type ICarouselPaginationProps = UnionOmit<ICarouselPagination, HTMLAttributes<HTMLDivElement>>;\\nexport declare const CarouselPagination: (props: UnionOmit<ICarouselPagination, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element | null; \\n \\n } \\n declare module \\"@byte-design/ui/components/carousel/CarouselSlider\\" { \\n import React, { HTMLAttributes } from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nexport interface ICarouselSlider {\\n    children?: React.ReactNode;\\n}\\nexport declare type ICarouselSliderProps = UnionOmit<ICarouselSlider, HTMLAttributes<HTMLDivElement>>;\\nexport declare const CarouselSlider: (props: UnionOmit<ICarouselSlider, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader/Cascader\\" { \\n\\nimport { ICascaderData } from \'@rc-hooks/cascader\';\\nimport { ICascaderPanelProps } from \'@byte-design/ui/components/cascader-panel/CascaderPanel\';\\nimport { ICascaderSelectPopperBase } from \'@byte-design/ui/components/cascader/components/CascaderSelectPopper\';\\nexport interface ICascaderBase {\\n    width?: string;\\n}\\nexport declare type ICascaderProps<T, D extends ICascaderData<T>> = ICascaderBase & ICascaderPanelProps<T, D> & ICascaderSelectPopperBase<T, D>;\\nexport declare function Cascader<T, D extends ICascaderData<T>>(props: ICascaderProps<T, D>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader/components/CascaderSelectPopper\\" { \\n import { ICascaderData, ITreeMapHashItem } from \'@rc-hooks/cascader\';\\nimport React from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { ISelectInputDataItem } from \'@byte-design/ui/components/util/SelectInputWrapper\';\\nimport { ICascaderPopoverPanelBase } from \'@byte-design/ui/components/cascader/components/CascaderSelectPopoverPanel\';\\nexport declare type ICascaderSelectPlacement = \'bottom-start\' | \'bottom\' | \'bottom-end\';\\nexport interface ICascaderSelectPopperBase<T, D extends ICascaderData<T>> extends ICascaderPopoverPanelBase<T, D> {\\n    size?: ComponentSize;\\n    placeholder?: string;\\n    placement?: ICascaderSelectPlacement;\\n    clearable?: boolean;\\n    disabled?: boolean;\\n    searchable?: boolean;\\n    renderSelectedName?: (data: ISelectInputDataItem) => string;\\n    renderSearchItem?: (info: ITreeMapHashItem<T, D>) => React.ReactNode;\\n}\\nexport interface ICascaderSelectPopperExtra {\\n    show: boolean;\\n    onShow?: () => void;\\n    onHide?: () => void;\\n}\\nexport declare type ICascaderSelectPopperProps<T, D extends ICascaderData<T>> = ICascaderSelectPopperBase<T, D> & ICascaderSelectPopperExtra;\\nexport declare function CascaderSelectPopper<T, D extends ICascaderData<T>>(props: ICascaderSelectPopperProps<T, D>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader-list/CascaderList\\" { \\n\\nimport { ICascaderData, ICascaderOptions } from \'@rc-hooks/cascader\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ICascaderPanelCompProps } from \'@byte-design/ui/components/cascader/components/CascaderPanelComp\';\\nimport { ICascaderSearch } from \'@byte-design/ui/components/cascader/components/CascaderSearch\';\\nexport interface ICascaderList<T, D extends ICascaderData<T>> {\\n    value?: T[];\\n    onChange?: (value: T[]) => void;\\n    onValueChange?: (value: T[]) => void;\\n    onDisplayInfoChange?: (info: D[]) => void;\\n    viewer?: boolean;\\n    viewerSortable?: boolean;\\n}\\nexport declare type ICascaderListProps<T, D extends ICascaderData<T>> = UnionOmit<ICascaderList<T, D>, Omit<ICascaderOptions<T>, \'multiple\' | \'spread\'>> & ICascaderPanelCompProps<T, D> & ICascaderSearch<T, D> & {\\n    showClearAll?: boolean;\\n};\\nexport declare function CascaderList<T, D extends ICascaderData<T>>(props: ICascaderListProps<T, D>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader-panel/CascaderPanel\\" { \\n\\nimport { ICascaderData, ICascaderOptions } from \'@rc-hooks/cascader\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ICascaderPanelCompProps } from \'@byte-design/ui/components/cascader/components/CascaderPanelComp\';\\nimport { ICascaderSearch } from \'@byte-design/ui/components/cascader/components/CascaderSearch\';\\nexport interface ICascaderPanelBase<T, D extends ICascaderData<T>> extends ICascaderPanelCompProps<T, D>, ICascaderSearch<T, D> {\\n    value?: T;\\n    onChange?: (value?: T) => void;\\n    onValueChange?: (value?: T) => void;\\n    onDisplayInfoChange?: (info: D[]) => void;\\n    viewer?: boolean;\\n    showClearAll?: boolean;\\n}\\nexport declare type ICascaderPanelProps<T, D extends ICascaderData<T>> = UnionOmit<ICascaderPanelBase<T, D>, Omit<ICascaderOptions<T>, \'multiple\' | \'spread\' | \'partialCheck\'>>;\\nexport declare function CascaderPanel<T, D extends ICascaderData<T>>(props: ICascaderPanelProps<T, D>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/check-group/Button\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ButtonHTMLAttributes, MouseEvent } from \'react\';\\nimport { ButtonType } from \'@byte-design/ui/components/button\';\\nimport { ICheckGroupExtraProps } from \'@byte-design/ui/components/check-group/Group\';\\ninterface ICheckboxButton<T> extends Partial<ICheckGroupExtraProps> {\\n    value: T;\\n    type?: ButtonType;\\n    group?: string;\\n    disabled?: boolean;\\n    className?: string;\\n    onClick?: (e: MouseEvent<HTMLButtonElement>) => void;\\n}\\nexport declare type ICheckGroupButtonProps<T> = UnionOmit<ICheckboxButton<T>, ButtonHTMLAttributes<HTMLButtonElement>>;\\nexport declare function CheckGroupButton<T>(props: ICheckGroupButtonProps<T>): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/check-group/Checkbox\\" { \\n\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ICheckboxProps } from \'@byte-design/ui/components/checkbox\';\\nimport { ICheckGroupExtraProps } from \'@byte-design/ui/components/check-group/Group\';\\ninterface ICheckbox<T> extends Partial<ICheckGroupExtraProps> {\\n    value: T;\\n    disabled?: boolean;\\n    className?: string;\\n    onChange?: (checked: boolean) => void;\\n}\\nexport declare type ICheckGroupCheckboxProps<T> = UnionOmit<ICheckbox<T>, Omit<ICheckboxProps, \'checked\'>>;\\nexport declare function CheckGroupCheckbox<T>(props: ICheckGroupCheckboxProps<T>): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/check-group/FreeButton\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ButtonHTMLAttributes, MouseEvent } from \'react\';\\nimport { ButtonType } from \'@byte-design/ui/components/button\';\\nimport { ICheckGroupExtraProps } from \'@byte-design/ui/components/check-group/Group\';\\ninterface ICheckFreeButton<T> extends Partial<ICheckGroupExtraProps> {\\n    type?: ButtonType;\\n    disabled?: boolean;\\n    className?: string;\\n    onClick?: (e: MouseEvent<HTMLButtonElement>) => void;\\n}\\nexport declare type ICheckGroupFreeButtonProps<T> = UnionOmit<ICheckFreeButton<T>, ButtonHTMLAttributes<HTMLButtonElement>>;\\nexport declare function CheckGroupFreeButton<T>(props: ICheckGroupFreeButtonProps<T>): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/check-group/Group\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\ndeclare type CheckType = \'button\' | \'checkbox\' | \'tag\';\\nexport interface ICheckGroupExtraProps {\\n    size: ComponentSize;\\n}\\ninterface ICheckGroup<T> extends Partial<ICheckGroupExtraProps> {\\n    value?: T[];\\n    type?: CheckType;\\n    onChange?: (value: T[]) => void;\\n    onValueChange?: (value: T[]) => void;\\n    disabled?: boolean;\\n}\\nexport declare type ICheckGroupProps<T> = UnionOmit<ICheckGroup<T>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function CheckGroup<T>(props: ICheckGroupProps<T>): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/check-group/Tag\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ICheckGroupExtraProps } from \'@byte-design/ui/components/check-group/Group\';\\ninterface ICheckTag<T> extends Partial<ICheckGroupExtraProps> {\\n    value: T;\\n    disabled?: boolean;\\n    className?: string;\\n    onChange?: (checked: boolean) => void;\\n}\\nexport declare type ICheckGroupTagProps<T> = UnionOmit<ICheckTag<T>, HTMLAttributes<HTMLElement>>;\\nexport declare function CheckGroupTag<T>(props: ICheckGroupTagProps<T>): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/units/check-wrapper\\" { \\n export * from \'@byte-design/ui/units/check-wrapper/CheckWrapper\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/collapse/Collapse\\" { \\n import { IRcCollapseProps } from \'@rc-hooks/collapse\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nimport { CollapseItem } from \'@byte-design/ui/components/collapse/CollapseItem\';\\nimport { SubCollapse } from \'@byte-design/ui/components/collapse/SubCollapse\';\\nexport declare type CollapseType = \'basic\' | \'borderless\' | \'panel\';\\nexport interface ICollapse extends IRcCollapseProps {\\n    disabled?: boolean;\\n    className?: string;\\n    type?: CollapseType;\\n    children: React.ReactNode;\\n}\\nexport declare type ICollapseProps = UnionOmit<ICollapse, HTMLAttributes<HTMLDivElement>>;\\nexport declare const Collapse: {\\n    (props: ICollapse): JSX.Element;\\n    Item: typeof CollapseItem;\\n    SubCollapse: typeof SubCollapse;\\n}; \\n \\n } \\n declare module \\"@byte-design/ui/components/collapse/CollapseItem\\" { \\n import React from \'react\';\\nexport declare type CollapseItemIconType = \'arrow\' | \'switch\' | \'plus\';\\nexport declare type CollapseItemIconPosition = \'left\' | \'right\';\\nexport interface ICollapseItem {\\n    title?: string;\\n    renderHead?: (expanded: boolean, onExpandChange: (expand: boolean) => void) => React.ReactNode;\\n    id: string;\\n    disabled?: boolean;\\n    className?: string;\\n    children: React.ReactNode;\\n    iconType?: CollapseItemIconType;\\n    hasIcon?: boolean;\\n    iconPosition?: CollapseItemIconPosition;\\n    content?: () => React.ReactNode | React.ReactNode;\\n}\\nexport declare type ICollapseItemProps = ICollapseItem;\\nexport declare function CollapseItem(props: ICollapseItem): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/collapse/SubCollapse\\" { \\n import { ReactNode } from \'react\';\\nimport { IRcSubCollapse } from \'@rc-hooks/collapse\';\\nimport { CollapseType } from \'@byte-design/ui/components/collapse/Collapse\';\\nexport interface ISubCollapseProps extends IRcSubCollapse {\\n    className?: string;\\n    type?: CollapseType;\\n    children: ReactNode;\\n}\\nexport declare function SubCollapse(props: ISubCollapseProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date\\" { \\n export * from \'@byte-design/ui/units/date/hooks/useDateState\';\\nexport * from \'@byte-design/ui/units/date/layout/CompareRangeDateHeader\';\\nexport * from \'@byte-design/ui/units/date/layout/CompareRangeDateFooter\';\\nexport * from \'@byte-design/ui/units/date/layout/DateComparisonInput\';\\nexport * from \'@byte-design/ui/units/date/layout/PopperWrapper\';\\nexport * from \'@byte-design/ui/units/date/layout/MultiplePopperWrapper\';\\nexport * from \'@byte-design/ui/units/date/layout/DateContainer\';\\nexport * from \'@byte-design/ui/units/date/layout/DatePreset\';\\nexport * from \'@byte-design/ui/units/date/units/ViewCol\';\\nexport * from \'@byte-design/ui/units/date/units/ViewGrid\';\\nexport * from \'@byte-design/ui/units/date/units/ViewGroup\';\\nexport * from \'@byte-design/ui/units/date/units/ViewNav\';\\nexport * from \'@byte-design/ui/units/date/units/ViewRow\';\\nexport * from \'@byte-design/ui/units/date/units/ViewWrapper\';\\nexport * from \'@byte-design/ui/units/date/util/setRangePanelDate\';\\nexport * from \'@byte-design/ui/units/date/util/updateSimplePanelDate\';\\nexport * from \'@byte-design/ui/units/date/util/updateRangePanelDate\';\\nexport * from \'@byte-design/ui/units/date/views/DateView\';\\nexport * from \'@byte-design/ui/units/date/views/MonthView\';\\nexport * from \'@byte-design/ui/units/date/views/WeekView\';\\nexport * from \'@byte-design/ui/units/date/views/YearView\'; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/hoc/withSimpleDate\\" { \\n import { IBaseDateOptions, PanelType, SimpleDate, SimpleDateChange } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { FC, HTMLAttributes } from \'react\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport interface ISimpleDatePresetItem {\\n    label: string;\\n    key: string;\\n    value: Date | string;\\n}\\nexport interface ISimpleDate extends Partial<IBaseDateOptions>, IDatePickerProps {\\n    format?: string;\\n    value: string;\\n    onChange?: SimpleDateChange;\\n    onValueChange?: SimpleDateChange;\\n    presets?: ISimpleDatePresetItem[];\\n}\\nexport declare type ISimpleDateProps = UnionOmit<ISimpleDate, HTMLAttributes<HTMLDivElement>>;\\nexport declare function updateSimplePanelDate(sd: SimpleDate, newVal: Date | null): void;\\nexport declare function withSimpleDate<P extends PanelType>(type: \'picker\' | \'panel\', panelType: P): FC<ISimpleDateProps>; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/types\\" { \\n import { ComponentSize } from \'@byte-design/config\';\\nimport { PopperPlacement } from \'@byte-design/ui/units/date/layout/PopperWrapper\';\\nexport interface IDatePickerProps {\\n    size?: ComponentSize;\\n    placeholder?: string;\\n    placement?: PopperPlacement;\\n    width?: string;\\n    clearable?: boolean;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/units/date/hoc/withRangeDate\\" { \\n import { AddStartValue, IBaseDateOptions, IDatePresetItem, PanelType, RangeDateChange } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { FC, HTMLAttributes } from \'react\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport interface IRangeDate extends Partial<IBaseDateOptions>, IDatePickerProps {\\n    format?: string;\\n    offset?: number;\\n    value: string[];\\n    onChange?: RangeDateChange;\\n    onValueChange?: RangeDateChange;\\n    presets?: IDatePresetItem[];\\n    onAddStartValue?: AddStartValue;\\n}\\nexport declare type IRangeDateProps = UnionOmit<IRangeDate, HTMLAttributes<HTMLDivElement>>;\\nexport declare function withRangeDate<P extends PanelType>(type: \'picker\' | \'panel\', panelType: P): FC<IRangeDateProps>; \\n \\n } \\n declare module \\"@byte-design/ui/components/date-time-panel/DateTimePanel\\" { \\n import { HTMLAttributes } from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ISimpleTime } from \'@rc-hooks/date\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nimport { ISimpleDate } from \'@byte-design/ui/units/date/hoc/withSimpleDate\';\\nexport interface IDateTimePanel extends Omit<ISimpleTime, \'onDateChange\'>, Omit<ISimpleDate, keyof IDatePickerProps> {\\n    onConfirm?: VoidFunction;\\n}\\nexport declare type IDateTimePanelProps = UnionOmit<IDateTimePanel, HTMLAttributes<HTMLDivElement>>;\\nexport declare function DateTimePanel(props: IDateTimePanelProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/drawer/Drawer\\" { \\n import { IRcPosition } from \'@rc-hooks/dialog\';\\nimport { HeightProperty, WidthProperty } from \'csstype\';\\nimport { CSSProperties, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { IDrawerPlacement } from \'@byte-design/ui/components/drawer/useDrawerPosition\';\\nexport interface IDrawer extends Omit<IRcPosition, \'horizontal\' | \'vertical\'> {\\n    placement: IDrawerPlacement;\\n    show?: boolean;\\n    closeable?: boolean;\\n    mask?: boolean;\\n    maskClosable?: boolean;\\n    afterClose?: () => void;\\n    onClose?: (reason?: string) => void;\\n    destroyOnClose?: boolean;\\n    header?: ReactNode | (() => ReactNode);\\n    footer?: ReactNode | (() => ReactNode);\\n    bodyStyle?: CSSProperties;\\n    className?: string;\\n    size?: ComponentSize;\\n    width?: WidthProperty<string>;\\n    height?: HeightProperty<string>;\\n    children?: ReactNode;\\n    style?: CSSProperties;\\n    wrapperStyle?: CSSProperties;\\n}\\nexport declare type IDrawerProps = IDrawer;\\nexport declare function Drawer(props: IDrawerProps): JSX.Element | null; \\n \\n } \\n declare module \\"@byte-design/ui/components/drawer/useDrawerPosition\\" { \\n import { IRcPositionHorizontal, IRcPositionVertical } from \'@rc-hooks/dialog\';\\nexport declare type IDrawerPlacement = \'left\' | \'right\' | \'top\' | \'bottom\';\\nexport interface IDrawerPosition {\\n    horizontal: IRcPositionHorizontal;\\n    vertical: IRcPositionVertical;\\n}\\nexport declare function useDrawerPosition(placement: IDrawerPlacement): IDrawerPosition; \\n \\n } \\n declare module \\"@byte-design/ui/components/dropdown/components/DropdownMenu\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nexport interface IDropdownMenu {\\n    activeId?: string;\\n    children?: ReactNode;\\n    onClick?: (id: string) => void;\\n    onOpenChange?: (openIds: string[]) => void;\\n}\\nexport declare type IDropdownMenuProps = UnionOmit<IDropdownMenu, HTMLAttributes<HTMLDivElement>>;\\nexport declare function DropdownMenu(props: IDropdownMenuProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/dropdown/components/DropdownMenuItem\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ReactNode } from \'react\';\\nimport { IListItemProps } from \'@byte-design/ui/components/util/ListItem\';\\nexport interface IDropdownMenuItem {\\n    id: string;\\n    disabled?: boolean;\\n    children: ReactNode;\\n}\\nexport declare type IDropdownMenuItemProps = UnionOmit<IDropdownMenuItem, Omit<IListItemProps, \'prefixCls\'>>;\\nexport declare function DropdownMenuItem(props: IDropdownMenuItemProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/dropdown/components/DropdownSubMenu\\" { \\n import { ReactNode } from \'react\';\\nexport interface IDropdownSubMenuProps {\\n    id: string;\\n    disabled?: boolean;\\n    title: ReactNode;\\n    children?: ReactNode;\\n    onClick?: (id: string) => void;\\n    onOpenChange?: (openIds: string[]) => void;\\n}\\nexport declare function DropdownSubMenu(props: IDropdownSubMenuProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/dropdown/Dropdown\\" { \\n import { PropsWithChildren } from \'react\';\\nimport { DropdownMenu } from \'@byte-design/ui/components/dropdown/components/DropdownMenu\';\\nimport { DropdownMenuItem } from \'@byte-design/ui/components/dropdown/components/DropdownMenuItem\';\\nimport { DropdownSubMenu } from \'@byte-design/ui/components/dropdown/components/DropdownSubMenu\';\\nimport { DropdownButton } from \'@byte-design/ui/components/dropdown/DropdownButton\';\\nimport { DropdownLink } from \'@byte-design/ui/components/dropdown/DropdownLink\';\\nimport { IDropdownOptions } from \'@byte-design/ui/components/dropdown/useDropdown\';\\nexport declare type IDropdownProps = PropsWithChildren<IDropdownOptions>;\\nexport declare function Dropdown(props: IDropdownProps): JSX.Element;\\nexport declare namespace Dropdown {\\n    var Link: typeof DropdownLink;\\n    var Button: typeof DropdownButton;\\n    var Menu: typeof DropdownMenu;\\n    var SubMenu: typeof DropdownSubMenu;\\n    var MenuItem: typeof DropdownMenuItem;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/dropdown/DropdownButton\\" { \\n\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IButtonProps } from \'@byte-design/ui/components/button\';\\nimport { IDropdownOptions } from \'@byte-design/ui/components/dropdown/useDropdown\';\\nexport declare type IDropdownButtonProps = UnionOmit<IDropdownOptions, IButtonProps>;\\nexport declare function DropdownButton(props: IDropdownButtonProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/dropdown/DropdownLink\\" { \\n\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ILinkProps } from \'@byte-design/ui/components/link\';\\nimport { IDropdownOptions } from \'@byte-design/ui/components/dropdown/useDropdown\';\\nexport declare type IDropdownLinkProps = UnionOmit<IDropdownOptions, Omit<ILinkProps, \'href\' | \'onClick\' | \'active\'>>;\\nexport declare function DropdownLink(props: IDropdownLinkProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/dropdown/useDropdown\\" { \\n import { IOffset } from \'@rc-hooks/dom\';\\nimport { CSSProperties, ReactElement, ReactNode } from \'react\';\\nexport interface IDropdownExtra {\\n    menu: ReactNode;\\n}\\nexport interface IDropdownPopoverOptions {\\n    trigger?: \'hover\' | \'click\';\\n    className?: string;\\n    disabled?: boolean;\\n    offset?: IOffset;\\n    showDelay?: number;\\n    hideDelay?: number;\\n    placement?: \'bottom-start\' | \'bottom\' | \'bottom-end\';\\n    popoverStyle?: CSSProperties;\\n    arrow?: boolean;\\n    arrowOffset?: IOffset;\\n}\\nexport declare type IDropdownOptions = IDropdownExtra & IDropdownPopoverOptions;\\nexport declare function useDropdown(options: IDropdownOptions, Trigger: ReactNode): ReactElement; \\n \\n } \\n declare module \\"@byte-design/ui/components/empty/Empty\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface IEmpty {\\n    icon?: React.ReactNode;\\n    content?: React.ReactNode;\\n    children?: React.ReactNode;\\n}\\nexport declare type IEmptyProps = UnionOmit<IEmpty, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Empty(props: IEmptyProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/error-boundary/ErrorBoundary\\" { \\n import React, { ErrorInfo } from \'react\';\\nexport interface IFallbackComponentProps {\\n    error: Error;\\n    info: string;\\n}\\nexport interface IErrorBoundaryProps {\\n    onError?: (err: Error, stack: string) => void;\\n    FallbackComponent?: React.ComponentType<IFallbackComponentProps>;\\n}\\nexport interface IErrorBoundaryState {\\n    error: Error | null;\\n    info: string | null;\\n    showSingleton: boolean;\\n}\\nexport declare class ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\\n    state: IErrorBoundaryState;\\n    shouldComponentUpdate(): boolean;\\n    componentDidCatch(error: Error, satck: ErrorInfo): void;\\n    renderDefault(error: Error, info: string): React.ReactNode;\\n    render(): React.ReactNode;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/form/FormGroup\\" { \\n import { IFormGroupInfo, IFormGroupOptions } from \'@rc-hooks/form\';\\nimport { ReactNode } from \'react\';\\nexport interface IFormGroupProps extends IFormGroupOptions {\\n    children?: ((info: Omit<IFormGroupInfo, \'scope\'>) => ReactNode) | ReactNode;\\n}\\nexport declare function FormGroup(props: IFormGroupProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/form/FormItem\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nimport { IFormGroupOptions } from \'@rc-hooks/form\';\\nimport { IFormContainer } from \'@byte-design/ui/components/form-container\';\\nexport declare type IFormItem = Omit<IFormContainer, \'status\' | \'help\'> & IFormGroupOptions & {\\n    renderHelp?: (msg: string) => ReactNode;\\n};\\nexport declare type IFormItemProps = UnionOmit<IFormItem, HTMLAttributes<HTMLDivElement>>;\\nexport declare function FormItem(props: IFormItemProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/form/Form\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { Form as FormClass, FormModel, FormValidateError } from \'@rc-hooks/form\';\\nexport interface IForm {\\n    form?: FormClass;\\n    defaultModel?: FormModel;\\n    inline?: boolean;\\n    vertical?: boolean;\\n    onModelChange?: (value: FormModel) => void;\\n    onSubmit?: (value: FormModel) => void;\\n    onSubmitFailed?: (errors: Array<FormValidateError<unknown>>) => void;\\n}\\nexport declare type IFormProps = UnionOmit<IForm, HTMLAttributes<HTMLFormElement>>;\\nexport declare function Form(props: IFormProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/form/withField\\" { \\n import { IFormFieldBase, IFormFieldOptions } from \'@rc-hooks/form\';\\nimport { ComponentType, FC } from \'react\';\\nexport declare type IWithField<T> = Omit<IFormFieldOptions<T>, \'initialValue\'>;\\nexport declare type IFormField<T> = IFormFieldBase<T> & {\\n    invalid?: boolean;\\n};\\nexport declare type IWithFieldProps<T, P extends IFormField<T>> = IWithField<T> & Omit<P, \'value\' | \'onValueChange\'>;\\nexport interface IWithFieldConfig {\\n    displayName?: string;\\n    useDomRef?: boolean;\\n    useInputRef?: boolean;\\n    useInvalid?: boolean;\\n}\\nexport declare function withField<T, P extends IFormField<T>>(Component: ComponentType<P>, initialValue: T, options?: IWithFieldConfig): FC<IWithFieldProps<T, P>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/form/useForm\\" { \\n import { Form, IFormOptions } from \'@rc-hooks/form\';\\nexport declare function useForm(options?: IFormOptions): Form; \\n \\n } \\n declare module \\"@byte-design/ui/components/form-container/FormContainer\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport declare type FormAlign = \'left\' | \'right\';\\nexport declare type FormSize = Extract<ComponentSize, \'sm\' | \'md\' | \'lg\'>;\\nexport declare type FormStatus = \'success\' | \'warning\' | \'error\' | \'validating\';\\nexport interface IFormContainer {\\n    hasLabel?: boolean;\\n    label?: ReactNode;\\n    labelWidth?: number;\\n    size?: FormSize;\\n    align?: FormAlign;\\n    tooltip?: ReactNode;\\n    colon?: boolean;\\n    help?: ReactNode;\\n    hint?: ReactNode;\\n    status?: FormStatus;\\n    required?: boolean;\\n    level?: number;\\n    inline?: boolean;\\n    vertical?: boolean;\\n}\\nexport declare type IFormContainerProps = UnionOmit<IFormContainer, HTMLAttributes<HTMLDivElement>>;\\nexport declare function FormContainer(props: IFormContainerProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/image-view/ImageView\\" { \\n import { CSSProperties } from \'react\';\\ninterface IImageItem {\\n    url: string;\\n    title?: string;\\n}\\nexport interface IImageView {\\n    images: IImageItem[];\\n    handleClose: () => void;\\n    scaleRatio?: number;\\n    activeIndex?: number;\\n    maskStyle?: CSSProperties;\\n}\\nexport declare const ImageView: (props: IImageView) => JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/info/Info\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport declare type InfoType = \'info\' | \'error\' | \'warning\' | \'success\';\\nexport interface IInfo {\\n    type?: InfoType | string;\\n    title?: string | ReactNode;\\n    content: string | ReactNode;\\n    show?: boolean;\\n    size?: ComponentSize;\\n    icon?: ReactNode;\\n    showIcon?: boolean;\\n    hasClose?: boolean;\\n    onClose?: () => void;\\n}\\nexport declare type IInfoProps = UnionOmit<IInfo, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function Info(props: IInfoProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/input/Input\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { InputHTMLAttributes, ReactNode, Ref } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { IInputWrapper } from \'@byte-design/ui/units/input-wrapper\';\\nexport interface IInput extends Omit<IInputWrapper, \'domRef\' | \'clear\'> {\\n    domRef?: Ref<HTMLElement>;\\n    clearable?: boolean;\\n    prepend?: ReactNode;\\n    append?: ReactNode;\\n    needGrouped?: boolean;\\n    size?: ComponentSize;\\n    invalid?: boolean;\\n}\\nexport declare type IInputProps = UnionOmit<IInput, InputHTMLAttributes<HTMLSpanElement>>;\\nexport declare function Input(props: IInputProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/input/InputGroup\\" { \\n import { HTMLAttributes } from \'react\';\\nexport declare type IInputGroupProps = HTMLAttributes<HTMLSpanElement>;\\nexport declare function InputGroup(props: IInputGroupProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/input-number/InputNumberContent\\" { \\n import { INumberConverter } from \'@rc-hooks/region\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { InputCommonAttributes } from \'@byte-design/ui/units/input-wrapper/const\';\\nexport interface IInputNumberContent {\\n    disabled?: boolean;\\n    size?: ComponentSize;\\n    hideButton?: boolean;\\n    format?: INumberConverter;\\n    parse?: INumberConverter;\\n}\\nexport declare type IInputNumberContentProps = UnionOmit<IInputNumberContent, HTMLAttributes<HTMLDivElement> & InputCommonAttributes>;\\nexport declare function InputNumberContent(props: IInputNumberContentProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/layout/Layout\\" { \\n\\nimport { ILayoutProps } from \'@byte-design/ui/components/layout/types\';\\nexport declare function Layout(props: ILayoutProps): JSX.Element;\\nexport declare namespace Layout {\\n    var Aside: typeof import(\\"./Aside\\").Aside;\\n    var Content: typeof import(\\"./Content\\").Content;\\n    var Header: typeof import(\\"./Header\\").Header;\\n    var Footer: typeof import(\\"./Footer\\").Footer;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/list/List\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nimport { ISortableContainerMode } from \'@rc-hooks/sortable\';\\nimport { IDraggableEvent } from \'@co-hooks/draggable\';\\nexport declare type ListPlaceholderType = \'clone\' | \'line\' | \'block\';\\nexport interface IList<T> {\\n    datasource: T[];\\n    renderItem: (data: T) => ReactNode;\\n    onChange?: (value: T[]) => void;\\n    onValueChange?: (value: T[]) => void;\\n    onDragStart?: (value: IDraggableEvent<T>) => void;\\n    onDragging?: (value: IDraggableEvent<T>) => void;\\n    onDragEnd?: (value: IDraggableEvent<T>) => void;\\n    onDragCancel?: () => void;\\n    draggable?: boolean;\\n    mode?: ISortableContainerMode;\\n    trigger?: string;\\n    placeholder?: ListPlaceholderType;\\n    bordered?: boolean;\\n    header?: ReactNode;\\n    footer?: ReactNode;\\n}\\nexport declare type IListProps<T> = UnionOmit<IList<T>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function List<T>(props: IListProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/list-viewer/Viewer\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface IListViewerValueItem<T> {\\n    value: T;\\n    label: React.ReactNode;\\n    group?: string;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    fixed?: boolean;\\n}\\nexport declare type ListViewerType = \'tag\' | \'row\';\\nexport interface IListViewer<T> {\\n    value: Array<IListViewerValueItem<T>>;\\n    type?: ListViewerType;\\n    title?: string;\\n    className?: string;\\n    useGroup?: boolean;\\n    showNum?: boolean;\\n    showClearAll?: boolean;\\n    sort?: boolean;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    emptyText?: string;\\n    onChange?: (value: Array<IListViewerValueItem<T>>) => void;\\n    onValueChange?: (value: Array<IListViewerValueItem<T>>) => void;\\n    onSort?: (value: Array<IListViewerValueItem<T>>) => void;\\n    onDelete?: (item: IListViewerValueItem<T>) => void;\\n    onClearAll?: () => void;\\n}\\nexport declare type IListViewerProps<T> = UnionOmit<IListViewer<T>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function ListViewer<T>(props: IListViewerProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/loading/BaseLoading\\" { \\n\\nimport { ILoadingProps } from \'@byte-design/ui/components/loading\';\\ndeclare type ILoadingBaseProps = ILoadingProps & {\\n    type: string;\\n};\\nexport declare type IInlineLoadingProps = Omit<ILoadingBaseProps, \'type\'>;\\nexport declare const InlineLoading: (props: Pick<ILoadingBaseProps, \\"left\\" | \\"right\\" | \\"show\\" | \\"bottom\\" | \\"top\\" | \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"color\\" | \\"horizontal\\" | \\"vertical\\" | \\"icon\\" | \\"children\\" | \\"translate\\" | \\"zIndex\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\" | \\"maskStyle\\" | \\"maskClassName\\" | \\"iconStyle\\" | \\"iconClassName\\">) => JSX.Element;\\nexport declare type IBlockLoadingProps = Omit<ILoadingBaseProps, \'type\'>;\\nexport declare const BlockLoading: (props: Pick<ILoadingBaseProps, \\"left\\" | \\"right\\" | \\"show\\" | \\"bottom\\" | \\"top\\" | \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"color\\" | \\"horizontal\\" | \\"vertical\\" | \\"icon\\" | \\"children\\" | \\"translate\\" | \\"zIndex\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\" | \\"maskStyle\\" | \\"maskClassName\\" | \\"iconStyle\\" | \\"iconClassName\\">) => JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/loading/FullLoading\\" { \\n\\nimport { ILoadingProps } from \'@byte-design/ui/components/loading\';\\nexport declare type IFullLoadingProps = Omit<ILoadingProps, \'type\'>;\\nexport declare function FullLoading(props: IFullLoadingProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/menu/Menu\\" { \\n\\nimport { MenuItem } from \'@byte-design/ui/components/menu/components/MenuItem\';\\nimport { IMenuProps } from \'@byte-design/ui/components/menu/types\';\\nexport declare function Menu<P>(props: IMenuProps<P>): JSX.Element;\\nexport declare namespace Menu {\\n    var SubMenu: typeof import(\\"./components/SubMenu\\").SubMenu;\\n    var Item: typeof MenuItem;\\n    var ItemGroup: typeof import(\\"./components/ItemGroup\\").ItemGroup;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/menu/types\\" { \\n import { IMenuItemOptions, IRcMenuProps, IRcSubMenuProps } from \'@rc-hooks/menu\';\\nimport { CSSProperties, ReactNode } from \'react\';\\nexport declare type IMenuType = \'vertical\' | \'horizontal\';\\nexport declare type ITheme = \'dark\' | \'light\';\\nexport interface IMenuExtraProps {\\n    theme: ITheme;\\n    collapse: boolean;\\n    showLine: boolean;\\n}\\nexport declare type IMenuProps<P> = IRcMenuProps<P> & {\\n    type?: IMenuType;\\n    style?: CSSProperties;\\n    theme?: ITheme;\\n    showLine?: boolean;\\n    onCollapseChange?: (collapsed: boolean) => void;\\n    onClick?: (id: string) => void;\\n};\\nexport interface IItemGroupProps {\\n    icon?: ReactNode;\\n    title: ReactNode;\\n    children: ReactNode;\\n}\\nexport declare type IMenuItemProps = IMenuItemOptions & {\\n    icon?: ReactNode;\\n    disabled?: boolean;\\n    children: ReactNode;\\n};\\nexport declare type ISubMenuProps = IRcSubMenuProps & {\\n    icon?: ReactNode;\\n    disabled?: boolean;\\n    title: ReactNode;\\n}; \\n \\n } \\n declare module \\"@byte-design/ui/components/message/Message\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nexport declare type MessageType = \'info\' | \'error\' | \'warning\' | \'success\' | \'loading\';\\nexport interface IMessage {\\n    content: ReactNode;\\n    type?: MessageType | string;\\n    shadow?: boolean;\\n    icon?: ReactNode;\\n    showIcon?: boolean;\\n    hasClose?: boolean;\\n    onClose?: () => void;\\n}\\nexport declare type IMessageProps = UnionOmit<IMessage, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function Message(props: IMessageProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/modal/Alert\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React from \'react\';\\nimport { IButtonProps } from \'@byte-design/ui/components/button\';\\nimport { IModalProps } from \'@byte-design/ui/components/modal/Modal\';\\nexport interface IAlert {\\n    title?: string;\\n    okText?: string | React.ReactNode;\\n    okButtonProps?: IButtonProps;\\n    onOk?: () => void;\\n}\\nexport declare type IAlertProps = UnionOmit<IAlert, IModalProps>;\\nexport declare function Alert(props: IAlertProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/modal/Confirm\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React from \'react\';\\nimport { IButtonProps } from \'@byte-design/ui/components/button\';\\nimport { IModalProps } from \'./Modal\';\\nexport interface IConfirm {\\n    title?: string;\\n    okText?: string | React.ReactNode;\\n    okButtonProps?: IButtonProps;\\n    cancelText?: string | React.ReactNode;\\n    cancelButtonProps?: IButtonProps;\\n    onOk?: () => void | Promise<any>;\\n    onCancel?: () => void | Promise<any>;\\n}\\nexport declare type IConfirmProps = UnionOmit<IConfirm, IModalProps>;\\nexport declare function Confirm(props: IConfirmProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/modal/manual\\" { \\n import { IAlertProps } from \'@byte-design/ui/components/modal/Alert\';\\nimport { IConfirmProps } from \'@byte-design/ui/components/modal/Confirm\';\\nexport declare type INeedWrapFunction = (...args: any[]) => Promise<any> | any | void;\\nexport declare type IWrapFunctionResult = (...args: any[]) => Promise<any>;\\nexport declare function confirm(props: Omit<IConfirmProps, \'show\'>): void;\\nexport declare function alert(props: Omit<IAlertProps, \'show\'>): void; \\n \\n } \\n declare module \\"@byte-design/ui/components/modal/Modal\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HeightProperty, WidthProperty } from \'csstype\';\\nimport { CSSProperties, HTMLAttributes, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport interface IModal {\\n    getContainer?: () => HTMLElement;\\n    show?: boolean;\\n    closeable?: boolean;\\n    mask?: boolean;\\n    maskClosable?: boolean;\\n    maskStyle?: CSSProperties;\\n    onClose?: (reason?: string) => void;\\n    afterClose?: () => void;\\n    lazyInit?: boolean;\\n    destroyOnClose?: boolean;\\n    header?: ReactNode | (() => ReactNode);\\n    footer?: ReactNode | (() => ReactNode);\\n    top?: number;\\n    width?: WidthProperty<string>;\\n    height?: HeightProperty<string>;\\n    bodyStyle?: CSSProperties;\\n    className?: string;\\n    children?: ReactNode;\\n    size?: ComponentSize;\\n    icon?: ReactNode;\\n    wrapperClassName?: string;\\n    wrapperStyle?: CSSProperties;\\n}\\nexport declare type IModalProps = UnionOmit<IModal, Omit<HTMLAttributes<HTMLDivElement>, \'onClick\'>>;\\nexport interface ModalType {\\n    (props: IModalProps): JSX.Element | null;\\n}\\nexport declare const Modal: ModalType; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-auto-complete/MultipleAutoComplete\\" { \\n import React from \'react\';\\nimport { IMultipleAutoComplete } from \'@rc-hooks/autocomplete\';\\nimport { IAutoCompletePanelBase } from \'@byte-design/ui/components/auto-complete/AutoCompletePanel\';\\nimport { IAutoCompleteMainBase } from \'@byte-design/ui/components/auto-complete/AutoCompleteMain\';\\nexport declare type IMultipleAutoCompleteProps<T> = IMultipleAutoComplete<T> & IAutoCompleteMainBase & IAutoCompletePanelBase & {\\n    className?: string;\\n    style?: React.CSSProperties;\\n};\\nexport declare function MultipleAutoComplete<T>(props: IMultipleAutoCompleteProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-cascader/MultipleCascader\\" { \\n\\nimport { ICascaderData } from \'@rc-hooks/cascader\';\\nimport { ICascaderSelectPopperBase } from \'@byte-design/ui/components/cascader/components/CascaderSelectPopper\';\\nimport { IMultipleCascaderPanelProps } from \'@byte-design/ui/components/multiple-cascader-panel/MultipleCascaderPanel\';\\nimport { ICascaderBase } from \'@byte-design/ui/components/cascader/Cascader\';\\nexport declare type IMultipleCascaderProps<T, D extends ICascaderData<T>> = ICascaderBase & IMultipleCascaderPanelProps<T, D> & ICascaderSelectPopperBase<T, D>;\\nexport declare function MultipleCascader<T, D extends ICascaderData<T>>(props: IMultipleCascaderProps<T, D>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-cascader-panel/MultipleCascaderPanel\\" { \\n\\nimport { ICascaderData, ICascaderOptions } from \'@rc-hooks/cascader\';\\nimport { ICascaderPanelCompProps } from \'@byte-design/ui/components/cascader/components/CascaderPanelComp\';\\nimport { ICascaderSearch } from \'@byte-design/ui/components/cascader/components/CascaderSearch\';\\nexport declare type IMultipleCascaderPanelProps<T, D extends ICascaderData<T>> = Omit<ICascaderOptions<T>, \'multiple\' | \'value\' | \'onChange\'> & ICascaderPanelCompProps<T, D> & ICascaderSearch<T, D> & {\\n    value?: T[];\\n    onChange?: (value: T[]) => void;\\n    onValueChange?: (value: T[]) => void;\\n    onDisplayInfoChange?: (info: D[]) => void;\\n    showClearAll?: boolean;\\n    viewer?: boolean;\\n};\\nexport declare function MultipleCascaderPanel<T, D extends ICascaderData<T>>(props: IMultipleCascaderPanelProps<T, D>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/hoc/withMultipleDate\\" { \\n import { IBaseDateOptions, IDatePresetItem, MultipleDate, MultipleDateChange, PanelType } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { FC, HTMLAttributes } from \'react\';\\nimport { IDatePickerProps } from \'@byte-design/ui/units/date/types\';\\nexport interface IMultipleDate extends Partial<IBaseDateOptions>, IDatePickerProps {\\n    format?: string;\\n    offset?: number;\\n    value: string[];\\n    enableDragMask?: boolean;\\n    dragMaskSelectType?: \'cover\' | \'cross\';\\n    enableDragMaskReverseMode?: boolean;\\n    onChange?: MultipleDateChange;\\n    onValueChange?: MultipleDateChange;\\n    presets?: IDatePresetItem[];\\n}\\nexport declare type IMultipleDateProps = UnionOmit<IMultipleDate, HTMLAttributes<HTMLDivElement>>;\\nexport declare function updateMultiplePanelDate(sd: MultipleDate, newVal: Date[]): void;\\nexport declare function withMultipleDate<P extends PanelType>(type: \'picker\' | \'panel\', panelType: P): FC<IMultipleDateProps>; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-rimless-select/MultipleRimlessSelect\\" { \\n import { ISelectDisplayInfoItem, ISelectQuery } from \'@rc-hooks/select\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ISelectBase } from \'@byte-design/ui/components/select/components/SelectBase\';\\nimport { ISelectExtraProps } from \'@byte-design/ui/components/select/Select\';\\nexport interface IMultipleRimlessSelect<T> {\\n    useTag?: boolean;\\n    value?: T[];\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    filterOption?: ISelectQuery<T>;\\n    onChange?: (value: T[]) => void;\\n    onValueChange?: (value: T[]) => void;\\n    onDisplayInfoChange?: (info: Array<ISelectDisplayInfoItem<T>>) => void;\\n    showAll?: boolean;\\n    autoClearSearchValue?: boolean;\\n}\\nexport declare type MultipleRimlessSelectProps<T> = UnionOmit<IMultipleRimlessSelect<T> & ISelectExtraProps & ISelectBase<T>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function MultipleRimlessSelect<T>(props: MultipleRimlessSelectProps<T>): JSX.Element;\\nexport declare namespace MultipleRimlessSelect {\\n    var Option: typeof import(\\"../select/Option\\").Option;\\n    var OptionGroup: typeof import(\\"../select/OptionGroup\\").OptionGroup;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-select/MultipleSelect\\" { \\n import { ISelectDisplayInfoItem, ISelectQuery } from \'@rc-hooks/select\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ISelectBase } from \'@byte-design/ui/components/select/components/SelectBase\';\\nimport { ISelectExtraProps } from \'@byte-design/ui/components/select/Select\';\\nexport interface IMultipleSelect<T> {\\n    value?: T[];\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    filterOption?: ISelectQuery<T>;\\n    onChange?: (value: T[]) => void;\\n    onValueChange?: (value: T[]) => void;\\n    onDisplayInfoChange?: (info: Array<ISelectDisplayInfoItem<T>>) => void;\\n    showAll?: boolean;\\n    autoClearSearchValue?: boolean;\\n    onSearchChange?: (query: string) => void;\\n}\\nexport declare type MultipleSelectProps<T> = UnionOmit<IMultipleSelect<T> & ISelectExtraProps & Omit<ISelectBase<T>, \'renderTrigger\'>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function MultipleSelect<T>(props: MultipleSelectProps<T>): JSX.Element;\\nexport declare namespace MultipleSelect {\\n    var Option: typeof import(\\"../select/Option\\").Option;\\n    var OptionGroup: typeof import(\\"../select/OptionGroup\\").OptionGroup;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/tree/types\\" { \\n import { Cascader, CascaderState, ICascaderDatasource, ICascaderLoad, IHashMapItem } from \'@rc-hooks/tree\';\\nimport { CSSProperties, ReactNode } from \'react\';\\nexport interface IBaseTreeOptions<T, P> {\\n    onExpand?: (value: T[]) => void;\\n    datasource: Array<ICascaderDatasource<T, P>>;\\n    load?: ICascaderLoad<T, P>;\\n    expandedIds?: T[];\\n    defaultExpandedIds?: T[];\\n    accordion?: boolean;\\n    partialCheckAble?: boolean;\\n    selectToExpand?: boolean;\\n}\\nexport interface ITreeInfo<T, P> {\\n    disabled?: boolean;\\n    showLine?: boolean;\\n    search?: string;\\n    renderItem?: (item: IHashMapItem<T, P>, highlightLabel: ReactNode) => ReactNode;\\n}\\nexport declare type ITreeExtraProps<T, P> = ITreeInfo<T, P> & {\\n    className?: string;\\n    style?: CSSProperties;\\n};\\nexport declare type IBaseTreeProps<T, P> = ITreeInfo<T, P> & {\\n    className?: string;\\n    style?: CSSProperties;\\n    multiple?: boolean;\\n    cascader: Cascader<T, P>;\\n};\\nexport declare type ISingleTreeProps<T, P> = IBaseTreeOptions<T, P> & ITreeExtraProps<T, P> & {\\n    onSelect?: (value: T) => void;\\n    selectedId?: T;\\n};\\nexport declare type IMultipleTreeProps<T, P> = IBaseTreeOptions<T, P> & ITreeExtraProps<T, P> & {\\n    onSelect?: (value: T[]) => void;\\n    spread?: boolean;\\n    selectedIds?: T[];\\n};\\nexport interface ITreeNodeProps {\\n    id: string;\\n    index: number;\\n}\\nexport interface IItemProps {\\n    id: string;\\n    isLeaf: boolean;\\n    label: ReactNode;\\n    state: CascaderState;\\n    expanded: boolean;\\n    loading?: boolean;\\n    disabled?: boolean;\\n    showLine?: boolean;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-tree/MultipleTree\\" { \\n\\nimport { IMultipleTreeProps } from \'@byte-design/ui/components/tree/types\';\\nexport declare function MultipleTree<T, P>(props: IMultipleTreeProps<T, P>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/multiple-tree-select/MultipleTreeSelect\\" { \\n\\nimport { IMultipleTreeProps } from \'@byte-design/ui/components/multiple-tree\';\\nexport declare type ICascaderSelectPlacement = \'bottom-start\' | \'bottom\' | \'bottom-end\';\\nexport declare type IMultipleTreeSelectProps<T, P> = IMultipleTreeProps<T, P> & {\\n    searchable?: boolean;\\n    placeholder?: string;\\n    placement?: ICascaderSelectPlacement;\\n};\\nexport declare function MultipleTreeSelect<T, P>(props: IMultipleTreeSelectProps<T, P>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/notification/Notification\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nexport declare type NotificationType = \'info\' | \'error\' | \'warning\' | \'success\';\\nexport interface INotification {\\n    type?: NotificationType | string;\\n    message?: ReactNode;\\n    description: ReactNode;\\n    shadow?: boolean;\\n    btn?: ReactNode;\\n    icon?: ReactNode;\\n    showIcon?: boolean;\\n    hasClose?: boolean;\\n    onClose?: () => void;\\n}\\nexport declare type INotificationProps = UnionOmit<INotification, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function Notification(props: INotificationProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/pager/Pager\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { PagerSimple } from \'@byte-design/ui/components/pager/PagerSimple\';\\nexport interface IPager {\\n    showTotal?: boolean;\\n    showJump?: boolean;\\n    disabled?: boolean;\\n    useText?: boolean;\\n    pageSize?: number;\\n    className?: string;\\n    size?: \'sm\' | \'xs\';\\n    wrapNums?: number;\\n    pageSizeList?: number[];\\n    page: number;\\n    total: number;\\n    onPageSizeChange?: (page: number, pageSize: number) => void;\\n    onPageChange: (index: number) => void;\\n}\\nexport declare type IPagerProps = UnionOmit<IPager, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Pager(props: IPagerProps): JSX.Element;\\nexport declare namespace Pager {\\n    var Simple: typeof PagerSimple;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/pager/PagerSimple\\" { \\n\\nexport interface ISimplePager {\\n    showTotal?: boolean;\\n    disabled?: boolean;\\n    pageSize?: number;\\n    className?: string;\\n    size?: \'sm\' | \'xs\';\\n    page: number;\\n    total: number;\\n    onPageChange?: (index: number) => void;\\n}\\nexport declare type ISimplePageProps = ISimplePager;\\nexport declare function PagerSimple(props: ISimplePageProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/components/ClickTrigger\\" { \\n import { IRcClickTriggerProps } from \'@rc-hooks/popper\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport declare type IClickTriggerProps<T> = UnionOmit<IRcClickTriggerProps<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function ClickTrigger<T>(props: IClickTriggerProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/components/FocusTrigger\\" { \\n import { IRcFocusTriggerProps } from \'@rc-hooks/popper\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport declare type IFocusTriggerProps<T> = UnionOmit<IRcFocusTriggerProps<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function FocusTrigger<T>(props: IFocusTriggerProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/components/HoverTrigger\\" { \\n import { IRcHoverTriggerProps } from \'@rc-hooks/popper\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport declare type IHoverTriggerProps<T> = UnionOmit<IRcHoverTriggerProps<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function HoverTrigger<T>(props: IHoverTriggerProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/Popover\\" { \\n import { ITriggerOptions, IUseTriggerResult, TriggerType } from \'@rc-hooks/popper\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { CSSProperties, HTMLAttributes, ReactNode } from \'react\';\\nimport { IRcPopoverProps } from \'@byte-design/ui/units/popover-wrapper\';\\nimport { ClickTrigger as PopoverClickTrigger } from \'@byte-design/ui/components/popover/components/ClickTrigger\';\\nimport { FocusTrigger as PopoverFocusTrigger } from \'@byte-design/ui/components/popover/components/FocusTrigger\';\\nimport { HoverTrigger as PopoverHoverTrigger } from \'@byte-design/ui/components/popover/components/HoverTrigger\';\\nimport { ManualTrigger as PopoverManualTrigger } from \'@byte-design/ui/components/popover/components/ManualTrigger\';\\nimport { PopoverAlert } from \'@byte-design/ui/components/popover/PopoverAlert\';\\nimport { PopoverConfirm } from \'@byte-design/ui/components/popover/PopoverConfirm\';\\nimport { PopoverContainer } from \'@byte-design/ui/components/popover/PopoverContainer\';\\nimport { SingletonPopover } from \'@byte-design/ui/components/popover/SingletonPopover\';\\nexport interface IPopoverExtra<T> extends ITriggerOptions<T> {\\n    trigger?: TriggerType;\\n    showDelay?: number;\\n    hideDelay?: number;\\n    children: ((data: IUseTriggerResult) => React.ReactNode) | React.ReactNode;\\n    popoverClassName?: string;\\n    popoverStyle?: CSSProperties;\\n    disableToggleClose?: boolean;\\n    getPopper: ((triggerData: T | null) => ReactNode) | ReactNode;\\n}\\nexport declare type IPopoverProps<T> = UnionOmit<IPopoverExtra<T> & Omit<IRcPopoverProps<T>, \'triggerIds\' | \'getPopper\'>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function Popover<T>(props: IPopoverProps<T>): JSX.Element;\\nexport declare namespace Popover {\\n    var Confirm: typeof PopoverConfirm;\\n    var Alert: typeof PopoverAlert;\\n    var Container: typeof PopoverContainer;\\n    var Singleton: typeof SingletonPopover;\\n    var ClickTrigger: typeof PopoverClickTrigger;\\n    var HoverTrigger: typeof PopoverHoverTrigger;\\n    var FocusTrigger: typeof PopoverFocusTrigger;\\n    var ManualTrigger: typeof PopoverManualTrigger;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/PopoverAlert\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ReactNode } from \'react\';\\nimport { IButtonProps } from \'@byte-design/ui/components/button\';\\nimport { IPopoverProps } from \'@byte-design/ui/components/popover/Popover\';\\nexport interface IPopoverAlert<T> {\\n    title?: ReactNode;\\n    okText?: ReactNode;\\n    okButtonProps?: IButtonProps;\\n    onOk?: () => void;\\n    icon?: ReactNode;\\n    getPopper?: ((triggerData: T | null) => ReactNode) | ReactNode;\\n}\\nexport declare type IPopoverAlertProps<T> = UnionOmit<IPopoverAlert<T>, IPopoverProps<T>>;\\nexport declare function PopoverAlert<T>(props: IPopoverAlertProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/PopoverConfirm\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ReactNode } from \'react\';\\nimport { IButtonProps } from \'@byte-design/ui/components/button\';\\nimport { IPopoverProps } from \'@byte-design/ui/components/popover/Popover\';\\nexport interface IPopoverConfirm<T> {\\n    title?: ReactNode;\\n    okText?: ReactNode;\\n    okButtonProps?: IButtonProps;\\n    cancelText?: ReactNode;\\n    cancelButtonProps?: IButtonProps;\\n    onOk?: () => void;\\n    onCancel?: () => void;\\n    getPopper: ((triggerData: T | null) => ReactNode) | ReactNode;\\n    icon?: ReactNode;\\n}\\nexport declare type IPopoverConfirmProps<T> = UnionOmit<IPopoverConfirm<T>, Omit<IPopoverProps<T>, \'onHide\'>>;\\nexport declare function PopoverConfirm<T>(props: IPopoverConfirmProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/PopoverContainer\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ReactNode } from \'react\';\\nimport { IPopoverProps } from \'@byte-design/ui/components/popover/Popover\';\\nexport interface IPopoverContainer<T> {\\n    header?: ReactNode;\\n    footer?: ReactNode;\\n    getPopper: ((triggerData: T | null) => ReactNode) | ReactNode;\\n    icon?: ReactNode;\\n}\\nexport declare type IPopoverContainerProps<T> = UnionOmit<IPopoverContainer<T>, IPopoverProps<T>>;\\nexport declare function PopoverContainer<T>(props: IPopoverContainerProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/SingletonPopover\\" { \\n import React, { CSSProperties, ReactNode } from \'react\';\\nimport { IRcPopoverProps } from \'@byte-design/ui/units/popover-wrapper\';\\nexport interface ISingletonPopoverExtra<T> {\\n    children?: React.ReactNode;\\n    popoverClassName?: string;\\n    popoverStyle?: CSSProperties;\\n    getPopper: ((triggerData: T | null) => ReactNode) | ReactNode;\\n}\\nexport declare type ISingletonPopoverProps<T> = ISingletonPopoverExtra<T> & Omit<IRcPopoverProps<T>, \'className\' | \'style\' | \'getArrow\' | \'getPopper\'>;\\nexport declare function SingletonPopover<T>(props: ISingletonPopoverProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/pure-table/TableHead\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport interface ITableHead {\\n    fixed?: boolean;\\n    borderTop?: boolean;\\n}\\nexport declare type ITableHeadProps = UnionOmit<ITableHead, HTMLAttributes<HTMLDivElement>>;\\nexport declare function TableHead<T>(props: ITableHeadProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/pure-table/TableScrollerBar\\" { \\n\\nexport interface ITableScrollerBarProps {\\n    className?: string;\\n    fixed?: boolean;\\n}\\nexport declare function TableScrollerBar(props: ITableScrollerBarProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/radio-group/Button\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ButtonHTMLAttributes } from \'react\';\\nimport { IRadioGroupItemProps } from \'@byte-design/ui/components/radio-group/Radio\';\\nexport declare type IRadioGroupButtonProps<T> = UnionOmit<IRadioGroupItemProps<T>, ButtonHTMLAttributes<HTMLButtonElement>>;\\nexport declare function RadioGroupButton<T>(props: IRadioGroupButtonProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/radio-group/Group\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { RadioGroupButton } from \'@byte-design/ui/components/radio-group/Button\';\\nimport { RadioGroupRadio } from \'@byte-design/ui/components/radio-group/Radio\';\\nimport { RadioGroupTag } from \'@byte-design/ui/components/radio-group/Tag\';\\nexport declare type RadioGroupType = \'button\' | \'radio\' | \'tag\';\\nexport interface IRadioGroupExtraProps {\\n    size?: ComponentSize;\\n    type: RadioGroupType;\\n}\\nexport interface IRadioGroup<T> extends Partial<IRadioGroupExtraProps> {\\n    type?: RadioGroupType;\\n    disabled?: boolean;\\n    value?: T;\\n    onChange?: (value?: T) => void;\\n    onValueChange?: (value?: T) => void;\\n}\\nexport declare type IRadioGroupProps<T> = UnionOmit<IRadioGroup<T>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function RadioGroup<T>(props: IRadioGroupProps<T>): JSX.Element;\\nexport declare namespace RadioGroup {\\n    var Radio: typeof RadioGroupRadio;\\n    var Button: typeof RadioGroupButton;\\n    var Tag: typeof RadioGroupTag;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/radio-group/Radio\\" { \\n\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IRadioProps } from \'@byte-design/ui/components/radio\';\\nimport { IRadioGroupExtraProps } from \'@byte-design/ui/components/radio-group/Group\';\\nexport interface IRadioGroupItemProps<T> extends Partial<IRadioGroupExtraProps> {\\n    disabled?: boolean;\\n    value: T;\\n}\\nexport declare type IRadioGroupRadioProps<T> = UnionOmit<IRadioGroupItemProps<T>, Omit<IRadioProps, \'checked\'>>;\\nexport declare function RadioGroupRadio<T>(props: IRadioGroupRadioProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/radio-group/Tag\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { IRadioGroupItemProps } from \'@byte-design/ui/components/radio-group/Radio\';\\nexport declare type IRadioGroupTagProps<T> = UnionOmit<IRadioGroupItemProps<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function RadioGroupTag<T>(props: IRadioGroupTagProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/slider/SliderContent\\" { \\n import { INumberConverter } from \'@rc-hooks/region\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nimport { TooltipMode } from \'@byte-design/ui/components/tooltip/TooltipContent\';\\nimport { ISliderMark } from \'@byte-design/ui/components/slider/SliderMark\';\\nexport interface ISliderContent {\\n    format?: INumberConverter;\\n    rangeStart: number;\\n    rangeEnd: number;\\n    disabled?: boolean;\\n    markList?: Array<number | Omit<ISliderMark, \'invalid\'>>;\\n    showStart?: boolean;\\n    invalid?: boolean;\\n    mode?: TooltipMode;\\n}\\nexport declare type ISliderContentProps = UnionOmit<ISliderContent, HTMLAttributes<HTMLDivElement>>;\\nexport declare const SliderContent: React.MemoExoticComponent<(props: UnionOmit<ISliderContent, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element>; \\n \\n } \\n declare module \\"@byte-design/ui/components/rimless-select/RimlessSelect\\" { \\n import { ISelectDisplayInfoItem, ISelectQuery } from \'@rc-hooks/select\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ISelectBase } from \'@byte-design/ui/components/select/components/SelectBase\';\\nimport { ISelectExtraProps } from \'@byte-design/ui/components/select/Select\';\\nexport interface IRimlessSelect<T> {\\n    useTag?: boolean;\\n    value?: T;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    filterOption?: ISelectQuery<T>;\\n    onChange?: (value: T) => void;\\n    onValueChange?: (value: T) => void;\\n    onDisplayInfoChange?: (info: Array<ISelectDisplayInfoItem<T>>) => void;\\n    autoClearSearchValue?: boolean;\\n}\\nexport declare type RimlessSelectProps<T> = UnionOmit<IRimlessSelect<T> & ISelectExtraProps & ISelectBase<T>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function RimlessSelect<T>(props: RimlessSelectProps<T>): JSX.Element;\\nexport declare namespace RimlessSelect {\\n    var Option: typeof import(\\"../select/Option\\").Option;\\n    var OptionGroup: typeof import(\\"../select/OptionGroup\\").OptionGroup;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/layout/util/breakpoint\\" { \\n import { IResponsiveBreakpoint } from \'@rc-hooks/dom\';\\nimport { IBreakpoint } from \'@byte-design/ui/components/layout/types\';\\nexport declare const BREAKPOINT_SIZE: [\\"xxs\\", \\"xs\\", \\"sm\\", \\"md\\", \\"lg\\", \\"xl\\", \\"xxl\\"];\\nexport declare const BREAKPOINT_WIDTHS: {\\n    xxs: number;\\n    xs: number;\\n    sm: number;\\n    md: number;\\n    lg: number;\\n    xl: number;\\n    xxl: number;\\n};\\nexport declare type BreakpointSizeType = (typeof BREAKPOINT_SIZE)[number];\\nexport declare function formatBreakpoints(breakpoints: IBreakpoint[]): IResponsiveBreakpoint[]; \\n \\n } \\n declare module \\"@byte-design/ui/components/schedule/Schedule\\" { \\n import { IRcScheduleOptions } from \'@rc-hooks/schedule\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { FC, HTMLAttributes } from \'react\';\\nimport { ISchedulePanel } from \'@byte-design/ui/components/schedule/components/SchedulePanel\';\\nexport interface ISchedule extends IRcScheduleOptions, ISchedulePanel {\\n    width?: number;\\n}\\nexport declare type IScheduleProps = UnionOmit<ISchedule, HTMLAttributes<HTMLDivElement>>;\\nexport declare const Schedule: FC<IScheduleProps>; \\n \\n } \\n declare module \\"@byte-design/ui/components/select/Option\\" { \\n import { IOptionData } from \'@rc-hooks/select\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nexport interface ISelectOption<T> {\\n    value: T;\\n    label: string;\\n    readonly?: boolean;\\n    disabled?: boolean;\\n    children?: ReactNode | ((data: IOptionData<T>) => ReactNode);\\n}\\nexport declare type SelectOptionProps<T> = UnionOmit<ISelectOption<T>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Option<T>(props: SelectOptionProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/select/OptionGroup\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nexport interface ISelectOptionGroup {\\n    title: string;\\n    renderTitle?: (title: string) => ReactNode | ReactNode;\\n    children?: ReactNode;\\n}\\nexport declare type SelectOptionGroupProps = UnionOmit<ISelectOptionGroup, HTMLAttributes<HTMLDivElement>>;\\nexport declare function OptionGroup<T>(props: SelectOptionGroupProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/select/Select\\" { \\n import { ISelectDisplayInfoItem, ISelectQuery } from \'@rc-hooks/select\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { ISelectBase } from \'@byte-design/ui/components/select/components/SelectBase\';\\nexport interface ISelect<T> {\\n    value?: T;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    filterOption?: ISelectQuery<T>;\\n    onChange?: (value: T | undefined) => void;\\n    onValueChange?: (value: T | undefined) => void;\\n    onDisplayInfoChange?: (info: Array<ISelectDisplayInfoItem<T>>) => void;\\n    autoClearSearchValue?: boolean;\\n    clearable?: boolean;\\n    onSearchChange?: (query: string) => void;\\n}\\nexport interface ISelectExtraProps {\\n    checkType?: CheckType;\\n    size?: ComponentSize;\\n    clearable?: boolean;\\n}\\nexport declare type CheckType = \'checkbox\' | \'check\';\\nexport declare type SelectProps<T> = UnionOmit<ISelect<T> & ISelectExtraProps & Omit<ISelectBase<T>, \'renderTrigger\'>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Select<T>(props: SelectProps<T>): JSX.Element;\\nexport declare namespace Select {\\n    var Option: typeof import(\\"./Option\\").Option;\\n    var OptionGroup: typeof import(\\"./OptionGroup\\").OptionGroup;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/skeleton/Avatar\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport interface ISkeletonAvatarProps {\\n    size?: \'lg\' | \'sm\' | \'md\' | number;\\n    shape?: \'circle\' | \'square\' | string;\\n}\\nexport declare type SkeletonAvatarProps = UnionOmit<ISkeletonAvatarProps, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function SkeletonAvatar(props: SkeletonAvatarProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/skeleton/Paragraph\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport declare type widthUnit = number | string;\\nexport declare type SkeletonParagraphProps = UnionOmit<ISkeletonParagraphProps, HTMLAttributes<HTMLUListElement>>;\\nexport interface ISkeletonParagraphProps {\\n    width?: widthUnit | widthUnit[];\\n    rows?: number;\\n}\\nexport declare function SkeletonParagraph(props: SkeletonParagraphProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/skeleton/Title\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport declare type SkeletonTitleProps = UnionOmit<ISkeletonTitleProps, HTMLAttributes<HTMLElement>>;\\nexport interface ISkeletonTitleProps {\\n    width?: number | string;\\n}\\nexport declare function SkeletonTitle(props: SkeletonTitleProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/slider/SliderMark\\" { \\n import { INumberConverter } from \'@rc-hooks/region\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface ISliderMark {\\n    value: number;\\n    format?: INumberConverter;\\n    tooltip?: boolean | string;\\n    invalid?: boolean;\\n    placement?: \'left\' | \'center\' | \'right\';\\n}\\nexport declare type ISliderMarkProps = UnionOmit<ISliderMark, HTMLAttributes<HTMLDivElement>>;\\nexport declare const SliderMark: React.MemoExoticComponent<(props: UnionOmit<ISliderMark, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element>; \\n \\n } \\n declare module \\"@byte-design/ui/components/steps/Dot\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { IStep } from \'@byte-design/ui/components/steps/Step\';\\nexport declare type IStepDotProps = UnionOmit<Omit<IStep, \'content\'>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function StepDot(props: IStepDotProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/steps/Number\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { IStep } from \'@byte-design/ui/components/steps/Step\';\\nexport declare type IStepNumberProps = UnionOmit<Omit<IStep, \'content\'>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function StepNumber(props: IStepNumberProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/steps/Step\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nexport interface IStep {\\n    index?: number;\\n    title?: ReactNode;\\n    description?: ReactNode;\\n    content?: ReactNode;\\n}\\nexport declare type IStepProps = UnionOmit<IStep, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Step(props: IStepProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/steps/Steps\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport declare type StepDirection = \'vertical\' | \'horizontal\';\\nexport declare type StepSize = \'sm\' | \'md\' | \'lg\';\\nexport declare type StepStatus = \'error\' | \'wait\' | \'process\' | \'finish\';\\nexport interface ISteps {\\n    dashed?: boolean;\\n    size?: StepSize;\\n    width?: string;\\n    fill?: boolean;\\n    current?: number;\\n    center?: boolean;\\n    status?: StepStatus;\\n    direction?: StepDirection;\\n}\\nexport declare type IStepsProps = UnionOmit<ISteps, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Steps(props: IStepsProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/sticky/Sticky\\" { \\n import { IElementPosition } from \'@rc-hooks/dom\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { CSSProperties, HTMLAttributes, ReactNode } from \'react\';\\nexport interface ISticky {\\n    topOffset?: number;\\n    bottomOffset?: number;\\n    stickyClassName?: string;\\n    stickyStyle?: CSSProperties;\\n    children: (isSticky: boolean, stickyInfo: IStickyInfo) => ReactNode;\\n}\\nexport interface IStickyInfo extends IElementPosition {\\n    sticky: boolean;\\n    position: \'bottom\' | \'top\';\\n    left: number;\\n    right: number;\\n}\\nexport declare type IStickyProps = UnionOmit<ISticky, HTMLAttributes<HTMLDivElement>>;\\nexport declare function Sticky(props: IStickyProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/table/Table\\" { \\n import { CSSProperties, HTMLAttributes, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { ITableColumnProps, ITableSorter } from \'@byte-design/ui/units/table/types\';\\nimport { ICheckboxProps } from \'@byte-design/ui/components/checkbox\';\\nimport { IPager } from \'@byte-design/ui/components/pager/Pager\';\\nexport interface ITableRowSelection<T, K extends keyof T> {\\n    columnWidth?: number;\\n    columnTitle?: ReactNode;\\n    fixed?: boolean;\\n    align?: \'left\' | \'right\' | \'center\';\\n    valign?: \'top\' | \'middle\' | \'bottom\';\\n    type?: \'checkbox\' | \'radio\';\\n    selectedRowKeys?: Array<T[K]>;\\n    onChange?: (selectedRowKeys: Array<T[K]>) => void;\\n    getCheckboxProps?: (record: T) => Omit<ICheckboxProps, \'checked\' | \'onValueChange\' | \'\'>;\\n}\\nexport interface ITableState {\\n    pageSize: number;\\n    page: number;\\n    sorter: ITableSorter[];\\n    filters: Record<string, string[]>;\\n}\\nexport interface ITableProps<T, K extends keyof T> {\\n    minimalNonFixedWidth?: number;\\n    columns: Array<ITableColumnProps<T>>;\\n    bordered?: boolean;\\n    stripe?: boolean;\\n    rowBordered?: boolean;\\n    innerBordered?: boolean;\\n    outerBordered?: boolean;\\n    size?: Exclude<ComponentSize, \'xs\'>;\\n    headGroupHeight?: number;\\n    headRowHeight?: number;\\n    rowHeight?: number;\\n    fixedHeader?: boolean;\\n    noHeader?: boolean;\\n    rowSelection?: ITableRowSelection<T, K>;\\n    rowKey: K;\\n    datasource: T[];\\n    expandedRowKeys?: Array<T[K]>;\\n    onExpandedRowChange?: (keys: Array<T[K]>) => void;\\n    className?: string;\\n    style?: CSSProperties;\\n    onRow?: (row: T) => HTMLAttributes<HTMLDivElement> & {\\n        rowHeight?: number;\\n    };\\n    onHead?: () => HTMLAttributes<HTMLDivElement>;\\n    loading?: boolean;\\n    multipleSorter?: \'pre-selection-first\' | \'post-selection-first\' | false;\\n    sorter?: ITableSorter[];\\n    filters?: Record<string, string[]>;\\n    pager?: false | (Omit<IPager, \'onPageSizeChange\' | \'onPageChange\'> & {\\n        position?: \'top\' | \'bottom\' | \'both\';\\n        align?: \'left\' | \'right\' | \'center\';\\n    });\\n    onChange?: (pager: ITableState) => void;\\n    renderEmpty?: () => ReactNode;\\n    emptyText?: string;\\n}\\nexport declare function Table<T, K extends keyof T>(props: ITableProps<T, K>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/table/types\\" { \\n import { IRowExpandInfo } from \'@co-hooks/table\';\\nimport { ColumnFixedType } from \'@rc-hooks/table\';\\nimport { ReactNode } from \'react\';\\nexport declare type TableOrder = \'ascend\' | \'descend\';\\nexport declare type TableOrderState = TableOrder | \'reset\';\\nexport interface ITableSorter {\\n    column: string;\\n    order: TableOrder;\\n}\\nexport interface ITableHeadCellProps<T> {\\n    sortDirections?: TableOrderState[];\\n    align?: \'left\' | \'right\' | \'center\';\\n    title?: ReactNode;\\n    ellipsis?: boolean;\\n    renderHead?: (props: {\\n        sortDirections: TableOrderState[];\\n        order: TableOrderState;\\n        onOrderClick: () => void;\\n    }) => ReactNode;\\n}\\nexport interface ITableDataCellProps<T> {\\n    align?: \'left\' | \'right\' | \'center\';\\n    valign?: \'top\' | \'middle\' | \'bottom\';\\n    ellipsis?: boolean;\\n    maxLine?: 1 | 2 | 3 | 4 | 5 | 6 | 7;\\n    dataIndex?: string;\\n    render?: (row: T, expand: IRowExpandInfo, onExpand: (expanded: boolean) => void) => ReactNode;\\n}\\nexport interface ITableColumnCommonProps<T> extends ITableHeadCellProps<T> {\\n    key: string;\\n    show?: boolean;\\n    fixed?: ColumnFixedType;\\n    className?: string;\\n}\\nexport interface ITableLeafColumnProps<T> extends ITableColumnCommonProps<T>, ITableDataCellProps<T> {\\n    width: number;\\n    widthFixed?: boolean;\\n}\\nexport interface ITableGroupColumnProps<T> extends ITableColumnCommonProps<T> {\\n    children: Array<Omit<ITableLeafColumnProps<T>, \'fixed\'> | Omit<ITableGroupColumnProps<T>, \'fixed\'>>;\\n}\\nexport declare type ITableColumnProps<T> = ITableGroupColumnProps<T> | ITableLeafColumnProps<T>; \\n \\n } \\n declare module \\"@byte-design/ui/components/tabs/components/Tabs\\" { \\n\\nimport { ITabsProps } from \'@byte-design/ui/components/tabs/types\';\\nimport { TabItem } from \'@byte-design/ui/components/tabs/components/TabItem\';\\nexport declare function Tabs(props: ITabsProps): JSX.Element;\\nexport declare namespace Tabs {\\n    var Item: typeof TabItem;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/tabs/types\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport declare type TabPosition = \'top\' | \'right\' | \'bottom\' | \'left\';\\nexport declare type TabDirection = \'horizontal\' | \'vertical\';\\nexport declare type TranslateDirection = \'translateX\' | \'translateY\';\\nexport interface ITranslate {\\n    direction: TranslateDirection;\\n    distance: number;\\n}\\nexport declare type TabSize = \'lg\' | \'md\' | \'sm\';\\nexport declare type TabType = \'basic\' | \'line\' | \'card\' | \'editable\' | \'collapse\';\\nexport declare type ITabAction = \'add\' | \'close\';\\nexport interface ITabBarsProps {\\n    type?: TabType;\\n    className?: string;\\n    hideAdd?: boolean;\\n    extraTabBar?: React.ReactNode;\\n    onEdit?: (action: ITabAction, id?: string) => void;\\n    renderTabBar?: (props: ITabItemProps) => React.ReactNode;\\n    children: React.ReactElement<ITabItemProps>[];\\n    tabPosition?: TabPosition;\\n    beforeActiveChange?: () => void | boolean | Promise<boolean>;\\n}\\nexport interface ITabBarItemProps {\\n    id: string;\\n    index: number;\\n    collapsed: boolean;\\n    disabled: boolean;\\n    closable: boolean;\\n    active: boolean;\\n    lastIsActive: boolean;\\n    onClick: (id: string) => void;\\n    handleClose: (id: string) => void;\\n    label: React.ReactNode;\\n    activeRef: React.RefObject<HTMLDivElement>;\\n}\\nexport declare type ITabs = Omit<ITabBarsProps, \'children\'> & {\\n    activeId?: string;\\n    className?: string;\\n    barClassName?: string;\\n    size?: TabSize;\\n    children?: React.ReactNode;\\n    onChange?: (index: string) => void;\\n};\\nexport declare type ITabsProps = UnionOmit<ITabs, HTMLAttributes<HTMLDivElement>>;\\nexport interface ITabItem {\\n    tab: React.ReactNode;\\n    id: string;\\n    disabled?: boolean;\\n    closable?: boolean;\\n    className?: string;\\n    children?: React.ReactNode;\\n}\\nexport declare type ITabItemProps = UnionOmit<ITabItem, HTMLAttributes<HTMLDivElement>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/tabs-card/TabsCard\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nimport { ITabBarsProps } from \'@byte-design/ui/components/tabs/types\';\\nexport declare type TabsCardType = \'line\' | \'card\';\\nexport declare type TabsCardSize = \'md\' | \'sm\' | \'lg\';\\nexport interface ITabsCard {\\n    type?: TabsCardType;\\n    extra?: ReactNode;\\n    bordered?: boolean;\\n    activeId?: string;\\n    size?: TabsCardSize;\\n    onChange: (index: string) => void;\\n}\\nexport declare type ITabsCardProps = UnionOmit<UnionOmit<ITabsCard, Omit<ITabBarsProps, \'tabPosition\'>>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function TabsCard(props: ITabsCardProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/tag/CheckableTag\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport interface ICheckableTag {\\n    size?: ComponentSize;\\n    checked: boolean;\\n    disabled?: boolean;\\n    onChange?: (checked: boolean) => void;\\n}\\nexport declare type ICheckableTagProps = UnionOmit<ICheckableTag, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function CheckableTag(props: ICheckableTagProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/tag/Tag\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, MouseEvent, Ref } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport declare type TagType = \'info\' | \'error\' | \'warning\' | \'success\' | \'default\' | \'color\' | string;\\nexport interface ITag {\\n    type?: TagType;\\n    fill?: boolean;\\n    block?: boolean;\\n    size?: ComponentSize;\\n    color?: string;\\n    closeable?: boolean;\\n    domRef?: Ref<HTMLSpanElement>;\\n    onClose?: (e: MouseEvent<HTMLElement>) => void;\\n}\\nexport declare type ITagProps = UnionOmit<ITag, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function Tag(props: ITagProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/tag/Group\\" { \\n import { HTMLAttributes, Ref } from \'react\';\\nexport interface ITagGroupProps extends HTMLAttributes<HTMLDivElement> {\\n    disableAnimation?: boolean;\\n    domRef?: Ref<HTMLDivElement>;\\n}\\nexport declare function Group(props: ITagGroupProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-panel/components/TimeBase\\" { \\n import React, { HTMLAttributes } from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nexport interface ITimeBase {\\n    showHeader?: boolean;\\n    children?: React.ReactNode;\\n}\\nexport declare type ITimeBaseProps = UnionOmit<ITimeBase, HTMLAttributes<HTMLDivElement>>;\\nexport declare function TimeBase(props: ITimeBaseProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-panel/TimePanel\\" { \\n import { HTMLAttributes } from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ISimpleTime } from \'@rc-hooks/date\';\\nexport declare type ITimePanelProps = UnionOmit<ISimpleTime, HTMLAttributes<HTMLDivElement>>;\\nexport declare function TimePanel(props: ITimePanelProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-panel/components/TimeContent\\" { \\n\\nexport declare function TimeContent(): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-picker/TimePicker\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ISimpleTime } from \'@rc-hooks/date\';\\nimport React, { HTMLAttributes } from \'react\';\\nimport { ITimePopperBase } from \'@byte-design/ui/components/time-picker/TimePopper\';\\nexport declare type ITimePickerProps = UnionOmit<ITimePopperBase & ISimpleTime, HTMLAttributes<HTMLSpanElement>>;\\nexport declare const TimePicker: React.MemoExoticComponent<(props: UnionOmit<ITimePopperBase & ISimpleTime, React.HTMLAttributes<HTMLSpanElement>>) => JSX.Element>; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-picker/TimePopper\\" { \\n import React, { HTMLAttributes } from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { ISelectInputDataItem } from \'@byte-design/ui/components/util/SelectInputWrapper\';\\nexport declare type PopperPlacement = \'bottom-start\' | \'bottom\' | \'bottom-end\';\\nexport interface ITimePopperBase {\\n    width?: string;\\n    disabled?: boolean;\\n    clearable?: boolean;\\n    size?: ComponentSize;\\n    placeholder?: string;\\n    placement?: PopperPlacement;\\n}\\nexport interface ITimePopperExtra {\\n    show: boolean;\\n    onShow?: () => void;\\n    onHide?: () => void;\\n    onClear?: () => void;\\n    children?: React.ReactNode;\\n    datasource?: ISelectInputDataItem[];\\n    renderTrigger?: (inPopper?: boolean) => React.ReactNode;\\n}\\nexport declare type ITimePopperProps = UnionOmit<ITimePopperBase & ITimePopperExtra, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function TimePopper(props: ITimePopperProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-range-panel/TimeRangePanel\\" { \\n import { HTMLAttributes } from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IRangTime } from \'@rc-hooks/date\';\\nexport declare type ITimeRangePanelProps = UnionOmit<IRangTime, HTMLAttributes<HTMLDivElement>>;\\nexport declare function TimeRangePanel(props: ITimeRangePanelProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/time-range-picker/TimeRangePicker\\" { \\n\\nimport { ITimePopperBase } from \'@byte-design/ui/components/time-picker\';\\nimport { ITimeRangePanelProps } from \'@byte-design/ui/components/time-range-panel\';\\nexport declare type ITimeRangePickerProps = ITimeRangePanelProps & ITimePopperBase;\\nexport declare function TimeRangePicker(props: ITimeRangePickerProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/timeline/item\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\ndeclare type positionType = \'left\' | \'right\';\\nexport interface ITimelineItem {\\n    title: string;\\n    time: string;\\n    position?: positionType;\\n    description?: string;\\n    color?: string;\\n    icon?: React.ReactElement;\\n}\\nexport declare type ITimelineItemProps = UnionOmit<ITimelineItem, HTMLAttributes<HTMLDivElement>>;\\nexport declare function TimelineItem(props: ITimelineItemProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/timeline/timeline\\" { \\n import { HTMLAttributes } from \'react\';\\nexport declare type ITimelineProps = HTMLAttributes<HTMLDivElement>;\\nexport declare function Timeline(props: ITimelineProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/tooltip/Tooltip\\" { \\n\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IPopoverProps } from \'@byte-design/ui/components/popover\';\\nimport { ITooltip } from \'@byte-design/ui/components/tooltip/TooltipContent\';\\nexport declare type ITooltipProps = UnionOmit<ITooltip, Omit<IPopoverProps<any>, \'getPopper\' | \'show\'>>;\\nexport declare function Tooltip(props: ITooltipProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/transfer/Transfer\\" { \\n\\nimport { ITransferProps } from \'@byte-design/ui/components/transfer/types/interface\';\\nexport declare function Transfer(props: ITransferProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/tree/SingleTree\\" { \\n\\nimport { ISingleTreeProps } from \'@byte-design/ui/components/tree/types\';\\nexport declare function SingleTree<T, P>(props: ISingleTreeProps<T, P>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/tree-select/TreeSelect\\" { \\n\\nimport { ITreeProps } from \'@byte-design/ui/components/tree\';\\nexport declare type ICascaderSelectPlacement = \'bottom-start\' | \'bottom\' | \'bottom-end\';\\nexport declare type ITreeSelectProps<T, P> = ITreeProps<T, P> & {\\n    searchable?: boolean;\\n    clearable?: boolean;\\n    placeholder?: string;\\n    placement?: ICascaderSelectPlacement;\\n};\\nexport declare function TreeSelect<T, P>(props: ITreeSelectProps<T, P>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/typography/Typography\\" { \\n\\nimport { ITypographyHTMLProps } from \'@byte-design/ui/components/typography/Base\';\\nexport interface ITypographyProps extends ITypographyHTMLProps {\\n    component?: string;\\n}\\nexport declare function Typography(props: ITypographyProps): JSX.Element;\\nexport declare namespace Typography {\\n    var Text: typeof import(\\"./Text\\").Text;\\n    var Title: typeof import(\\"./Title\\").Title;\\n    var Paragraph: typeof import(\\"./Paragraph\\").Paragraph;\\n    var Separation: typeof import(\\"./Separation\\").Separation;\\n    var List: typeof import(\\"./List\\").List;\\n    var ListItem: typeof import(\\"./ListItem\\").ListItem;\\n    var Code: typeof import(\\"./Code\\").Code;\\n    var Table: typeof import(\\"./Table\\").Table;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/typography/Base\\" { \\n import React from \'react\';\\nexport interface ITypographyHTMLProps {\\n    id?: string;\\n    style?: React.CSSProperties;\\n    className?: string;\\n    children?: React.ReactNode;\\n    [\'aria-label\']?: string;\\n}\\nexport interface ITypographyDecorationProps {\\n    code?: boolean;\\n    mark?: boolean;\\n    underline?: boolean;\\n    del?: boolean;\\n    strong?: boolean;\\n    italic?: boolean;\\n}\\nexport interface ITypographyBaseProps extends ITypographyHTMLProps, ITypographyDecorationProps {\\n    component: string;\\n    html?: boolean;\\n}\\nexport declare function Base(props: ITypographyBaseProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/typography/Text\\" { \\n\\nimport { ITypographyBaseProps } from \'@byte-design/ui/components/typography/Base\';\\nexport declare type TypographyTextType = \'primary\' | \'secondary\' | \'tertiary\' | \'danger\' | \'warning\';\\nexport declare type ITypographyTextProps = Omit<ITypographyBaseProps, \'component\'> & {\\n    type?: TypographyTextType;\\n};\\nexport declare function Text(props: ITypographyTextProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/upload/AvatarUpload\\" { \\n\\nimport { ISize, IUpload } from \'@byte-design/ui/components/upload/rc-upload/types/interface\';\\nimport { Action } from \'@byte-design/ui/components/upload/rc-upload/types/type\';\\nexport interface IAvatarUpload extends IUpload {\\n    size?: ISize;\\n    actions?: Action[];\\n    list?: boolean;\\n    maxLength?: number;\\n}\\nexport declare function AvatarUpload(props: IAvatarUpload): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/upload/DropUpload\\" { \\n\\nimport { ISize, IUpload } from \'@byte-design/ui/components/upload/rc-upload/types/interface\';\\nimport { Action } from \'@byte-design/ui/components/upload/rc-upload/types/type\';\\nexport interface IDropUploadProps extends IUpload {\\n    size?: ISize;\\n    actions?: Action[];\\n}\\nexport declare function DropUpload(props: IDropUploadProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/upload/Upload\\" { \\n import React from \'react\';\\nimport { ISize, IUpload } from \'@byte-design/ui/components/upload/rc-upload/types/interface\';\\nimport { ListType } from \'@byte-design/ui/components/upload/rc-upload/types/type\';\\nexport interface IUploadProps extends IUpload {\\n    children?: React.ReactNode;\\n    pictureSize?: ISize;\\n    listType?: ListType;\\n    maxLength?: number;\\n    multiple?: boolean;\\n    single?: boolean;\\n}\\nexport declare function Upload(props: IUploadProps): JSX.Element;\\nexport declare namespace Upload {\\n    var FileList: typeof import(\\"./components/FileList\\").FileList;\\n    var DropTrigger: typeof import(\\"./components/DropTrigger\\").DropTrigger;\\n    var DropUpload: typeof import(\\"./DropUpload\\").DropUpload;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/auto-complete/AutoCompletePanel\\" { \\n\\nexport interface IAutoCompletePanelBase {\\n    autoAlign?: boolean;\\n    popoverWidth?: number;\\n    popoverHeight?: number;\\n    popoverClassName?: string;\\n}\\nexport interface IAutoCompletePanelProps extends IAutoCompletePanelBase {\\n    triggerId: string;\\n}\\nexport declare function AutoCompletePanel<T>(props: IAutoCompletePanelProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/auto-complete/AutoCompleteMain\\" { \\n\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { IAutoCompletePanelBase } from \'@byte-design/ui/components/auto-complete/AutoCompletePanel\';\\nexport declare type IAutoCompleteMainPlacement = \'bottom-start\' | \'bottom\' | \'bottom-end\';\\nexport interface IAutoCompleteMainBase {\\n    size?: ComponentSize;\\n    placeholder?: string;\\n    placement?: IAutoCompleteMainPlacement;\\n}\\nexport declare type IAutoCompleteMainProps = IAutoCompleteMainBase & IAutoCompletePanelBase & {\\n    show: boolean;\\n    onShow?: VoidFunction;\\n    onHide?: VoidFunction;\\n};\\nexport declare function AutoCompleteMain<T>(props: IAutoCompleteMainProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/breadcrumb/components/BreadcrumbItem\\" { \\n import { IBreadcrumbItemProps } from \'@byte-design/ui/components/breadcrumb/types\';\\nexport declare function BreadcrumbItem(props: IBreadcrumbItemProps): null; \\n \\n } \\n declare module \\"@byte-design/ui/components/util/SelectInputWrapper\\" { \\n import { IElementSize } from \'@rc-hooks/dom\';\\nimport React, { HTMLAttributes, ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport interface ISelectInputDataItem {\\n    label: string;\\n    value: string | number;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    [key: string]: unknown;\\n}\\nexport interface ISelectInputWrapper {\\n    show?: boolean;\\n    keyword?: string;\\n    multiple?: boolean;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    writeable?: boolean;\\n    className?: string;\\n    icon?: ReactNode;\\n    popperInput?: boolean;\\n    inputSize?: IElementSize;\\n    size?: ComponentSize;\\n    placeholder?: string;\\n    datasource: ISelectInputDataItem[];\\n    onCloseItem?: (data: ISelectInputDataItem) => void;\\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\\n    forwardedRef: React.Ref<HTMLDivElement>;\\n    width?: string;\\n    renderContent?: (popperInput: boolean) => React.ReactNode;\\n    onHide?: () => void;\\n    clearable?: boolean;\\n    onClear?: () => void;\\n    renderSelectedName?: (data: ISelectInputDataItem) => string;\\n    onValueChange?: (value: string) => void;\\n}\\nexport declare type ISelectInputWrapperProps = ISelectInputWrapper & HTMLAttributes<HTMLDivElement>;\\nexport declare const SelectInputWrapper: React.ForwardRefExoticComponent<Pick<ISelectInputWrapperProps, \\"show\\" | \\"disabled\\" | \\"hidden\\" | \\"dir\\" | \\"slot\\" | \\"style\\" | \\"title\\" | \\"readonly\\" | \\"color\\" | \\"size\\" | \\"icon\\" | \\"multiple\\" | \\"children\\" | \\"translate\\" | \\"width\\" | \\"defaultChecked\\" | \\"defaultValue\\" | \\"suppressContentEditableWarning\\" | \\"suppressHydrationWarning\\" | \\"accessKey\\" | \\"className\\" | \\"contentEditable\\" | \\"contextMenu\\" | \\"draggable\\" | \\"id\\" | \\"lang\\" | \\"placeholder\\" | \\"spellCheck\\" | \\"tabIndex\\" | \\"radioGroup\\" | \\"role\\" | \\"about\\" | \\"datatype\\" | \\"inlist\\" | \\"prefix\\" | \\"property\\" | \\"resource\\" | \\"typeof\\" | \\"vocab\\" | \\"autoCapitalize\\" | \\"autoCorrect\\" | \\"autoSave\\" | \\"itemProp\\" | \\"itemScope\\" | \\"itemType\\" | \\"itemID\\" | \\"itemRef\\" | \\"results\\" | \\"security\\" | \\"unselectable\\" | \\"inputMode\\" | \\"is\\" | \\"aria-activedescendant\\" | \\"aria-atomic\\" | \\"aria-autocomplete\\" | \\"aria-busy\\" | \\"aria-checked\\" | \\"aria-colcount\\" | \\"aria-colindex\\" | \\"aria-colspan\\" | \\"aria-controls\\" | \\"aria-current\\" | \\"aria-describedby\\" | \\"aria-details\\" | \\"aria-disabled\\" | \\"aria-dropeffect\\" | \\"aria-errormessage\\" | \\"aria-expanded\\" | \\"aria-flowto\\" | \\"aria-grabbed\\" | \\"aria-haspopup\\" | \\"aria-hidden\\" | \\"aria-invalid\\" | \\"aria-keyshortcuts\\" | \\"aria-label\\" | \\"aria-labelledby\\" | \\"aria-level\\" | \\"aria-live\\" | \\"aria-modal\\" | \\"aria-multiline\\" | \\"aria-multiselectable\\" | \\"aria-orientation\\" | \\"aria-owns\\" | \\"aria-placeholder\\" | \\"aria-posinset\\" | \\"aria-pressed\\" | \\"aria-readonly\\" | \\"aria-relevant\\" | \\"aria-required\\" | \\"aria-roledescription\\" | \\"aria-rowcount\\" | \\"aria-rowindex\\" | \\"aria-rowspan\\" | \\"aria-selected\\" | \\"aria-setsize\\" | \\"aria-sort\\" | \\"aria-valuemax\\" | \\"aria-valuemin\\" | \\"aria-valuenow\\" | \\"aria-valuetext\\" | \\"dangerouslySetInnerHTML\\" | \\"onCopy\\" | \\"onCopyCapture\\" | \\"onCut\\" | \\"onCutCapture\\" | \\"onPaste\\" | \\"onPasteCapture\\" | \\"onCompositionEnd\\" | \\"onCompositionEndCapture\\" | \\"onCompositionStart\\" | \\"onCompositionStartCapture\\" | \\"onCompositionUpdate\\" | \\"onCompositionUpdateCapture\\" | \\"onFocus\\" | \\"onFocusCapture\\" | \\"onBlur\\" | \\"onBlurCapture\\" | \\"onChange\\" | \\"onChangeCapture\\" | \\"onBeforeInput\\" | \\"onBeforeInputCapture\\" | \\"onInput\\" | \\"onInputCapture\\" | \\"onReset\\" | \\"onResetCapture\\" | \\"onSubmit\\" | \\"onSubmitCapture\\" | \\"onInvalid\\" | \\"onInvalidCapture\\" | \\"onLoad\\" | \\"onLoadCapture\\" | \\"onError\\" | \\"onErrorCapture\\" | \\"onKeyDown\\" | \\"onKeyDownCapture\\" | \\"onKeyPress\\" | \\"onKeyPressCapture\\" | \\"onKeyUp\\" | \\"onKeyUpCapture\\" | \\"onAbort\\" | \\"onAbortCapture\\" | \\"onCanPlay\\" | \\"onCanPlayCapture\\" | \\"onCanPlayThrough\\" | \\"onCanPlayThroughCapture\\" | \\"onDurationChange\\" | \\"onDurationChangeCapture\\" | \\"onEmptied\\" | \\"onEmptiedCapture\\" | \\"onEncrypted\\" | \\"onEncryptedCapture\\" | \\"onEnded\\" | \\"onEndedCapture\\" | \\"onLoadedData\\" | \\"onLoadedDataCapture\\" | \\"onLoadedMetadata\\" | \\"onLoadedMetadataCapture\\" | \\"onLoadStart\\" | \\"onLoadStartCapture\\" | \\"onPause\\" | \\"onPauseCapture\\" | \\"onPlay\\" | \\"onPlayCapture\\" | \\"onPlaying\\" | \\"onPlayingCapture\\" | \\"onProgress\\" | \\"onProgressCapture\\" | \\"onRateChange\\" | \\"onRateChangeCapture\\" | \\"onSeeked\\" | \\"onSeekedCapture\\" | \\"onSeeking\\" | \\"onSeekingCapture\\" | \\"onStalled\\" | \\"onStalledCapture\\" | \\"onSuspend\\" | \\"onSuspendCapture\\" | \\"onTimeUpdate\\" | \\"onTimeUpdateCapture\\" | \\"onVolumeChange\\" | \\"onVolumeChangeCapture\\" | \\"onWaiting\\" | \\"onWaitingCapture\\" | \\"onAuxClick\\" | \\"onAuxClickCapture\\" | \\"onClick\\" | \\"onClickCapture\\" | \\"onContextMenu\\" | \\"onContextMenuCapture\\" | \\"onDoubleClick\\" | \\"onDoubleClickCapture\\" | \\"onDrag\\" | \\"onDragCapture\\" | \\"onDragEnd\\" | \\"onDragEndCapture\\" | \\"onDragEnter\\" | \\"onDragEnterCapture\\" | \\"onDragExit\\" | \\"onDragExitCapture\\" | \\"onDragLeave\\" | \\"onDragLeaveCapture\\" | \\"onDragOver\\" | \\"onDragOverCapture\\" | \\"onDragStart\\" | \\"onDragStartCapture\\" | \\"onDrop\\" | \\"onDropCapture\\" | \\"onMouseDown\\" | \\"onMouseDownCapture\\" | \\"onMouseEnter\\" | \\"onMouseLeave\\" | \\"onMouseMove\\" | \\"onMouseMoveCapture\\" | \\"onMouseOut\\" | \\"onMouseOutCapture\\" | \\"onMouseOver\\" | \\"onMouseOverCapture\\" | \\"onMouseUp\\" | \\"onMouseUpCapture\\" | \\"onSelect\\" | \\"onSelectCapture\\" | \\"onTouchCancel\\" | \\"onTouchCancelCapture\\" | \\"onTouchEnd\\" | \\"onTouchEndCapture\\" | \\"onTouchMove\\" | \\"onTouchMoveCapture\\" | \\"onTouchStart\\" | \\"onTouchStartCapture\\" | \\"onPointerDown\\" | \\"onPointerDownCapture\\" | \\"onPointerMove\\" | \\"onPointerMoveCapture\\" | \\"onPointerUp\\" | \\"onPointerUpCapture\\" | \\"onPointerCancel\\" | \\"onPointerCancelCapture\\" | \\"onPointerEnter\\" | \\"onPointerEnterCapture\\" | \\"onPointerLeave\\" | \\"onPointerLeaveCapture\\" | \\"onPointerOver\\" | \\"onPointerOverCapture\\" | \\"onPointerOut\\" | \\"onPointerOutCapture\\" | \\"onGotPointerCapture\\" | \\"onGotPointerCaptureCapture\\" | \\"onLostPointerCapture\\" | \\"onLostPointerCaptureCapture\\" | \\"onScroll\\" | \\"onScrollCapture\\" | \\"onWheel\\" | \\"onWheelCapture\\" | \\"onAnimationStart\\" | \\"onAnimationStartCapture\\" | \\"onAnimationEnd\\" | \\"onAnimationEndCapture\\" | \\"onAnimationIteration\\" | \\"onAnimationIterationCapture\\" | \\"onTransitionEnd\\" | \\"onTransitionEndCapture\\" | \\"keyword\\" | \\"onValueChange\\" | \\"writeable\\" | \\"popperInput\\" | \\"inputSize\\" | \\"datasource\\" | \\"onCloseItem\\" | \\"renderContent\\" | \\"onHide\\" | \\"clearable\\" | \\"onClear\\" | \\"renderSelectedName\\"> & React.RefAttributes<HTMLDivElement>>; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader/components/CascaderSelectPopoverPanel\\" { \\n import { ICascaderData, ITreeMapHashItem } from \'@rc-hooks/cascader\';\\nimport React from \'react\';\\nexport interface ICascaderPopoverPanelBase<T, D extends ICascaderData<T>> {\\n    renderItem?: (item: ITreeMapHashItem<T, D>) => React.ReactNode;\\n    autoAlign?: boolean;\\n    maxPopoverWidth?: number;\\n}\\nexport interface ICascaderPopoverPanelExtra {\\n    className?: string;\\n    triggerId: string;\\n}\\nexport declare type ICascaderPopoverPanelProps<T, D extends ICascaderData<T>> = ICascaderPopoverPanelBase<T, D> & ICascaderPopoverPanelExtra;\\nexport declare function CascaderSelectPopoverPanel<T, D extends ICascaderData<T>>(props: ICascaderPopoverPanelProps<T, D>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader/components/CascaderPanelComp\\" { \\n import { ICascaderData, ITreeMapHashItem } from \'@rc-hooks/cascader\';\\nimport React, { CSSProperties } from \'react\';\\nexport interface ICascaderPanelComp<T, D extends ICascaderData<T>> {\\n    className?: string;\\n    renderItem?: (item: ITreeMapHashItem<T, D>) => React.ReactNode;\\n    panelStyle?: CSSProperties;\\n}\\nexport declare type ICascaderPanelCompProps<T, D extends ICascaderData<T>> = ICascaderPanelComp<T, D>;\\nexport declare function CascaderPanelComp<T, D extends ICascaderData<T>>(props: ICascaderPanelCompProps<T, D>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/cascader/components/CascaderSearch\\" { \\n import { ICascaderData, ITreeMapHashItem } from \'@rc-hooks/cascader\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nexport interface ICascaderSearch<T, D extends ICascaderData<T>> {\\n    searchable?: boolean;\\n    searchPlaceholder?: string;\\n    renderSearchItem?: (info: ITreeMapHashItem<T, D>) => ReactNode;\\n}\\nexport declare type ICascaderSearchProps<T, D extends ICascaderData<T>> = UnionOmit<ICascaderSearch<T, D>, Omit<HTMLAttributes<HTMLDivElement>, \'onChange\'>>;\\nexport declare function CascaderSearch<T, D extends ICascaderData<T>>(props: ICascaderSearchProps<T, D>): JSX.Element | null; \\n \\n } \\n declare module \\"@byte-design/ui/units/check-wrapper/CheckWrapper\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { ChangeEvent, FocusEventHandler, HTMLAttributes } from \'react\';\\nimport { InputCommonAttributes } from \'@byte-design/ui/units/input-wrapper/const\';\\nexport interface ICheckWrapper<T extends HTMLElement = HTMLElement> {\\n    type: \'radio\' | \'checkbox\';\\n    disabled?: boolean;\\n    checked?: boolean;\\n    checkedWave?: boolean;\\n    onValueChange?: (checked: boolean) => void;\\n    onFocus?: FocusEventHandler<HTMLInputElement>;\\n    onBlur?: FocusEventHandler<HTMLInputElement>;\\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\\n    waveElementRef?: React.MutableRefObject<T | null>;\\n}\\nexport declare type ICheckWrapperProps<T extends HTMLElement = HTMLElement> = UnionOmit<ICheckWrapper<T>, HTMLAttributes<HTMLLabelElement> & InputCommonAttributes>;\\nexport declare function CheckWrapper<T extends HTMLElement>(props: ICheckWrapperProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/hooks/useDateState\\" { \\n import { IPanelItemState } from \'@rc-hooks/date\';\\nexport declare function useDateState(prefix: string, state?: Partial<IPanelItemState>): string; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/layout/CompareRangeDateHeader\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface IDateComparisonValue {\\n    source: string[];\\n    isCompare: boolean;\\n    target: string[];\\n}\\nexport declare enum ActiveTab {\\n    SOURCE = \\"source\\",\\n    TARGET = \\"target\\"\\n}\\nexport interface ICompareRangeDateHeader {\\n    value: IDateComparisonValue;\\n    children?: React.ReactNode;\\n    onCompareChange: (isCompare: boolean) => void;\\n    onTabChange: (tab: ActiveTab) => void;\\n    active: ActiveTab;\\n    comparisonSwitch?: boolean;\\n}\\nexport declare type ICompareRangeDateHeaderProps = ICompareRangeDateHeader;\\nexport interface IRangeDateItem {\\n    value: string[];\\n    active?: boolean;\\n    disabled?: boolean;\\n    activeTag: ActiveTab;\\n    onTabChange: (active: ActiveTab) => void;\\n}\\nexport declare type IRangeDateItemProps = UnionOmit<IRangeDateItem, HTMLAttributes<HTMLDivElement>>;\\nexport declare function CompareRangeDateHeader(props: ICompareRangeDateHeaderProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/layout/CompareRangeDateFooter\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface ICompareRangeDateFooter {\\n    extra?: React.ReactNode;\\n    disableOk?: boolean;\\n    onOk?: () => void;\\n    onCancel?: () => void;\\n}\\nexport declare type ICompareRangeDateFooterProps = UnionOmit<ICompareRangeDateFooter, HTMLAttributes<HTMLDivElement>>;\\nexport declare function CompareRangeDateFooter(props: ICompareRangeDateFooterProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/layout/DateComparisonInput\\" { \\n\\nimport { IDateComparisonValue } from \'@byte-design/ui/units/date\';\\nexport interface IDateComparisonInput {\\n    value: IDateComparisonValue;\\n    placeholder: string;\\n}\\nexport declare type IDateComparisonInputProps = IDateComparisonInput;\\nexport declare function DateComparisonInput(props: IDateComparisonInputProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/layout/PopperWrapper\\" { \\n import React, { ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { ISelectInputDataItem } from \'@byte-design/ui/components/util/SelectInputWrapper\';\\nexport declare type PopperPlacement = \'bottom-start\' | \'bottom\' | \'bottom-end\';\\nexport interface IPopperWrapperBase {\\n    size?: ComponentSize;\\n    placeholder?: string;\\n    placement?: PopperPlacement;\\n    popoverWidth?: number;\\n    width?: string;\\n    multiple?: boolean;\\n    disabled?: boolean;\\n}\\nexport interface IPopperWrapperExtra {\\n    show: boolean;\\n    onShow?: () => void;\\n    onHide?: () => void;\\n    children?: ReactNode;\\n    datasource?: ISelectInputDataItem[];\\n    renderTrigger?: (inPopper?: boolean) => React.ReactNode;\\n    onClear?: () => void;\\n    clearable?: boolean;\\n}\\nexport declare type IPopperWrapperProps = IPopperWrapperBase & IPopperWrapperExtra;\\nexport declare function PopperWrapper(props: IPopperWrapperProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/layout/MultiplePopperWrapper\\" { \\n\\nimport { IPopperWrapperProps } from \'@byte-design/ui/units/date/layout/PopperWrapper\';\\nexport interface IMultiplePopperWrapperProps extends IPopperWrapperProps {\\n    onCloseItem?: (value: string[]) => void;\\n}\\nexport declare function MultiplePopperWrapper(props: IMultiplePopperWrapperProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/layout/DateContainer\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface IDateContainer {\\n    header?: React.ReactNode;\\n    footer?: React.ReactNode;\\n    preset?: React.ReactNode;\\n    onResetPanel: () => void;\\n}\\nexport declare type IDateContainerProps = UnionOmit<IDateContainer, HTMLAttributes<HTMLDivElement>>;\\nexport declare function DateContainer(props: IDateContainerProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/layout/DatePreset\\" { \\n import { DatePresetEvent, IDatePresetItem } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport interface IPreset {\\n    presets: IDatePresetItem[];\\n    onPresetItemClick: DatePresetEvent;\\n    onPresetItemMouseEnter?: DatePresetEvent;\\n    onPresetItemMouseLeave?: DatePresetEvent;\\n}\\nexport declare type IDatePresetProps = UnionOmit<IPreset, HTMLAttributes<HTMLDivElement>>;\\nexport declare function DatePreset(props: IDatePresetProps): JSX.Element | null; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/units/ViewCol\\" { \\n import { IPanelItemState } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport interface IViewCol {\\n    type: string;\\n    prefix: string;\\n    enableInvalidTooltip: boolean;\\n    state?: Partial<IPanelItemState>;\\n}\\nexport declare type IViewColProps = UnionOmit<IViewCol, HTMLAttributes<HTMLDivElement>>;\\nexport declare function ViewCol(props: IViewColProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/units/ViewGrid\\" { \\n import { RangeState } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nexport interface IViewGrid {\\n    type: string;\\n    prefix: string;\\n    position: RangeState.START | RangeState.IN | RangeState.END | RangeState.SINGLE;\\n    children?: ReactNode;\\n}\\nexport declare type IViewGridProps = UnionOmit<IViewGrid, HTMLAttributes<HTMLDivElement>>;\\nexport declare function ViewGrid(props: IViewGridProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/units/ViewGroup\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactElement } from \'react\';\\nexport interface IViewGroup {\\n    type: string;\\n    prefix: string;\\n}\\nexport declare type IViewGroupProps = UnionOmit<IViewGroup, HTMLAttributes<HTMLDivElement>>;\\nexport declare function ViewGroup(props: IViewGroupProps): ReactElement<IViewGroupProps>; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/units/ViewNav\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\ninterface IViewNav {\\n    isDoublePrevHidden?: boolean;\\n    isDoubleNextHidden?: boolean;\\n    isPrevHidden?: boolean;\\n    isNextHidden?: boolean;\\n    prev?: () => void;\\n    next?: () => void;\\n    doublePrev?: () => void;\\n    doubleNext?: () => void;\\n    type: string;\\n    prefix: string;\\n}\\nexport declare type IViewNavProps = UnionOmit<IViewNav, HTMLAttributes<HTMLDivElement>>;\\nexport declare function ViewNav(props: IViewNavProps): JSX.Element;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/units/ViewRow\\" { \\n import { IPanelItemState } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport interface IViewRow {\\n    type: string;\\n    prefix: string;\\n    state?: Partial<IPanelItemState>;\\n    cols?: IPanelItemState[];\\n}\\nexport declare type IViewRowProps = UnionOmit<IViewRow, HTMLAttributes<HTMLDivElement>>;\\nexport declare function ViewRow(props: IViewRowProps): JSX.Element;\\nexport interface IViewRowRangerProps {\\n    start: number;\\n    end: number;\\n    total: number;\\n    type: string;\\n}\\nexport declare function ViewRowRanger(props: IViewRowRangerProps): JSX.Element | null;\\nexport declare function calcRowSelected(cols: IPanelItemState[], type: string, ignoreOutRange: boolean): IViewRowRangerProps[]; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/units/ViewWrapper\\" { \\n import { RangeState } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nexport interface IViewWrapper {\\n    part: string;\\n    prefix: string;\\n    position: RangeState.START | RangeState.IN | RangeState.END | RangeState.SINGLE;\\n    enableDragMask?: boolean;\\n    dragMaskSelectType?: \'cover\' | \'cross\';\\n    enableDragMaskReverseMode?: boolean;\\n    enableInvalidTooltip?: boolean;\\n}\\nexport declare type IViewWrapperProps = UnionOmit<IViewWrapper, HTMLAttributes<HTMLDivElement>>;\\nexport declare const ViewWrapper: React.MemoExoticComponent<(props: UnionOmit<IViewWrapper, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element>; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/util/setRangePanelDate\\" { \\n import { ISetPanelDateEventParams, RangeDate } from \'@rc-hooks/date\';\\nexport declare function setRangePanelDate(root: RangeDate, params: ISetPanelDateEventParams): void; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/util/updateSimplePanelDate\\" { \\n import { SimpleDate } from \'@rc-hooks/date\';\\nexport declare function updateSimplePanelDate(sd: SimpleDate, newVal: Date | null): void; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/util/updateRangePanelDate\\" { \\n import { RangeDate } from \'@rc-hooks/date\';\\nexport declare function updateRangePanelDate(rd: RangeDate, newVal: Date[]): void; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/views/DateView\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { IDatePanelViewItem, PanelType, RangeState } from \'@rc-hooks/date\';\\nimport React, { HTMLAttributes } from \'react\';\\ninterface IDateViewItemProps {\\n    prefix: string;\\n    item: IDatePanelViewItem;\\n    enableDragMask: boolean;\\n    onSelect: (item: IDatePanelViewItem) => void;\\n    onHover?: (item: IDatePanelViewItem) => void;\\n    prevDateItemDisabled: boolean;\\n    nextDateItemDisabled: boolean;\\n}\\nexport declare function DateViewItem(props: IDateViewItemProps): JSX.Element;\\nexport interface IDateViewTitleProps {\\n    prefix: string;\\n    year: number;\\n    month: number;\\n    changeToYear: () => void;\\n    changeToMonth: () => void;\\n}\\nexport declare function DateViewTitle(props: IDateViewTitleProps): JSX.Element;\\nexport interface IDateView {\\n    part: string;\\n    prefix: string;\\n    position: RangeState.START | RangeState.IN | RangeState.END | RangeState.SINGLE;\\n    owner: PanelType;\\n    enableDragMask: boolean;\\n    enableDragMaskReverseMode: boolean;\\n    dragMaskSelectType: \'cover\' | \'cross\';\\n    prevDateItemDisabled: boolean;\\n    nextDateItemDisabled: boolean;\\n    hidePrevYear: boolean;\\n    hideNextYear: boolean;\\n    hidePrevMonth: boolean;\\n    hideNextMonth: boolean;\\n    enableInvalidTooltip: boolean;\\n    onHover?: (item: IDatePanelViewItem) => void;\\n}\\nexport declare type IDateViewProps = UnionOmit<IDateView, HTMLAttributes<HTMLDivElement>>;\\nexport declare const DateView: React.MemoExoticComponent<(props: UnionOmit<IDateView, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element>;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/views/MonthView\\" { \\n import { IMonthPanelViewItem, PanelType, RangeState } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\ninterface IMonthViewItemProps {\\n    prefix: string;\\n    item: IMonthPanelViewItem;\\n    enableDragMask: boolean;\\n    onSelect: (item: IMonthPanelViewItem) => void;\\n    onHover?: (item: IMonthPanelViewItem) => void;\\n}\\nexport declare function MonthViewItem(props: IMonthViewItemProps): JSX.Element;\\nexport interface IMonthViewTitleProps {\\n    year: number;\\n    prefix: string;\\n    changeToYear: () => void;\\n}\\nexport declare function MonthViewTitle(props: IMonthViewTitleProps): JSX.Element;\\nexport interface IMonthView {\\n    part: string;\\n    prefix: string;\\n    position: RangeState.START | RangeState.IN | RangeState.END | RangeState.SINGLE;\\n    owner: PanelType;\\n    enableDragMask: boolean;\\n    enableDragMaskReverseMode: boolean;\\n    dragMaskSelectType: \'cover\' | \'cross\';\\n    enableInvalidTooltip: boolean;\\n    hidePrevYear: boolean;\\n    hideNextYear: boolean;\\n}\\nexport declare type IMonthViewProps = UnionOmit<IMonthView, HTMLAttributes<HTMLDivElement>>;\\nexport declare const MonthView: React.MemoExoticComponent<(props: UnionOmit<IMonthView, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element>;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/views/WeekView\\" { \\n import { IWeekPanelViewDateItem, IWeekPanelViewItem, PanelType, RangeState } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\ninterface IWeekViewWeekItemProps {\\n    item: IWeekPanelViewItem;\\n    prefix: string;\\n    onSelect: (item: IWeekPanelViewItem) => void;\\n    onHover: (item: IWeekPanelViewItem) => void;\\n}\\nexport declare function WeekViewWeekItem(props: IWeekViewWeekItemProps): JSX.Element;\\ninterface IWeekViewDateItemProps {\\n    item: IWeekPanelViewDateItem;\\n    prefix: string;\\n}\\nexport declare function WeekViewDateItem(props: IWeekViewDateItemProps): JSX.Element;\\ninterface IWeekViewRowProps {\\n    item: IWeekPanelViewItem;\\n    prefix: string;\\n    enableInvalidTooltip: boolean;\\n    onSelect: (item: IWeekPanelViewItem) => void;\\n    onHover?: (item: IWeekPanelViewItem) => void;\\n}\\nexport declare function WeekViewRow(props: IWeekViewRowProps): JSX.Element;\\nexport interface IWeekView {\\n    part: string;\\n    prefix: string;\\n    position: RangeState.START | RangeState.IN | RangeState.END | RangeState.SINGLE;\\n    enableInvalidTooltip: boolean;\\n    owner: PanelType;\\n    hidePrevYear: boolean;\\n    hideNextYear: boolean;\\n    hidePrevMonth: boolean;\\n    hideNextMonth: boolean;\\n}\\nexport declare type IWeekViewProps = UnionOmit<IWeekView, HTMLAttributes<HTMLDivElement>>;\\nexport declare const WeekView: React.MemoExoticComponent<(props: UnionOmit<IWeekView, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element>;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/units/date/views/YearView\\" { \\n import { IYearPanelViewItem, PanelType, RangeState } from \'@rc-hooks/date\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\ninterface IYearViewItemProps {\\n    prefix: string;\\n    item: IYearPanelViewItem;\\n    enableDragMask: boolean;\\n    onSelect: (item: IYearPanelViewItem) => void;\\n    onHover?: (item: IYearPanelViewItem) => void;\\n    prevYearItemDisabled: boolean;\\n    nextYearItemDisabled: boolean;\\n}\\nexport declare function YearViewItem(props: IYearViewItemProps): JSX.Element;\\nexport interface IYearViewTitleProps {\\n    prefix: string;\\n    startYear: number;\\n    endYear: number;\\n}\\nexport declare function YearViewTitle(props: IYearViewTitleProps): JSX.Element;\\nexport interface IYearView {\\n    part: string;\\n    prefix: string;\\n    position: RangeState.START | RangeState.IN | RangeState.END | RangeState.SINGLE;\\n    owner: PanelType;\\n    enableInvalidTooltip: boolean;\\n    enableDragMask: boolean;\\n    enableDragMaskReverseMode: boolean;\\n    dragMaskSelectType: \'cover\' | \'cross\';\\n    hidePrevTenYear: boolean;\\n    hideNextTenYear: boolean;\\n    prevYearItemDisabled: boolean;\\n    nextYearItemDisabled: boolean;\\n}\\nexport declare type IYearViewProps = UnionOmit<IYearView, HTMLAttributes<HTMLDivElement>>;\\nexport declare const YearView: React.MemoExoticComponent<(props: UnionOmit<IYearView, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element>;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/util/ListItem\\" { \\n import { TreeMapState } from \'@co-hooks/tree-map\';\\nimport { OptionState } from \'@rc-hooks/select\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nexport interface IListItem {\\n    prefixCls: string;\\n    checkable?: boolean;\\n    chosen?: boolean;\\n    readonly?: boolean;\\n    disabled?: boolean;\\n    state?: TreeMapState | OptionState;\\n    className?: string;\\n    onCheckboxChange?: (checked: boolean) => void;\\n    children?: (() => React.ReactNode) | React.ReactNode;\\n    size?: ComponentSize;\\n    level?: number;\\n    domRef?: React.Ref<HTMLDivElement>;\\n}\\nexport declare type IListItemProps = UnionOmit<IListItem, HTMLAttributes<HTMLDivElement>>;\\nexport declare const ListItem: (props: UnionOmit<IListItem, React.HTMLAttributes<HTMLDivElement>>) => JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/input-wrapper\\" { \\n export * from \'@byte-design/ui/units/input-wrapper/InputWrapper\'; \\n \\n } \\n declare module \\"@byte-design/ui/units/input-wrapper/const\\" { \\n import { InputHTMLAttributes } from \'react\';\\nexport declare const INPUT_COMMON_ATTRS: [\\"accept\\", \\"alt\\", \\"autoComplete\\", \\"autoFocus\\", \\"capture\\", \\"crossOrigin\\", \\"form\\", \\"formAction\\", \\"formEncType\\", \\"formMethod\\", \\"formNoValidate\\", \\"formTarget\\", \\"height\\", \\"list\\", \\"max\\", \\"maxLength\\", \\"min\\", \\"minLength\\", \\"multiple\\", \\"name\\", \\"pattern\\", \\"placeholder\\", \\"readOnly\\", \\"required\\", \\"src\\", \\"step\\", \\"width\\"];\\nexport declare const INPUT_ATTRS: (\\"max\\" | \\"required\\" | \\"disabled\\" | \\"form\\" | \\"pattern\\" | \\"size\\" | \\"multiple\\" | \\"list\\" | \\"step\\" | \\"value\\" | \\"height\\" | \\"width\\" | \\"placeholder\\" | \\"accept\\" | \\"alt\\" | \\"autoComplete\\" | \\"autoFocus\\" | \\"capture\\" | \\"crossOrigin\\" | \\"formAction\\" | \\"formEncType\\" | \\"formMethod\\" | \\"formNoValidate\\" | \\"formTarget\\" | \\"maxLength\\" | \\"min\\" | \\"minLength\\" | \\"name\\" | \\"readOnly\\" | \\"src\\" | \\"checked\\" | \\"type\\")[];\\nexport declare type InputCommonAttributes = Pick<InputHTMLAttributes<HTMLInputElement>, (typeof INPUT_COMMON_ATTRS)[number]>;\\nexport declare type InputAttributes = Pick<InputHTMLAttributes<HTMLInputElement>, (typeof INPUT_ATTRS)[number]>; \\n \\n } \\n declare module \\"@byte-design/ui/components/layout/types\\" { \\n import { ResponsiveHandler } from \'@rc-hooks/dom\';\\nimport { HTMLAttributes } from \'react\';\\nimport { BreakpointSizeType } from \'@byte-design/ui/components/layout/util/breakpoint\';\\nexport declare type ILayoutTheme = \'light\';\\nexport declare type IBreakpoint = BreakpointSizeType | number;\\nexport declare type IAsideTrigger = \'bottom\' | \'top\' | null;\\nexport interface ILayoutInfo {\\n    theme?: ILayoutTheme;\\n    hasAside?: boolean;\\n}\\nexport declare type IBasicProps = HTMLAttributes<HTMLDivElement>;\\nexport interface ILayoutProps extends IBasicProps {\\n    breakpoints?: IBreakpoint[];\\n    hasAside?: boolean;\\n    onBreakpoint?: ResponsiveHandler;\\n}\\nexport interface IAsideProps extends IBasicProps {\\n    collapsible?: boolean;\\n    collapse?: boolean;\\n    onCollapse?: (collapse: boolean) => void;\\n    width?: number;\\n    trigger?: IAsideTrigger;\\n    collapseWidth?: number;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/menu/components/MenuItem\\" { \\n\\nimport { IMenuItemProps } from \'@byte-design/ui/components/menu/types\';\\nexport declare function MenuItem<P>(props: IMenuItemProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/select/components/SelectBase\\" { \\n import { ISelectDisplayInfoItem } from \'@rc-hooks/select\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes, ReactNode } from \'react\';\\nimport { AlignType } from \'@byte-design/ui/components/util/RimlessInput\';\\nimport { ISelectPopperBase } from \'@byte-design/ui/components/select/components/SelectPopper\';\\nexport interface ISelectBaseAll<T> extends ISelectPopperBase {\\n    useTag?: boolean;\\n    children?: ReactNode | ((props: ISelectBaseAll<T>) => void);\\n    showAll?: boolean;\\n    rimless?: boolean;\\n    alignType?: AlignType;\\n    width?: string;\\n    renderTrigger?: (data: ISelectDisplayInfoItem<T> | null, show: boolean) => ReactNode;\\n    clearable?: boolean;\\n    onSearchChange?: (query: string) => void;\\n}\\nexport declare type ISelectBase<T> = Omit<ISelectBaseAll<T>, \'show\' | \'onShow\' | \'onHide\'>;\\nexport declare type ISelectBaseProps<T> = UnionOmit<ISelectBaseAll<T>, HTMLAttributes<HTMLDivElement>>;\\nexport declare function SelectBase<T>(props: ISelectBaseProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/units/popover-wrapper\\" { \\n import { IArrowInfo, ITouch } from \'@co-hooks/popper\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { IUsePopoverOptions } from \'@rc-hooks/popper\';\\nimport React from \'react\';\\ninterface IRcPopover<T> extends Omit<IUsePopoverOptions, \'arrowRef\' | \'popoverRef\'> {\\n    afterClose?: () => void;\\n    className?: string;\\n    getArrow?: (arrowInfo: IArrowInfo, touch: ITouch) => React.ReactNode;\\n    getPopper?: ((triggerData: T | null) => React.ReactNode) | React.ReactNode;\\n    style?: React.CSSProperties;\\n    hideToDestroy?: boolean;\\n    lazyInit?: boolean;\\n    zIndex?: number;\\n    scaleAnimation?: \'x\' | \'y\' | \'xy\' | false;\\n    wrapperClassName?: string;\\n    disableAnimation?: boolean | \'leave\';\\n}\\nexport declare type IRcPopoverProps<T> = UnionOmit<IRcPopover<T>, React.HTMLAttributes<HTMLDivElement>>;\\nexport declare function RcPopover<T>(props: IRcPopoverProps<T>): JSX.Element | null;\\nexport {}; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/components/ManualTrigger\\" { \\n import { IRcManualTriggerProps } from \'@rc-hooks/popper\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { HTMLAttributes } from \'react\';\\nexport declare type IManualTriggerProps<T> = UnionOmit<IRcManualTriggerProps<T>, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function ManualTrigger<T>(props: IManualTriggerProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/tooltip/TooltipContent\\" { \\n import React from \'react\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { IPopoverContentProps } from \'@byte-design/ui/components/popover/PopoverContent\';\\nexport declare type TooltipMode = \'dark\' | \'white\';\\nexport interface ITooltip {\\n    size?: ComponentSize;\\n    mode?: TooltipMode;\\n    content?: (() => React.ReactNode) | React.ReactNode;\\n}\\nexport declare type ITooltipContentProps<T> = UnionOmit<ITooltip, IPopoverContentProps<T>>;\\nexport declare function TooltipContent<T>(props: ITooltipContentProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/schedule/components/SchedulePanel\\" { \\n import { IScheduleDisplayInfo, IScheduleItem } from \'@rc-hooks/schedule\';\\nimport { ReactNode } from \'react\';\\nexport interface ISchedulePanel {\\n    title?: string;\\n    renderTooltip?: (data: IScheduleItem) => ReactNode;\\n    renderDisplayInfo?: (data: IScheduleDisplayInfo) => ReactNode;\\n    onDisplayInfoChange?: (data: IScheduleDisplayInfo[]) => void;\\n}\\nexport interface ISchedulePanelExtra {\\n    colWidth: number;\\n    disabled?: boolean;\\n}\\nexport declare type ISchedulePanelProps = ISchedulePanel & ISchedulePanelExtra;\\nexport declare function SchedulePanel(props: ISchedulePanelProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/tabs/components/TabItem\\" { \\n import React from \'react\';\\nimport { ITabItemProps } from \'@byte-design/ui/components/tabs/types\';\\nexport declare function TabItem(props: ITabItemProps): JSX.Element;\\nexport declare namespace TabItem {\\n    var TabItem: typeof import(\\"./TabItem\\").TabItem;\\n}\\nexport declare function ReactNodeIsTabItem(reactNode: React.ReactNode): reactNode is React.ReactElement<ITabItemProps>; \\n \\n } \\n declare module \\"@byte-design/ui/components/transfer/types/interface\\" { \\n import { Direction } from \'@byte-design/ui/components/transfer/types/type\';\\nexport interface IPanelProps {\\n    direction: Direction;\\n    data: IBaseTransferItemProps[];\\n    showSearch: boolean;\\n    title?: string;\\n    children?: any;\\n    search(value: string, direction: Direction): void;\\n    onChange(direction: Direction, id: string | number, checked: boolean): void;\\n}\\nexport interface IBaseTransferItemProps {\\n    id: string | number;\\n    value: string;\\n    checked?: boolean;\\n    disabled?: boolean;\\n    hidden?: boolean;\\n}\\nexport interface ITransferItemProps extends IBaseTransferItemProps {\\n    onChange(id: string | number, checked: boolean): void;\\n}\\nexport interface ITransferProps {\\n    showSearch?: boolean;\\n    showSelectAll?: boolean;\\n    sourceTitle?: string;\\n    targetTitle?: string;\\n    sourceValue?: IBaseTransferItemProps[];\\n    targetValue?: IBaseTransferItemProps[];\\n    filter?(value: string): string;\\n    sort?(): boolean;\\n    onChange?(sourceValues?: IBaseTransferItemProps[], targetValues?: IBaseTransferItemProps[], moveValues?: IBaseTransferItemProps[], direction?: Direction): void;\\n    onValueChange?(sourceValues?: IBaseTransferItemProps[], targetValues?: IBaseTransferItemProps[], moveValues?: IBaseTransferItemProps[], direction?: Direction): void;\\n    onSearch?(input: string, value: string): boolean;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/upload/rc-upload/types/interface\\" { \\n\\nimport { FileState } from \'@byte-design/ui/components/upload/rc-upload/types/enum\';\\nimport { OnChange, OnRemove, onBeforeUpload, onUpload, onUploaded, onValueChange } from \'@byte-design/ui/components/upload/rc-upload/types/type\';\\nexport interface IRequest {\\n    abort(): void;\\n}\\nexport interface IUploadEvent {\\n    onChange?: OnChange;\\n    onRemove?: OnRemove;\\n    onValueChange?: onValueChange;\\n    onUpload?: onUpload;\\n    onUploaded?: onUploaded;\\n    onBeforeUpload?: onBeforeUpload;\\n}\\nexport interface ISize {\\n    width: number | string;\\n    height: number | string;\\n}\\nexport interface IFile {\\n    id: string;\\n    status: FileState;\\n    progress: number;\\n    file: File;\\n    isImage: boolean;\\n    previewUrl: string;\\n    extname?: string;\\n    name?: string;\\n    url?: string;\\n    errmsg?: string;\\n    request?: IRequest;\\n}\\nexport interface IRcTriggerProps {\\n    children?: React.ReactNode;\\n    disabled?: boolean;\\n    accept?: string;\\n    multiple?: boolean;\\n    maxLength?: number;\\n}\\nexport interface IFileUploadErrorMessage {\\n    overflowCount: string;\\n}\\nexport interface IFileUpload extends IUploadEvent {\\n    errors: IFileUploadErrorMessage;\\n    accept: string;\\n    maxLength: number;\\n    autoUpload: boolean;\\n    uploadUrl?: string;\\n    name?: string;\\n    reverse?: boolean;\\n    single?: boolean;\\n}\\nexport interface IUpload extends IUploadEvent {\\n    className?: string;\\n    uploadUrl?: string;\\n    name?: string;\\n    accept?: string;\\n    disabled?: boolean;\\n    autoUpload?: boolean;\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/upload/rc-upload/types/type\\" { \\n import { IFile } from \'@byte-design/ui/components/upload/rc-upload/types/interface\';\\nexport declare type Size = \'sm\' | \'md\';\\nexport declare type ListType = \'text\' | \'card\';\\nexport declare type Action = \'view\' | \'edit\' | \'upload\' | \'replace\';\\nexport declare type OnChange = (file?: File, fileList?: File[]) => void;\\nexport declare type OnRemove = (file?: File, fileList?: File[]) => boolean;\\nexport declare type onValueChange = (fileList?: IFile[], allFileList?: IFile[]) => void;\\nexport declare type uploadSuccess = (url: string) => void;\\nexport declare type uploadError = (errmsg: string) => void;\\nexport declare type progress = (loaded: number, total: number) => void;\\nexport declare type onUpload = (file: File, success: uploadSuccess, error: uploadError, progress: progress) => any;\\nexport declare type onUploaded = (response: XMLHttpRequestResponseType, success: uploadSuccess, fail: uploadError) => void;\\nexport declare type onBeforeUpload = (file: File, fileList: File[]) => boolean; \\n \\n } \\n declare module \\"@byte-design/ui/units/input-wrapper/InputWrapper\\" { \\n import { UnionOmit } from \'@co-hooks/util\';\\nimport { ChangeEventHandler, CompositionEventHandler, FocusEventHandler, HTMLAttributes, KeyboardEventHandler, ReactNode, Ref } from \'react\';\\nimport { InputCommonAttributes } from \'@byte-design/ui/units/input-wrapper/const\';\\nexport interface IInputWrapper {\\n    domRef?: Ref<HTMLLabelElement>;\\n    inputRef?: Ref<HTMLInputElement>;\\n    prefix?: ReactNode;\\n    suffix?: ReactNode;\\n    clear?: ReactNode;\\n    inputClassName?: string;\\n    type?: \'text\' | \'password\' | \'email\' | \'url\' | \'search\';\\n    value?: string;\\n    disabled?: boolean;\\n    disableSuffixAnimation?: boolean;\\n    onValueChange?: (value: string) => void;\\n    onChange?: ChangeEventHandler<HTMLInputElement>;\\n    onFocus?: FocusEventHandler<HTMLInputElement>;\\n    onBlur?: FocusEventHandler<HTMLInputElement>;\\n    onKeyDown?: KeyboardEventHandler<HTMLInputElement>;\\n    onKeyUp?: KeyboardEventHandler<HTMLInputElement>;\\n    onKeyPress?: KeyboardEventHandler<HTMLInputElement>;\\n    onPressEnter?: KeyboardEventHandler<HTMLInputElement>;\\n    onCompositionStart?: CompositionEventHandler<HTMLInputElement>;\\n    onCompositionUpdate?: CompositionEventHandler<HTMLInputElement>;\\n    onCompositionEnd?: CompositionEventHandler<HTMLInputElement>;\\n}\\nexport declare type IInputWrapperProps = UnionOmit<IInputWrapper, HTMLAttributes<HTMLLabelElement> & InputCommonAttributes>;\\nexport declare function InputWrapper(props: IInputWrapperProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/util/RimlessInput\\" { \\n import { ComponentSize } from \'@byte-design/config\';\\nimport { UnionOmit } from \'@co-hooks/util\';\\nimport React, { HTMLAttributes, ReactNode, Ref } from \'react\';\\nexport declare type AlignType = \'left\' | \'center\' | \'right\' | \'justify\';\\nexport interface IRimlessInput {\\n    domRef?: Ref<HTMLSpanElement>;\\n    size?: ComponentSize;\\n    alignType?: AlignType;\\n    value?: string;\\n    placeholder?: string;\\n    showNum?: number;\\n    active?: boolean;\\n    disabled?: boolean;\\n    readonly?: boolean;\\n    renderContent?: () => ReactNode;\\n}\\nexport declare type IRimlessInputProps = UnionOmit<IRimlessInput, HTMLAttributes<HTMLSpanElement>>;\\nexport declare function RimlessInput(props: IRimlessInputProps): React.ReactElement; \\n \\n } \\n declare module \\"@byte-design/ui/components/select/components/SelectPopper\\" { \\n import { ReactNode } from \'react\';\\nimport { ComponentSize } from \'@byte-design/config\';\\nimport { SelectEmptyContent } from \'@byte-design/ui/components/select/components/SelectPopoverPanel\';\\nexport declare type SelectPlacement = \'bottom-start\' | \'bottom\' | \'bottom-end\';\\nexport interface ISelectPopperBase {\\n    searchable?: boolean;\\n    size?: ComponentSize;\\n    placeholder?: string;\\n    placement?: SelectPlacement;\\n    autoAlign?: boolean;\\n    popoverWidth?: number;\\n    show: boolean;\\n    onShow?: () => void;\\n    onHide?: () => void;\\n    emptyRender?: SelectEmptyContent;\\n    emptyContent?: SelectEmptyContent;\\n    popoverClassName?: string;\\n    onSearchChange?: (query: string) => void;\\n}\\nexport interface ISelectPopperExtra {\\n    clearable?: boolean;\\n    children?: ReactNode;\\n}\\nexport declare type ISelectPopperProps = ISelectPopperBase & ISelectPopperExtra;\\nexport declare function SelectPopper<T>(props: ISelectPopperProps): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/popover/PopoverContent\\" { \\n\\nimport { IRcPopoverProps } from \'@byte-design/ui/units/popover-wrapper\';\\nexport declare type IPopoverContentProps<T> = Omit<IRcPopoverProps<T>, \'getArrow\'>;\\nexport declare function PopoverContent<T>(props: IPopoverContentProps<T>): JSX.Element; \\n \\n } \\n declare module \\"@byte-design/ui/components/transfer/types/type\\" { \\n export declare type Direction = \'left\' | \'right\'; \\n \\n } \\n declare module \\"@byte-design/ui/components/upload/rc-upload/types/enum\\" { \\n export declare enum FileState {\\n    INIT = \\"INIT\\",\\n    ABORT = \\"ABORT\\",\\n    LOADING = \\"LOADING\\",\\n    ERROR = \\"ERROR\\",\\n    DONE = \\"DONE\\"\\n} \\n \\n } \\n declare module \\"@byte-design/ui/components/select/components/SelectPopoverPanel\\" { \\n import { ReactNode } from \'react\';\\nexport declare type SelectEmptyContent = ReactNode | ((isSearch: boolean) => ReactNode);\\nexport interface ISelectPopoverPanelBase<T> {\\n    searchable?: boolean;\\n    autoAlign?: boolean;\\n    popoverWidth?: number;\\n    emptyRender?: SelectEmptyContent;\\n    emptyContent?: SelectEmptyContent;\\n}\\nexport interface ISelectPopoverPanelExtra {\\n    className?: string;\\n    triggerId: string;\\n    children?: ReactNode;\\n    show: boolean;\\n    multiple?: boolean;\\n    onHide?: () => void;\\n    onSearchChange: (query: string) => void;\\n}\\nexport declare type ISelectPopoverPanelProps<T> = ISelectPopoverPanelBase<T> & ISelectPopoverPanelExtra;\\nexport declare function SelectPopoverPanel<T>(props: ISelectPopoverPanelProps<T>): JSX.Element; \\n  \\n}","moduleName":"@byte-design/ui"},{"code":"\\n declare module \\"ts-previewer-demo\\" { \\n export * as React from \'react\';\\nexport * from \'@byte-design/ui\'; \\n  \\n}","moduleName":"ts-previewer-demo"}]')},142:function(e){e.exports=JSON.parse('{"base":"vs","inherit":true,"rules":[{"background":"e2e9ff5e","token":"text.html source.active4d"},{"foreground":"000000","token":"text.xml"},{"foreground":"af82d4","token":"comment.line"},{"foreground":"af82d4","token":"comment.block"},{"foreground":"666666","token":"string"},{"foreground":"66ccff","fontStyle":"bold","token":"string.interpolated variable"},{"foreground":"a8017e","token":"constant.numeric"},{"foreground":"66ccff","fontStyle":"bold","token":"constant.other.date"},{"foreground":"66ccff","fontStyle":"bold","token":"constant.other.time"},{"foreground":"a535ae","token":"constant.language"},{"foreground":"6392ff","fontStyle":"bold","token":"variable.other.local"},{"foreground":"0053ff","fontStyle":"bold","token":"variable"},{"foreground":"6988ae","token":"variable.other.table-field"},{"foreground":"006699","fontStyle":"bold","token":"keyword"},{"foreground":"ff5600","token":"storage"},{"foreground":"21439c","token":"entity.name.type"},{"foreground":"21439c","token":"entity.name.function"},{"foreground":"7a7a7a","token":"meta.tag"},{"foreground":"016cff","token":"entity.name.tag"},{"foreground":"963dff","token":"entity.other.attribute-name"},{"foreground":"45ae34","fontStyle":"bold","token":"support.function"},{"foreground":"b7734c","token":"support.constant"},{"foreground":"a535ae","token":"support.type"},{"foreground":"a535ae","token":"support.class"},{"foreground":"a535ae","token":"support.variable"},{"foreground":"ffffff","background":"990000","token":"invalid"},{"foreground":"ffffff","background":"656565","token":"meta.diff"},{"foreground":"ffffff","background":"1b63ff","token":"meta.diff.range"},{"foreground":"000000","background":"ff7880","token":"markup.deleted.diff"},{"foreground":"000000","background":"98ff9a","token":"markup.inserted.diff"},{"foreground":"5e5e5e","token":"source.diff"}],"colors":{"editor.foreground":"#3B3B3B","editor.background":"#FFFFFF","editor.selectionBackground":"#BAD6FD","editor.lineHighlightBackground":"#00000012","editorCursor.foreground":"#000000","editorWhitespace.foreground":"#BFBFBF"}}')},143:function(e){e.exports=JSON.parse('{"base":"vs-dark","inherit":true,"rules":[{"foreground":"404080","background":"200020","fontStyle":"italic","token":"comment.block"},{"foreground":"999999","token":"string"},{"foreground":"707090","token":"constant.language"},{"foreground":"7090b0","token":"constant.numeric"},{"fontStyle":"bold","token":"constant.numeric.integer.int32"},{"fontStyle":"italic","token":"constant.numeric.integer.int64"},{"fontStyle":"bold italic","token":"constant.numeric.integer.nativeint"},{"fontStyle":"underline","token":"constant.numeric.floating-point.ocaml"},{"foreground":"666666","token":"constant.character"},{"foreground":"8080a0","token":"constant.language.boolean"},{"foreground":"008080","token":"variable.language"},{"foreground":"008080","token":"variable.other"},{"foreground":"a080ff","token":"keyword"},{"foreground":"a0a0ff","token":"keyword.operator"},{"foreground":"d0d0ff","token":"keyword.other.decorator"},{"fontStyle":"underline","token":"keyword.operator.infix.floating-point.ocaml"},{"fontStyle":"underline","token":"keyword.operator.prefix.floating-point.ocaml"},{"foreground":"c080c0","token":"keyword.other.directive"},{"foreground":"c080c0","fontStyle":"underline","token":"keyword.other.directive.line-number"},{"foreground":"80a0ff","token":"keyword.control"},{"foreground":"b0fff0","token":"storage"},{"foreground":"60b0ff","token":"entity.name.type.variant"},{"foreground":"60b0ff","fontStyle":"italic","token":"storage.type.variant.polymorphic"},{"foreground":"60b0ff","fontStyle":"italic","token":"entity.name.type.variant.polymorphic"},{"foreground":"b000b0","token":"entity.name.type.module"},{"foreground":"b000b0","fontStyle":"underline","token":"entity.name.type.module-type.ocaml"},{"foreground":"a00050","token":"support.other"},{"foreground":"70e080","token":"entity.name.type.class"},{"foreground":"70e0a0","token":"entity.name.type.class-type"},{"foreground":"50a0a0","token":"entity.name.function"},{"foreground":"80b0b0","token":"variable.parameter"},{"foreground":"3080a0","token":"entity.name.type.token"},{"foreground":"3cb0d0","token":"entity.name.type.token.reference"},{"foreground":"90e0e0","token":"entity.name.function.non-terminal"},{"foreground":"c0f0f0","token":"entity.name.function.non-terminal.reference"},{"foreground":"009090","token":"entity.name.tag"},{"background":"200020","token":"support.constant"},{"foreground":"400080","background":"ffff00","fontStyle":"bold","token":"invalid.illegal"},{"foreground":"200020","background":"cc66ff","token":"invalid.deprecated"},{"background":"40008054","token":"source.camlp4.embedded"},{"foreground":"805080","token":"punctuation"}],"colors":{"editor.foreground":"#D0D0FF","editor.background":"#200020","editor.selectionBackground":"#80000080","editor.lineHighlightBackground":"#80000040","editorCursor.foreground":"#7070FF","editorWhitespace.foreground":"#BFBFBF"}}')},144:function(e){e.exports=JSON.parse('{"base":"vs","inherit":true,"rules":[{"foreground":"999988","fontStyle":"italic","token":"comment"},{"foreground":"999999","fontStyle":"bold","token":"comment.block.preprocessor"},{"foreground":"999999","fontStyle":"bold italic","token":"comment.documentation"},{"foreground":"999999","fontStyle":"bold italic","token":"comment.block.documentation"},{"foreground":"a61717","background":"e3d2d2","token":"invalid.illegal"},{"fontStyle":"bold","token":"keyword"},{"fontStyle":"bold","token":"storage"},{"fontStyle":"bold","token":"keyword.operator"},{"fontStyle":"bold","token":"constant.language"},{"fontStyle":"bold","token":"support.constant"},{"foreground":"445588","fontStyle":"bold","token":"storage.type"},{"foreground":"445588","fontStyle":"bold","token":"support.type"},{"foreground":"008080","token":"entity.other.attribute-name"},{"foreground":"0086b3","token":"variable.other"},{"foreground":"999999","token":"variable.language"},{"foreground":"445588","fontStyle":"bold","token":"entity.name.type"},{"foreground":"445588","fontStyle":"bold","token":"entity.other.inherited-class"},{"foreground":"445588","fontStyle":"bold","token":"support.class"},{"foreground":"008080","token":"variable.other.constant"},{"foreground":"800080","token":"constant.character.entity"},{"foreground":"990000","token":"entity.name.exception"},{"foreground":"990000","token":"entity.name.function"},{"foreground":"990000","token":"support.function"},{"foreground":"990000","token":"keyword.other.name-of-parameter"},{"foreground":"555555","token":"entity.name.section"},{"foreground":"000080","token":"entity.name.tag"},{"foreground":"008080","token":"variable.parameter"},{"foreground":"008080","token":"support.variable"},{"foreground":"009999","token":"constant.numeric"},{"foreground":"009999","token":"constant.other"},{"foreground":"dd1144","token":"string - string source"},{"foreground":"dd1144","token":"constant.character"},{"foreground":"009926","token":"string.regexp"},{"foreground":"990073","token":"constant.other.symbol"},{"fontStyle":"bold","token":"punctuation"},{"foreground":"000000","background":"ffdddd","token":"markup.deleted"},{"fontStyle":"italic","token":"markup.italic"},{"foreground":"aa0000","token":"markup.error"},{"foreground":"999999","token":"markup.heading.1"},{"foreground":"000000","background":"ddffdd","token":"markup.inserted"},{"foreground":"888888","token":"markup.output"},{"foreground":"888888","token":"markup.raw"},{"foreground":"555555","token":"markup.prompt"},{"fontStyle":"bold","token":"markup.bold"},{"foreground":"aaaaaa","token":"markup.heading"},{"foreground":"aa0000","token":"markup.traceback"},{"fontStyle":"underline","token":"markup.underline"},{"foreground":"999999","background":"eaf2f5","token":"meta.diff.range"},{"foreground":"999999","background":"eaf2f5","token":"meta.diff.index"},{"foreground":"999999","background":"eaf2f5","token":"meta.separator"},{"foreground":"999999","background":"ffdddd","token":"meta.diff.header.from-file"},{"foreground":"999999","background":"ddffdd","token":"meta.diff.header.to-file"},{"foreground":"4183c4","token":"meta.link"}],"colors":{"editor.foreground":"#000000","editor.background":"#F8F8FF","editor.selectionBackground":"#B4D5FE","editor.lineHighlightBackground":"#FFFEEB","editorCursor.foreground":"#666666","editorWhitespace.foreground":"#BBBBBB"}}')},145:function(e,n,t){e.exports=t(300)},150:function(e,n,t){},151:function(e,n,t){"use strict";function o(e){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.PreviewerProvider=function(e){var n={types:{},delayInit:!1,compiledCode:"",compilerOptions:{target:a.monaco.languages.typescript.ScriptTarget.ES2015,jsx:a.monaco.languages.typescript.JsxEmit.React,module:a.monaco.languages.typescript.ModuleKind.CommonJS},editorOptions:{lineHeight:18,lineNumbers:"off"},scope:{react:i.default}},t=e.children,o=e.className,r=function(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}(e,["children","className"]),c=(0,i.useRef)();c.current||(c.current=(0,s.mergeOptions)(n,r,["editorOptions","compilerOptions","scope"]));var d={editor:null,editorOptions:c.current,codeDidCompileCallbacks:[],codeDidRunCallbacks:[],onErrorCallbacks:[]},m=(0,l.default)(o,"rp-provider");return i.default.createElement(p.ProviderContext.Provider,{value:d},i.default.createElement("div",{className:m},t))};var r,i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!==typeof e)return{default:e};var n=c();if(n&&n.has(e))return n.get(e);var t={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=r?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(t,i,a):t[i]=e[i]}t.default=e,n&&n.set(e,t);return t}(t(0)),a=t(46),l=(r=t(56))&&r.__esModule?r:{default:r},p=t(48),s=t(75);function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}},152:function(e,n,t){"use strict";var o=t(153);Object.defineProperty(n,"__esModule",{value:!0}),n.Editor=void 0;var r=t(46),i=t(155);function a(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if("undefined"===typeof Symbol||!(Symbol.iterator in Object(e)))return;var t=[],o=!0,r=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(o=(a=l.next()).done)&&(t.push(a.value),!n||t.length!==n);o=!0);}catch(p){r=!0,i=p}finally{try{o||null==l.return||l.return()}finally{if(r)throw i}}return t}(e,n)||function(e,n){if(!e)return;if("string"===typeof e)return l(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(t);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return l(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}function p(e,n,t,o,r,i,a){try{var l=e[i](a),p=l.value}catch(s){return void t(s)}l.done?n(p):Promise.resolve(p).then(o,r)}function s(e){return function(){var n=this,t=arguments;return new Promise((function(o,r){var i=e.apply(n,t);function a(e){p(i,o,r,a,l,"next",e)}function l(e){p(i,o,r,a,l,"throw",e)}a(void 0)}))}}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}function d(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var m=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.runable=!0,this.compilable=!0,this.inited=!1;var o=t.code,i=void 0===o?"":o,a=t.language,l=void 0===a?"typescript":a,p=t.scope,s=t.compilerOptions,d=t.editorOptions,m=t.compiledCode,u=t.delay,g=void 0===u?200:u,y=t.delayInit,P=void 0!==y&&y,b=t.runable,T=void 0===b||b,h=t.compilable,f=void 0===h||h,x=t.types,S=void 0===x?{}:x,k=c(t,["code","language","scope","compilerOptions","editorOptions","compiledCode","delay","delayInit","runable","compilable","types"]);this.domElement=n,this.scope=p||{},this.compilerOptions=Object.assign({noImplicitAny:!0,strictNullChecks:!0,strictFunctionTypes:!0,strictPropertyInitialization:!0,noImplicitThis:!0,noImplicitReturns:!0,alwaysStrict:!0,allowUnreachableCode:!1,allowUnusedLabels:!1,downlevelIteration:!1,noEmitHelpers:!1,noLib:!1,noStrictGenericChecks:!1,noUnusedLocals:!1,noUnusedParameters:!1,esModuleInterop:!0,preserveConstEnums:!1,removeComments:!1,skipLibCheck:!1,checkJs:!1,allowJs:!1,experimentalDecorators:!1,emitDecoratorMetadata:!1,target:r.monaco.languages.typescript.ScriptTarget.ES2017,jsx:r.monaco.languages.typescript.JsxEmit.None,module:r.monaco.languages.typescript.ModuleKind.CommonJS},s),this.editorOptions=Object.assign({minimap:{enabled:!1},automaticLayout:!0,scrollBeyondLastLine:!1},d),this.language=l,this.delay=g,this.runable=T,this.compilable=f,this.originalCode=this.latestCode=i,this.originalCompiledCode=m,this.latestCompiledCode=m||"",this.hooks=Object.assign({},k),this.addTypes(S),m&&T&&this.runCode(m),!P&&this._init()}var n,t,l;return n=e,t=[{key:"init",value:function(){this._init()}},{key:"getInited",value:function(){return this.inited}},{key:"getWorkerProcess",value:function(e){return"javascript"===e?r.monaco.languages.typescript.getJavaScriptWorker():r.monaco.languages.typescript.getTypeScriptWorker()}},{key:"getMarkers",value:function(){return r.monaco.editor.getModelMarkers({resource:this.monacoModel.uri})}},{key:"dispose",value:function(){this.inited&&(this.monacoModel.dispose(),this.monacoEditor.dispose(),this.inited=!1)}},{key:"runCode",value:function(){var e=s(o.mark((function e(n){var t,r,a,l,p,s,c;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=this.hooks,r=t.codeWillRun,a=t.codeDidRun,l=t.onError,!this.runable||!(0,i.isFunction)(r)){e.next=7;break}return e.next=5,r(n);case 5:e.t0=e.sent,e.t0;case 7:if(!1!==this.runable){e.next=9;break}return e.abrupt("return");case 9:p={},s=null;try{new Function("exports","require",n)(p,this.requireMod.bind(this)),c=p}catch(o){s=o}finally{s?(0,i.isFunction)(l)&&l(s):(0,i.isFunction)(a)&&a(c,n)}case 12:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}()},{key:"resetCode",value:function(){this.inited&&this.monacoModel.setValue(this.originalCode)}},{key:"_init",value:function(){var e=s(o.mark((function e(){var n,t=this;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.inited){e.next=2;break}return e.abrupt("return");case 2:this.inited=!0,(n=this.hooks.editorWillCreate)&&n(this.compilerOptions),this.languageDefaults.setCompilerOptions(this.compilerOptions),this._monacoModel=r.monaco.editor.createModel(this.latestCode,this.language,this.createFile()),this._monacoEditor=r.monaco.editor.create(this.domElement,Object.assign({model:this._monacoModel},this.editorOptions)),this.compilable&&this.compileCode(),setTimeout((function(){t.editorDidCreate()}),0);case 10:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"addTypes",value:function(n){var t=this,o="typescript"===this.language?e.tsTypes:e.jsTypes;Object.entries(n).forEach((function(e){var n=a(e,2),r=n[0],i=n[1];-1===o.indexOf(r)&&(t.languageDefaults.addExtraLib(i,"file:///node_modules/".concat(r,".d.ts")),o.push(r))}))}},{key:"editorDidCreate",value:function(){var e=this,n=this.hooks,t=n.onCodeChange,o=n.editorDidCreate;(0,i.isFunction)(o)&&o(this);var r=(0,i.debounce)((function(n){var o=e.monacoModel.getValue();(0,i.isFunction)(t)&&t(n,e.latestCode,o),e.latestCode=o,e.compileCode()}),this.delay);this.monacoEditor.onDidChangeModelContent((function(e){r(e)}))}},{key:"codeDidCompile",value:function(e,n,t){var o=this.hooks,r=o.codeDidCompile,a=o.onError;e?(0,i.isFunction)(a)&&a(e):((0,i.isFunction)(r)&&r(n,t),this.runCode(t))}},{key:"compileCode",value:function(){var e=s(o.mark((function e(){var n,t,r,a=this;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=this.hooks.codeWillCompile,t=this.compilable,!(0,i.isFunction)(n)){e.next=7;break}return e.next=5,n(this.latestCode);case 5:e.t0=e.sent,t=!1!==e.t0;case 7:if(!1!==t){e.next=9;break}return e.abrupt("return");case 9:return r=null,e.abrupt("return",this.getWorkerProcess(this.language).then((function(e){return e(a.monacoModel.uri).then((function(e,n){var t=a.monacoModel.uri.toString();return e.getSemanticDiagnostics(t).then((function(e){e.forEach((function(e){if(1===e.category){var n="string"===typeof e.messageText?e.messageText:e.messageText.messageText;throw new Error(n)}}))})).then((function(){return e.getEmitOutput(t)}))}))})).then((function(e){return a.latestCompiledCode=e.outputFiles[0].text,a.latestCompiledCode})).catch((function(e){r=e})).finally((function(){a.codeDidCompile(r,a.latestCode,a.latestCompiledCode)})));case 11:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"createFile",value:function(){var e=this.compilerOptions.jsx!==r.monaco.languages.typescript.JsxEmit.None,n="typescript"===this.language?"ts":"js",t=e?n+"x":n,o="input".concat((0,i.guid)(),".").concat(t);return r.monaco.Uri.file(o)}},{key:"requireMod",value:function(e){return(0,i.isFunction)(this.scope)?this.scope(e):this.scope[e]}},{key:"monacoEditor",get:function(){if(null==this._monacoEditor)throw new Error("call method init before");return this._monacoEditor}},{key:"monacoModel",get:function(){if(null==this._monacoModel)throw new Error("call method init before");return this._monacoModel},set:function(e){null!=this._monacoModel&&this._monacoModel.dispose(),this._monacoModel=e}},{key:"code",get:function(){return this.latestCode}},{key:"compiledCode",get:function(){return this.latestCompiledCode}},{key:"languageDefaults",get:function(){return"javascript"===this.language?r.monaco.languages.typescript.javascriptDefaults:r.monaco.languages.typescript.typescriptDefaults}}],l=[{key:"defineTheme",value:function(e,n){r.monaco.editor.defineTheme(e,n)}},{key:"setTheme",value:function(e){r.monaco.editor.setTheme(e)}}],t&&d(n.prototype,t),l&&d(n,l),e}();n.Editor=m,m.jsTypes=[],m.tsTypes=[]},155:function(e,n,t){"use strict";function o(){return(65536*(1+Math.random())|0).toString(16).substring(1)}Object.defineProperty(n,"__esModule",{value:!0}),n.isFunction=function(e){return"function"===typeof e},n.isString=function(e){return"string"===typeof e},n.guid=function(){return o()+o()+"-"+o()+"-"+o()+"-"+o()+"-"+o()+o()+o()},n.debounce=function(e,n){var t=null;return function(){for(var o=arguments.length,r=new Array(o),i=0;i<o;i++)r[i]=arguments[i];t&&window.clearTimeout(t),t=window.setTimeout((function(){e.apply(null,r)}),n)}}},227:function(e,n,t){"use strict";function o(e){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.PreviewerEditor=function(e){var n=e.width,t=e.height,o=void 0===t?0:t,r=e.className,c=e.autoHeight,u=void 0!==c&&c,g=e.minHeight,y=void 0===g?0:g,P=e.maxHeight,b=void 0===P?0:P,T=e.getEditor,h=(0,i.useContext)(p.ProviderContext),f=(0,i.useRef)(),x=(0,i.useRef)(null),S=(L=(0,i.useState)(o),v=2,function(e){if(Array.isArray(e))return e}(L)||function(e,n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var t=[],o=!0,r=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(o=(a=l.next()).done)&&(t.push(a.value),!n||t.length!==n);o=!0);}catch(p){r=!0,i=p}finally{try{o||null==l.return||l.return()}finally{if(r)throw i}}return t}}(L,v)||m(L,v)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),k=S[0],C=S[1],I=(0,i.useCallback)(function(e){var n=0;return function(t){if(t){var o=t.monacoEditor,r=t.monacoModel,i=o.getOption(l.monaco.editor.EditorOption.lineHeight),a=r.getLineCount();if(a!==n)e&&e(a*i+20);return n=a,function(e){n=e}}}}((function(e){e<y&&(e=y),b>0&&e>b&&(e=b),C(e)})),[]);var L,v;(0,i.useEffect)((function(){if(null!==x.current){var e=h.editorOptions,n=void 0===e?{}:e,t=h.onErrorCallbacks,o=h.codeDidRunCallbacks,r=h.codeDidCompileCallbacks,i=n.editorDidCreate,a=n.onCodeChange,p=n.onError,c=n.codeDidCompile,m=n.codeDidRun;n.onError=s.runCallbacks.apply(void 0,d(t).concat([p])),n.codeDidCompile=s.runCallbacks.apply(void 0,d(r).concat([c])),n.codeDidRun=s.runCallbacks.apply(void 0,d(o).concat([m])),u&&(n.editorDidCreate=function(e){I(e),i&&i(e)},n.onCodeChange=function(e,n,t){I(f.current),a&&a(e,n,t)}),f.current=new l.Editor(x.current,n),T&&T(f.current)}}),[]);var M=(0,a.default)(r,"rp-editor");return i.default.createElement("div",{className:M,ref:x,style:{width:n,height:k}})};var r,i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!==typeof e)return{default:e};var n=c();if(n&&n.has(e))return n.get(e);var t={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=r?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(t,i,a):t[i]=e[i]}t.default=e,n&&n.set(e,t);return t}(t(0)),a=(r=t(56))&&r.__esModule?r:{default:r},l=t(46),p=t(48),s=t(75);function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function d(e){return function(e){if(Array.isArray(e))return u(e)}(e)||function(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||m(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(e,n){if(e){if("string"===typeof e)return u(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?u(e,n):void 0}}function u(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}},228:function(e,n,t){"use strict";function o(e){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.PreviewerError=function(e){var n=e.className,t=e.renderError,o=(0,i.useContext)(l.ProviderContext),r=(d=(0,i.useState)(null),m=2,function(e){if(Array.isArray(e))return e}(d)||function(e,n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var t=[],o=!0,r=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(o=(a=l.next()).done)&&(t.push(a.value),!n||t.length!==n);o=!0);}catch(p){r=!0,i=p}finally{try{o||null==l.return||l.return()}finally{if(r)throw i}}return t}}(d,m)||function(e,n){if(e){if("string"===typeof e)return s(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?s(e,n):void 0}}(d,m)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),p=r[0],c=r[1];var d,m;(0,i.useMemo)((function(){var e=o.onErrorCallbacks,n=o.codeDidCompileCallbacks,t=o.codeDidRunCallbacks;e.push((function(e){return c(e)})),n.push((function(e,n){return c(null)})),t.push((function(e,n){return c(null)}))}),[]);var u=(0,a.default)(n,"rp-error");if(t){return t(p)}if(!p)return null;return i.default.createElement("div",{className:u},i.default.createElement("pre",null,p.toString()))};var r,i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!==typeof e)return{default:e};var n=p();if(n&&n.has(e))return n.get(e);var t={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=r?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(t,i,a):t[i]=e[i]}t.default=e,n&&n.set(e,t);return t}(t(0)),a=(r=t(56))&&r.__esModule?r:{default:r},l=t(48);function p(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return p=function(){return e},e}function s(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}},229:function(e,n,t){"use strict";function o(e){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.Previewer=function(e){var n=e.className,t=(0,r.useContext)(l.ProviderContext),o=(0,r.useRef)(null);(0,r.useMemo)((function(){var e=function(e){var n=t.editorOptions.onError;setTimeout((function(){n&&n(e)}),0)};t.codeDidRunCallbacks.push((function(n,t){var a=n.default;if(a){var l=(0,p.errorBoundary)(a,(function(n,t){e(n)}));i.default.render(r.default.createElement(l,null),o.current)}else e(new Error("Run results must be exported as default."))}))}),[]);var s=(0,a.default)(n,"rp-previewer");return r.default.createElement("div",{className:s,ref:o})};var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!==typeof e)return{default:e};var n=c();if(n&&n.has(e))return n.get(e);var t={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=r?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(t,i,a):t[i]=e[i]}t.default=e,n&&n.set(e,t);return t}(t(0)),i=s(t(11)),a=s(t(56)),l=t(48),p=t(230);function s(e){return e&&e.__esModule?e:{default:e}}function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}},230:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.errorBoundary=void 0;var o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==i(e)&&"function"!==typeof e)return{default:e};var n=r();if(n&&n.has(e))return n.get(e);var t={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var l=o?Object.getOwnPropertyDescriptor(e,a):null;l&&(l.get||l.set)?Object.defineProperty(t,a,l):t[a]=e[a]}t.default=e,n&&n.set(e,t);return t}(t(0));function r(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}function i(e){return(i="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function l(e,n){return!n||"object"!==i(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function p(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,n){return(c=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}n.errorBoundary=function(e,n){return function(t){!function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&c(e,n)}(g,t);var r,i,d,m,u=(r=g,function(){var e,n=s(r);if(p()){var t=s(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return l(this,e)});function g(e){var n;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,g),(n=u.call(this,e)).state={hasError:!1},n}return i=g,m=[{key:"getDerivedStateFromError",value:function(e){return{hasError:!0}}}],(d=[{key:"componentDidCatch",value:function(e,t){n(e,t)}},{key:"render",value:function(){return this.state.hasError?null:"function"===typeof e?o.default.createElement(e,null):e}}])&&a(i.prototype,d),m&&a(i,m),g}(o.Component)}},231:function(e,n,t){},296:function(e,n,t){},297:function(e,n,t){},300:function(e,n,t){"use strict";t.r(n);var o=t(0),r=t.n(o),i=t(11),a=t.n(i),l=(t(150),t(93)),p=t(115),s=t(12),c=(t(231),t(22));t(295),t(296);function d(e){var n=e.title,t=e.children;return r.a.createElement("div",{className:"demo-block"},r.a.createElement(c.Card,{title:n,style:{width:"100%"}},t))}var m,u=t(141),g=t(142),y=t(143),P=t(144),b='\nimport React, {useMemo, useState, useContext} from \'react\';\n\nexport default function Demo(){\n    const [counter, setCounter] = useState<number>(0);\n\n    return (\n        <div>\n            <div className="demo-counter">{counter}</div>\n            <button \n                onClick={()=>{\n                    setCounter(counter+1);\n                }}\n                className="demo-button"\n            >\n                add\n            </button>\n        </div>\n    )\n}\n    ',T="\nimport {Switch} from '@byte-design/ui';\nimport React, { useState, useCallback, Fragment } from 'react';\n\nexport default function RadioDemo() {\n    const [checked, setChecked]  = useState(true);\n    const handleChange=useCallback((v: boolean) => {\n        setChecked(v);\n    }, []);\n\n    return (\n        <Fragment>\n            <Switch\n                style={{marginRight: '20px'}}\n                size=\"lg\"\n                checked={checked}\n                onValueChange={handleChange}/>\n            <Switch\n                style={{marginRight: '20px'}}\n                size=\"md\"\n                checked={checked}\n                onValueChange={handleChange}/>\n            <Switch\n                size=\"sm\"\n                checked={checked}\n                onValueChange={handleChange}/>\n        </Fragment>\n    );\n};\n    ",h={code:"\nimport {Pager} from '@byte-design/ui';\nimport React, {Fragment, useState} from 'react';\nimport './index.less';\n\nexport default function Demo() {\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const onPageChange = (index: number) => {\n        setPage(index);\n    };\n\n    const onPageSizeChange = (index: number, pageSize: number) => {\n        setPage(index);\n        setPageSize(pageSize);\n    };\n    return (\n        <Fragment>\n            <Pager\n                page={page}\n                total={538}\n                pageSize={pageSize}\n                pageSizeList={[10, 20, 30, 40, 50]}\n                onPageSizeChange={onPageSizeChange}\n                onPageChange={onPageChange}\n            />\n        </Fragment>\n    );\n}\n        ",compiledCode:'\n"use strict";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ui_1 = require("@byte-design/ui");\nconst react_1 = __importStar(require("react"));\nrequire("./index.less");\nfunction Demo() {\n    const [page, setPage] = react_1.useState(1);\n    const [pageSize, setPageSize] = react_1.useState(10);\n    const onPageChange = (index) => {\n        setPage(index);\n    };\n    const onPageSizeChange = (index, pageSize) => {\n        setPage(index);\n        setPageSize(pageSize);\n    };\n    return (react_1.default.createElement(react_1.Fragment, null,\n        react_1.default.createElement(ui_1.Pager, { page: page, total: 538, pageSize: pageSize, pageSizeList: [10, 20, 30, 40, 50], onPageSizeChange: onPageSizeChange, onPageChange: onPageChange })));\n}\nexports.default = Demo;\n        '},f=(t(297),{}),x=Object(p.a)(u);try{for(x.s();!(m=x.n()).done;){var S=m.value;f[S.moduleName]=S.code}}catch(C){x.e(C)}finally{x.f()}Object(s.defineTheme)("active4d",g),Object(s.defineTheme)("amy",y),Object(s.defineTheme)("github",P);var k=function(){var e=Object(o.useRef)(),n=Object(o.useState)(!1),t=Object(l.a)(n,2),i=t[0],a=t[1],p=Object(o.useState)("github"),m=Object(l.a)(p,2),u=m[0],g=m[1],y=i?"":"editor--hidden";return r.a.createElement("div",{className:"demos-contailer"},r.a.createElement(d,{title:"react demo"},r.a.createElement(s.PreviewerProvider,{code:b,editorDidCreate:function(e){console.log("editorDidCreate...")},className:"flex-demo"},r.a.createElement("div",{className:"flex-demo-main"},r.a.createElement(s.PreviewerEditor,{width:600,height:400}),r.a.createElement(s.Previewer,null)),r.a.createElement(s.PreviewerError,{renderError:function(e){return e?r.a.createElement("div",{style:{color:"red"}},e.message):null}}))),r.a.createElement(d,{title:"@byte-design/ui demo"},r.a.createElement(s.PreviewerProvider,{code:T,types:f,scope:{"@byte-design/ui":c},className:"flex-demo",codeDidCompile:function(e,n){}},r.a.createElement("div",{className:"flex-demo-main"},r.a.createElement(s.Previewer,null),r.a.createElement(s.PreviewerEditor,{width:600,autoHeight:!0,minHeight:300})),r.a.createElement(s.PreviewerError,null))),r.a.createElement(d,{title:"delayInit demo"},r.a.createElement(s.PreviewerProvider,{code:h.code,compiledCode:h.compiledCode,types:f,scope:{"@byte-design/ui":c},delayInit:!0},r.a.createElement(s.Previewer,null),r.a.createElement("div",{className:"edittor-toggle",onClick:function(){e.current&&e.current.init(),a(!i)}},"> \u4ee3\u7801\u7f16\u8f91\u5668"),r.a.createElement(s.PreviewerEditor,{className:y,autoHeight:!0,width:600,getEditor:function(n){e.current=n}}),r.a.createElement(s.PreviewerError,null))),r.a.createElement(d,{title:"\u81ea\u5b9a\u4e49\u4e3b\u9898"},r.a.createElement(s.PreviewerProvider,{code:T,types:f,scope:{"@byte-design/ui":c},editorOptions:{theme:u},className:"flex-demo"},r.a.createElement(c.RadioGroup,{type:"button",value:u,onChange:function(e){e&&(g(e),Object(s.setTheme)(e))},style:{marginBottom:10}},r.a.createElement(c.RadioGroup.Button,{value:"github"},"github"),r.a.createElement(c.RadioGroup.Button,{value:"active4d"},"active4d"),r.a.createElement(c.RadioGroup.Button,{value:"amy"},"amy")),r.a.createElement("div",{className:"flex-demo-main"},r.a.createElement(s.PreviewerEditor,{width:600,height:400}),r.a.createElement(s.Previewer,null)),r.a.createElement(s.PreviewerError,null))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a.a.render(r.a.createElement(k,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},46:function(e,n,t){"use strict";function o(e){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"Editor",{enumerable:!0,get:function(){return r.Editor}}),n.monaco=void 0;var r=t(152),i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!==typeof e)return{default:e};var n=a();if(n&&n.has(e))return n.get(e);var t={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var l=r?Object.getOwnPropertyDescriptor(e,i):null;l&&(l.get||l.set)?Object.defineProperty(t,i,l):t[i]=e[i]}t.default=e,n&&n.set(e,t);return t}(t(298));function a(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}n.monaco=i},48:function(e,n,t){"use strict";var o;Object.defineProperty(n,"__esModule",{value:!0}),n.ProviderContext=void 0;var r=((o=t(0))&&o.__esModule?o:{default:o}).default.createContext({editor:null,editorOptions:{},codeDidCompileCallbacks:[],codeDidRunCallbacks:[],onErrorCallbacks:[]});n.ProviderContext=r},75:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.defineTheme=function(e,n){o.Editor.defineTheme(e,n)},n.setTheme=function(e){o.Editor.setTheme(e)},n.isFunction=a,n.mergeOptions=function(e,n,t){var o,i=Object.assign({},e,n),a=r(t);try{for(a.s();!(o=a.n()).done;){var l=o.value;i[l]=Object.assign({},e[l],n[l])}}catch(p){a.e(p)}finally{a.f()}return i},n.runCallbacks=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return function(){var e,t=r(n);try{for(t.s();!(e=t.n()).done;){var o=e.value;a(o)&&o.apply(void 0,arguments)}}catch(i){t.e(i)}finally{t.f()}}};var o=t(46);function r(e){if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=function(e,n){if(!e)return;if("string"===typeof e)return i(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(t);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return i(e,n)}(e))){var n=0,t=function(){};return{s:t,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,r,a=!0,l=!1;return{s:function(){o=e[Symbol.iterator]()},n:function(){var e=o.next();return a=e.done,e},e:function(e){l=!0,r=e},f:function(){try{a||null==o.return||o.return()}finally{if(l)throw r}}}}function i(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}function a(e){return"function"===typeof e}}},[[145,2,3]]]);
//# sourceMappingURL=main.f20a794d.chunk.js.map